# generated by crystal_lib
@[Link(ldflags: "#{__DIR__}/../../ext/libblis.a")]
lib LibBLIS
  fun mutex_init = bli_mutex_init(m : MtxT)
  type MtxT = Void*
  fun mutex_finalize = bli_mutex_finalize(m : MtxT)
  fun mutex_lock = bli_mutex_lock(m : MtxT)
  fun mutex_unlock = bli_mutex_unlock(m : MtxT)
  fun malloc_pool = bli_malloc_pool(size : LibC::SizeT) : Void*
  fun free_pool = bli_free_pool(p : Void*)
  fun malloc_intl = bli_malloc_intl(size : LibC::SizeT) : Void*
  fun calloc_intl = bli_calloc_intl(size : LibC::SizeT) : Void*
  fun free_intl = bli_free_intl(p : Void*)
  fun malloc_user = bli_malloc_user(size : LibC::SizeT) : Void*
  fun free_user = bli_free_user(p : Void*)
  fun malloc_align = bli_malloc_align(f : MallocFt, size : LibC::SizeT, align_size : LibC::SizeT) : Void*
  alias MallocFt = (LibC::SizeT -> Void*)
  fun free_align = bli_free_align(f : FreeFt, p : Void*)
  alias FreeFt = (Void* -> Void)
  fun malloc_noalign = bli_malloc_noalign(f : MallocFt, size : LibC::SizeT) : Void*
  fun free_noalign = bli_free_noalign(f : FreeFt, p : Void*)
  fun malloc_align_check = bli_malloc_align_check(f : MallocFt, size : LibC::SizeT, align_size : LibC::SizeT)
  fun obj_init_full_shallow_copy_of = bli_obj_init_full_shallow_copy_of(a : ObjT*, b : ObjT*)

  struct ObjS
    root : ObjS*
    off : DimT[2]
    dim : DimT[2]
    diag_off : DoffT
    info : ObjbitsT
    elem_size : SizT
    buffer : Void*
    rs : IncT
    cs : IncT
    is : IncT
    scalar : AtomT
    m_padded : DimT
    n_padded : DimT
    ps : IncT
    pd : IncT
    m_panel : DimT
    n_panel : DimT
  end

  type ObjT = ObjS
  alias Int64T = LibC::LongLong
  alias GintT = Int64T
  alias DimT = GintT
  alias DoffT = GintT
  alias Uint64T = LibC::ULongLong
  alias GuintT = Uint64T
  alias ObjbitsT = GuintT
  alias SizT = GuintT
  alias IncT = GintT

  struct Dcomplex
    real : LibC::Double
    imag : LibC::Double
  end

  alias AtomT = Dcomplex
  fun obj_init_subpart_from = bli_obj_init_subpart_from(a : ObjT*, b : ObjT*)
  fun round = bli_round(a : LibC::Double) : LibC::Double
  fun round_to_mult = bli_round_to_mult(val : GuintT, mult : GuintT) : GuintT
  fun is_odd = bli_is_odd(a : GintT) : BoolT
  alias BoolT = GintT
  fun is_even = bli_is_even(a : GintT) : BoolT
  fun swap_dims = bli_swap_dims(dim1 : DimT*, dim2 : DimT*)
  fun swap_incs = bli_swap_incs(inc1 : IncT*, inc2 : IncT*)
  fun toggle_bool = bli_toggle_bool(b : BoolT*)
  fun is_aligned_to = bli_is_aligned_to(p : SizT, size : SizT) : BoolT
  fun is_unaligned_to = bli_is_unaligned_to(p : SizT, size : SizT) : BoolT
  fun offset_past_alignment = bli_offset_past_alignment(p : SizT, size : SizT) : SizT
  fun is_float = bli_is_float(dt : NumT) : BoolT
  enum NumT
    BlisFloat    = 0
    BlisDouble   = 2
    BlisScomplex = 1
    BlisDcomplex = 3
    BlisInt      = 4
    BlisConstant = 5
    BlisDtLo     = 0
    BlisDtHi     = 3
  end
  fun is_double = bli_is_double(dt : NumT) : BoolT
  fun is_scomplex = bli_is_scomplex(dt : NumT) : BoolT
  fun is_dcomplex = bli_is_dcomplex(dt : NumT) : BoolT
  fun is_constant = bli_is_constant(dt : NumT) : BoolT
  fun is_int = bli_is_int(dt : NumT) : BoolT
  fun is_real = bli_is_real(dt : NumT) : BoolT
  fun is_complex = bli_is_complex(dt : NumT) : BoolT
  fun is_single_prec = bli_is_single_prec(dt : NumT) : BoolT
  fun is_double_prec = bli_is_double_prec(dt : NumT) : BoolT
  fun dt_proj_to_real = bli_dt_proj_to_real(dt : NumT) : NumT
  fun dt_proj_to_complex = bli_dt_proj_to_complex(dt : NumT) : NumT
  fun is_notrans = bli_is_notrans(trans : TransT) : BoolT
  enum TransT
    BlisNoTranspose     =  0
    BlisTranspose       =  8
    BlisConjNoTranspose = 16
    BlisConjTranspose   = 24
  end
  fun is_trans = bli_is_trans(trans : TransT) : BoolT
  fun is_conjnotrans = bli_is_conjnotrans(trans : TransT) : BoolT
  fun is_conjtrans = bli_is_conjtrans(trans : TransT) : BoolT
  fun does_notrans = bli_does_notrans(trans : TransT) : BoolT
  fun does_trans = bli_does_trans(trans : TransT) : BoolT
  fun does_noconj = bli_does_noconj(trans : TransT) : BoolT
  fun does_conj = bli_does_conj(trans : TransT) : BoolT
  fun extract_trans = bli_extract_trans(trans : TransT) : TransT
  fun extract_conj = bli_extract_conj(trans : TransT) : ConjT
  enum ConjT
    BlisNoConjugate =  0
    BlisConjugate   = 16
  end
  fun trans_toggled = bli_trans_toggled(trans : TransT) : TransT
  fun trans_toggled_conj = bli_trans_toggled_conj(trans : TransT) : TransT
  fun toggle_trans = bli_toggle_trans(trans : TransT*)
  fun is_left = bli_is_left(side : SideT) : BoolT
  enum SideT
    BlisLeft  = 0
    BlisRight = 1
  end
  fun is_right = bli_is_right(side : SideT) : BoolT
  fun side_toggled = bli_side_toggled(side : SideT) : SideT
  fun toggle_side = bli_toggle_side(side : SideT*)
  fun is_lower = bli_is_lower(uplo : UploT) : BoolT
  enum UploT
    BlisZeros =   0
    BlisLower = 192
    BlisUpper =  96
    BlisDense = 224
  end
  fun is_upper = bli_is_upper(uplo : UploT) : BoolT
  fun is_upper_or_lower = bli_is_upper_or_lower(uplo : UploT) : BoolT
  fun is_dense = bli_is_dense(uplo : UploT) : BoolT
  fun is_zeros = bli_is_zeros(uplo : UploT) : BoolT
  fun uplo_toggled = bli_uplo_toggled(uplo : UploT) : UploT
  fun toggle_uplo = bli_toggle_uplo(uplo : UploT*)
  fun is_general = bli_is_general(struc : StrucT) : BoolT
  enum StrucT
    BlisGeneral    =         0
    BlisHermitian  = 134217728
    BlisSymmetric  = 268435456
    BlisTriangular = 402653184
  end
  fun is_hermitian = bli_is_hermitian(struc : StrucT) : BoolT
  fun is_symmetric = bli_is_symmetric(struc : StrucT) : BoolT
  fun is_triangular = bli_is_triangular(struc : StrucT) : BoolT
  fun is_herm_or_symm = bli_is_herm_or_symm(struc : StrucT) : BoolT
  fun is_noconj = bli_is_noconj(conj : ConjT) : BoolT
  fun is_conj = bli_is_conj(conj : ConjT) : BoolT
  fun conj_toggled = bli_conj_toggled(conj : ConjT) : ConjT
  fun apply_conj = bli_apply_conj(conjapp : ConjT, conj : ConjT) : ConjT
  fun toggle_conj = bli_toggle_conj(conj : ConjT*)
  fun is_nonunit_diag = bli_is_nonunit_diag(diag : DiagT) : BoolT
  enum DiagT
    BlisNonunitDiag =   0
    BlisUnitDiag    = 256
  end
  fun is_unit_diag = bli_is_unit_diag(diag : DiagT) : BoolT
  fun zero_dim1 = bli_zero_dim1(m : DimT) : BoolT
  fun zero_dim2 = bli_zero_dim2(m : DimT, n : DimT) : BoolT
  fun zero_dim3 = bli_zero_dim3(m : DimT, n : DimT, k : DimT) : BoolT
  fun nonzero_dim = bli_nonzero_dim(m : DimT) : BoolT
  fun vector_dim = bli_vector_dim(m : DimT, n : DimT) : BoolT
  fun is_vector = bli_is_vector(m : DimT, n : DimT) : BoolT
  fun is_row_vector = bli_is_row_vector(m : DimT, n : DimT) : BoolT
  fun is_col_vector = bli_is_col_vector(m : DimT, n : DimT) : BoolT
  fun set_dim_with_side = bli_set_dim_with_side(side : SideT, m : DimT, n : DimT, dim : DimT*)
  fun set_dims_with_trans = bli_set_dims_with_trans(trans : TransT, m : DimT, n : DimT, mt : DimT*, nt : DimT*)
  fun set_dims_incs_with_trans = bli_set_dims_incs_with_trans(trans : TransT, m : DimT, n : DimT, rs : IncT, cs : IncT, mt : DimT*, nt : DimT*, rst : IncT*, cst : IncT*)
  fun determine_blocksize_dim_f = bli_determine_blocksize_dim_f(i : DimT, dim : DimT, b_alg : DimT) : DimT
  fun determine_blocksize_dim_b = bli_determine_blocksize_dim_b(i : DimT, dim : DimT, b_alg : DimT) : DimT
  fun vector_inc = bli_vector_inc(trans : TransT, m : DimT, n : DimT, rs : IncT, cs : IncT) : IncT
  fun is_row_stored = bli_is_row_stored(rs : IncT, cs : IncT) : BoolT
  fun is_col_stored = bli_is_col_stored(rs : IncT, cs : IncT) : BoolT
  fun is_row_stored_f = bli_is_row_stored_f(m : DimT, n : DimT, rs : IncT, cs : IncT) : BoolT
  fun is_col_stored_f = bli_is_col_stored_f(m : DimT, n : DimT, rs : IncT, cs : IncT) : BoolT
  fun is_gen_stored = bli_is_gen_stored(rs : IncT, cs : IncT) : BoolT
  fun is_row_tilted = bli_is_row_tilted(m : DimT, n : DimT, rs : IncT, cs : IncT) : BoolT
  fun is_col_tilted = bli_is_col_tilted(m : DimT, n : DimT, rs : IncT, cs : IncT) : BoolT
  fun has_nonunit_inc1 = bli_has_nonunit_inc1(s1 : IncT) : BoolT
  fun has_nonunit_inc2 = bli_has_nonunit_inc2(s1 : IncT, s2 : IncT) : BoolT
  fun has_nonunit_inc3 = bli_has_nonunit_inc3(s1 : IncT, s2 : IncT, s3 : IncT) : BoolT
  fun negate_diag_offset = bli_negate_diag_offset(diagoff : DoffT*)
  fun shift_diag_offset_to_grow_uplo = bli_shift_diag_offset_to_grow_uplo(uplo : UploT, diagoff : DoffT*)
  fun shift_diag_offset_to_shrink_uplo = bli_shift_diag_offset_to_shrink_uplo(uplo : UploT, diagoff : DoffT*)
  fun diag_offset_with_trans = bli_diag_offset_with_trans(trans : TransT, diagoff : DoffT) : BoolT
  fun is_strictly_above_diag = bli_is_strictly_above_diag(diagoff : DoffT, trans : TransT, m : DimT, n : DimT) : BoolT
  fun is_strictly_below_diag = bli_is_strictly_below_diag(diagoff : DoffT, trans : TransT, m : DimT, n : DimT) : BoolT
  fun is_outside_diag = bli_is_outside_diag(diagoff : DoffT, trans : TransT, m : DimT, n : DimT) : BoolT
  fun is_stored_subpart = bli_is_stored_subpart(diagoff : DoffT, trans : TransT, uplo : UploT, m : DimT, n : DimT) : BoolT
  fun is_unstored_subpart = bli_is_unstored_subpart(diagoff : DoffT, trans : TransT, uplo : UploT, m : DimT, n : DimT) : BoolT
  fun is_strictly_above_diag_n = bli_is_strictly_above_diag_n(diagoff : DoffT, m : DimT, n : DimT) : BoolT
  fun is_strictly_below_diag_n = bli_is_strictly_below_diag_n(diagoff : DoffT, m : DimT, n : DimT) : BoolT
  fun intersects_diag_n = bli_intersects_diag_n(diagoff : DoffT, m : DimT, n : DimT) : BoolT
  fun is_stored_subpart_n = bli_is_stored_subpart_n(diagoff : DoffT, uplo : UploT, m : DimT, n : DimT) : BoolT
  fun is_unstored_subpart_n = bli_is_unstored_subpart_n(diagoff : DoffT, uplo : UploT, m : DimT, n : DimT) : BoolT
  fun prune_unstored_region_top_l = bli_prune_unstored_region_top_l(diagoff : DoffT*, m : DimT*, n : DimT*, offm_inc : DimT*)
  fun prune_unstored_region_right_l = bli_prune_unstored_region_right_l(diagoff : DoffT*, m : DimT*, n : DimT*, offn_inc : DimT*)
  fun prune_unstored_region_left_u = bli_prune_unstored_region_left_u(diagoff : DoffT*, m : DimT*, n : DimT*, offn_inc : DimT*)
  fun prune_unstored_region_bottom_u = bli_prune_unstored_region_bottom_u(diagoff : DoffT*, m : DimT*, n : DimT*, offm_inc : DimT*)
  fun rotate180_trapezoid = bli_rotate180_trapezoid(diagoff : DoffT*, uplo : UploT*, m : DimT*, n : DimT*)
  fun reflect_about_diag = bli_reflect_about_diag(diagoff : DoffT*, uplo : UploT*, m : DimT*, n : DimT*)
  fun reverse_index_direction = bli_reverse_index_direction(n : DimT, start : DimT*, _end : DimT*)
  fun is_m_dim = bli_is_m_dim(mdim : MdimT) : BoolT
  enum MdimT
    BlisM = 0
    BlisN = 1
  end
  fun is_n_dim = bli_is_n_dim(mdim : MdimT) : BoolT
  fun dim_toggled = bli_dim_toggled(mdim : MdimT) : MdimT
  fun toggle_dim = bli_toggle_dim(mdim : MdimT*)
  fun is_edge_f = bli_is_edge_f(i : DimT, n_iter : DimT, n_left : DimT) : BoolT
  fun is_not_edge_f = bli_is_not_edge_f(i : DimT, n_iter : DimT, n_left : DimT) : BoolT
  fun is_edge_b = bli_is_edge_b(i : DimT, n_iter : DimT, n_left : DimT) : BoolT
  fun is_not_edge_b = bli_is_not_edge_b(i : DimT, n_iter : DimT, n_left : DimT) : BoolT
  fun is_last_iter = bli_is_last_iter(i : DimT, n_iter : DimT, tid : DimT, nth : DimT) : BoolT
  fun packbuf_index = bli_packbuf_index(buf_type : PackbufT) : GuintT
  enum PackbufT
    BlisBufferForABlock =         0
    BlisBufferForBPanel =  33554432
    BlisBufferForCPanel =  67108864
    BlisBufferForGenUse = 100663296
  end
  fun is_packed = bli_is_packed(schema : PackT) : BoolT
  enum PackT
    BlisNotPacked          =       0
    BlisPackedUnspec       = 4194304
    BlisPackedVector       = 4194304
    BlisPackedRows         = 4194304
    BlisPackedColumns      = 4259840
    BlisPackedRowPanels    = 4325376
    BlisPackedColPanels    = 4390912
    BlisPackedRowPanels4Mi = 4587520
    BlisPackedColPanels4Mi = 4653056
    BlisPackedRowPanels3Mi = 4849664
    BlisPackedColPanels3Mi = 4915200
    BlisPackedRowPanels4Ms = 5111808
    BlisPackedColPanels4Ms = 5177344
    BlisPackedRowPanels3Ms = 5373952
    BlisPackedColPanels3Ms = 5439488
    BlisPackedRowPanelsRo  = 5636096
    BlisPackedColPanelsRo  = 5701632
    BlisPackedRowPanelsIo  = 5898240
    BlisPackedColPanelsIo  = 5963776
    BlisPackedRowPanelsRpi = 6160384
    BlisPackedColPanelsRpi = 6225920
    BlisPackedRowPanels1E  = 6422528
    BlisPackedColPanels1E  = 6488064
    BlisPackedRowPanels1R  = 6684672
    BlisPackedColPanels1R  = 6750208
  end
  fun is_row_packed = bli_is_row_packed(schema : PackT) : BoolT
  fun is_col_packed = bli_is_col_packed(schema : PackT) : BoolT
  fun is_panel_packed = bli_is_panel_packed(schema : PackT) : BoolT
  fun is_4mi_packed = bli_is_4mi_packed(schema : PackT) : BoolT
  fun is_3mi_packed = bli_is_3mi_packed(schema : PackT) : BoolT
  fun is_3ms_packed = bli_is_3ms_packed(schema : PackT) : BoolT
  fun is_ro_packed = bli_is_ro_packed(schema : PackT) : BoolT
  fun is_io_packed = bli_is_io_packed(schema : PackT) : BoolT
  fun is_rpi_packed = bli_is_rpi_packed(schema : PackT) : BoolT
  fun is_rih_packed = bli_is_rih_packed(schema : PackT) : BoolT
  fun is_1r_packed = bli_is_1r_packed(schema : PackT) : BoolT
  fun is_1e_packed = bli_is_1e_packed(schema : PackT) : BoolT
  fun is_1m_packed = bli_is_1m_packed(schema : PackT) : BoolT
  fun is_nat_packed = bli_is_nat_packed(schema : PackT) : BoolT
  fun is_ind_packed = bli_is_ind_packed(schema : PackT) : BoolT
  fun pack_schema_index = bli_pack_schema_index(schema : PackT) : GuintT
  fun ptr_inc_by_frac = bli_ptr_inc_by_frac(p0 : Void*, sizeof_p0 : SizT, num : DimT, den : DimT) : Void*
  fun is_null = bli_is_null(p : Void*) : BoolT
  fun is_nonnull = bli_is_nonnull(p : Void*) : BoolT
  fun set_dims_incs_uplo_1m = bli_set_dims_incs_uplo_1m(diagoffa : DoffT, diaga : DiagT, uploa : UploT, m : DimT, n : DimT, rs_a : IncT, cs_a : IncT, uplo_eff : UploT*, n_elem_max : DimT*, n_iter : DimT*, inca : IncT*, lda : IncT*, ij0 : DimT*, n_shift : DimT*)
  fun set_dims_incs_uplo_1m_noswap = bli_set_dims_incs_uplo_1m_noswap(diagoffa : DoffT, diaga : DiagT, uploa : UploT, m : DimT, n : DimT, rs_a : IncT, cs_a : IncT, uplo_eff : UploT*, n_elem_max : DimT*, n_iter : DimT*, inca : IncT*, lda : IncT*, ij0 : DimT*, n_shift : DimT*)
  fun set_dims_incs_uplo_2m = bli_set_dims_incs_uplo_2m(diagoffa : DoffT, diaga : DiagT, transa : TransT, uploa : UploT, m : DimT, n : DimT, rs_a : IncT, cs_a : IncT, rs_b : IncT, cs_b : IncT, uplo_eff : UploT*, n_elem_max : DimT*, n_iter : DimT*, inca : IncT*, lda : IncT*, incb : IncT*, ldb : IncT*, ij0 : DimT*, n_shift : DimT*)
  fun set_dims_incs_1d = bli_set_dims_incs_1d(diagoffx : DoffT, m : DimT, n : DimT, rs_x : IncT, cs_x : IncT, offx : DimT*, n_elem : DimT*, incx : IncT*)
  fun set_dims_incs_2d = bli_set_dims_incs_2d(diagoffx : DoffT, transx : TransT, m : DimT, n : DimT, rs_x : IncT, cs_x : IncT, rs_y : IncT, cs_y : IncT, offx : DimT*, offy : DimT*, n_elem : DimT*, incx : IncT*, incy : IncT*)
  fun obj_dt = bli_obj_dt(obj : ObjT*) : NumT
  fun obj_is_float = bli_obj_is_float(obj : ObjT*) : BoolT
  fun obj_is_double = bli_obj_is_double(obj : ObjT*) : BoolT
  fun obj_is_scomplex = bli_obj_is_scomplex(obj : ObjT*) : BoolT
  fun obj_is_dcomplex = bli_obj_is_dcomplex(obj : ObjT*) : BoolT
  fun obj_is_int = bli_obj_is_int(obj : ObjT*) : BoolT
  fun obj_is_const = bli_obj_is_const(obj : ObjT*) : BoolT
  fun obj_domain = bli_obj_domain(obj : ObjT*) : ObjbitsT
  fun obj_is_real = bli_obj_is_real(obj : ObjT*) : BoolT
  fun obj_is_complex = bli_obj_is_complex(obj : ObjT*) : BoolT
  fun obj_prec = bli_obj_prec(obj : ObjT*) : ObjbitsT
  fun obj_is_double_prec = bli_obj_is_double_prec(obj : ObjT*) : BoolT
  fun obj_dt_proj_to_real = bli_obj_dt_proj_to_real(obj : ObjT*) : NumT
  fun obj_dt_proj_to_complex = bli_obj_dt_proj_to_complex(obj : ObjT*) : NumT
  fun obj_target_dt = bli_obj_target_dt(obj : ObjT*) : NumT
  fun obj_exec_dt = bli_obj_exec_dt(obj : ObjT*) : NumT
  fun obj_conjtrans_status = bli_obj_conjtrans_status(obj : ObjT*) : TransT
  fun obj_onlytrans_status = bli_obj_onlytrans_status(obj : ObjT*) : TransT
  fun obj_has_trans = bli_obj_has_trans(obj : ObjT*) : BoolT
  fun obj_has_notrans = bli_obj_has_notrans(obj : ObjT*) : BoolT
  fun obj_conj_status = bli_obj_conj_status(obj : ObjT*) : ConjT
  fun obj_has_conj = bli_obj_has_conj(obj : ObjT*) : BoolT
  fun obj_has_noconj = bli_obj_has_noconj(obj : ObjT*) : BoolT
  fun obj_uplo = bli_obj_uplo(obj : ObjT*) : UploT
  fun obj_is_upper = bli_obj_is_upper(obj : ObjT*) : BoolT
  fun obj_is_lower = bli_obj_is_lower(obj : ObjT*) : BoolT
  fun obj_is_upper_or_lower = bli_obj_is_upper_or_lower(obj : ObjT*) : BoolT
  fun obj_is_dense = bli_obj_is_dense(obj : ObjT*) : BoolT
  fun obj_is_zeros = bli_obj_is_zeros(obj : ObjT*) : BoolT
  fun obj_diag = bli_obj_diag(obj : ObjT*) : DiagT
  fun obj_has_nonunit_diag = bli_obj_has_nonunit_diag(obj : ObjT*) : BoolT
  fun obj_has_unit_diag = bli_obj_has_unit_diag(obj : ObjT*) : BoolT
  fun obj_has_inverted_diag = bli_obj_has_inverted_diag(obj : ObjT*) : BoolT
  fun obj_is_pack_rev_if_upper = bli_obj_is_pack_rev_if_upper(obj : ObjT*) : BoolT
  fun obj_is_pack_rev_if_lower = bli_obj_is_pack_rev_if_lower(obj : ObjT*) : BoolT
  fun obj_pack_schema = bli_obj_pack_schema(obj : ObjT*) : PackT
  fun obj_is_packed = bli_obj_is_packed(obj : ObjT*) : BoolT
  fun obj_is_row_packed = bli_obj_is_row_packed(obj : ObjT*) : BoolT
  fun obj_is_col_packed = bli_obj_is_col_packed(obj : ObjT*) : BoolT
  fun obj_is_panel_packed = bli_obj_is_panel_packed(obj : ObjT*) : BoolT
  fun obj_pack_buffer_type = bli_obj_pack_buffer_type(obj : ObjT*) : PackbufT
  fun obj_struc = bli_obj_struc(obj : ObjT*) : StrucT
  fun obj_is_general = bli_obj_is_general(obj : ObjT*) : BoolT
  fun obj_is_hermitian = bli_obj_is_hermitian(obj : ObjT*) : BoolT
  fun obj_is_symmetric = bli_obj_is_symmetric(obj : ObjT*) : BoolT
  fun obj_is_triangular = bli_obj_is_triangular(obj : ObjT*) : BoolT
  fun obj_apply_trans = bli_obj_apply_trans(trans : TransT, obj : ObjT*)
  fun obj_apply_conj = bli_obj_apply_conj(conj : ConjT, obj : ObjT*)
  fun obj_set_conjtrans = bli_obj_set_conjtrans(trans : TransT, obj : ObjT*)
  fun obj_set_onlytrans = bli_obj_set_onlytrans(trans : TransT, obj : ObjT*)
  fun obj_set_conj = bli_obj_set_conj(conj : ConjT, obj : ObjT*)
  fun obj_set_uplo = bli_obj_set_uplo(uplo : UploT, obj : ObjT*)
  fun obj_set_diag = bli_obj_set_diag(diag : DiagT, obj : ObjT*)
  fun obj_set_invert_diag = bli_obj_set_invert_diag(invdiag : InvdiagT, obj : ObjT*)
  enum InvdiagT
    BlisNoInvertDiag =   0
    BlisInvertDiag   = 512
  end
  fun obj_set_dt = bli_obj_set_dt(dt : NumT, obj : ObjT*)
  fun obj_set_target_dt = bli_obj_set_target_dt(dt : NumT, obj : ObjT*)
  fun obj_set_exec_dt = bli_obj_set_exec_dt(dt : NumT, obj : ObjT*)
  fun obj_set_pack_schema = bli_obj_set_pack_schema(schema : PackT, obj : ObjT*)
  fun obj_set_pack_order_if_upper = bli_obj_set_pack_order_if_upper(ordif : PackordT, obj : ObjT*)
  enum PackordT
    BlisPackFwdIfUpper =        0
    BlisPackRevIfUpper =  8388608
    BlisPackFwdIfLower =        0
    BlisPackRevIfLower = 16777216
  end
  fun obj_set_pack_order_if_lower = bli_obj_set_pack_order_if_lower(ordif : PackordT, obj : ObjT*)
  fun obj_set_pack_buffer_type = bli_obj_set_pack_buffer_type(buf_type : PackbufT, obj : ObjT*)
  fun obj_set_struc = bli_obj_set_struc(struc : StrucT, obj : ObjT*)
  fun obj_toggle_trans = bli_obj_toggle_trans(obj : ObjT*)
  fun obj_toggle_conj = bli_obj_toggle_conj(obj : ObjT*)
  fun obj_toggle_uplo = bli_obj_toggle_uplo(obj : ObjT*)
  fun obj_root = bli_obj_root(obj : ObjT*) : ObjT*
  fun obj_root_is_general = bli_obj_root_is_general(obj : ObjT*) : BoolT
  fun obj_root_is_hermitian = bli_obj_root_is_hermitian(obj : ObjT*) : BoolT
  fun obj_root_is_symmetric = bli_obj_root_is_symmetric(obj : ObjT*) : BoolT
  fun obj_root_is_triangular = bli_obj_root_is_triangular(obj : ObjT*) : BoolT
  fun obj_root_is_herm_or_symm = bli_obj_root_is_herm_or_symm(obj : ObjT*) : BoolT
  fun obj_root_is_upper = bli_obj_root_is_upper(obj : ObjT*) : BoolT
  fun obj_root_is_lower = bli_obj_root_is_lower(obj : ObjT*) : BoolT
  fun obj_set_as_root = bli_obj_set_as_root(obj : ObjT*)
  fun obj_diag_offset = bli_obj_diag_offset(obj : ObjT*) : DoffT
  fun obj_diag_offset_after_trans = bli_obj_diag_offset_after_trans(obj : ObjT*) : DoffT
  fun obj_set_diag_offset = bli_obj_set_diag_offset(offset : DoffT, obj : ObjT*)
  fun obj_negate_diag_offset = bli_obj_negate_diag_offset(obj : ObjT*)
  fun obj_inc_diag_offset = bli_obj_inc_diag_offset(offset : DoffT, obj : ObjT*)
  fun obj_length = bli_obj_length(obj : ObjT*) : DimT
  fun obj_width = bli_obj_width(obj : ObjT*) : DimT
  fun obj_dim = bli_obj_dim(mdim : MdimT, obj : ObjT*) : DimT
  fun obj_min_dim = bli_obj_min_dim(obj : ObjT*) : DimT
  fun obj_max_dim = bli_obj_max_dim(obj : ObjT*) : DimT
  fun obj_length_after_trans = bli_obj_length_after_trans(obj : ObjT*) : DimT
  fun obj_width_after_trans = bli_obj_width_after_trans(obj : ObjT*) : DimT
  fun obj_is_1x1 = bli_obj_is_1x1(x : ObjT*) : BoolT
  fun obj_row_stride = bli_obj_row_stride(obj : ObjT*) : IncT
  fun obj_col_stride = bli_obj_col_stride(obj : ObjT*) : IncT
  fun obj_imag_stride = bli_obj_imag_stride(obj : ObjT*) : IncT
  fun obj_row_stride_mag = bli_obj_row_stride_mag(obj : ObjT*) : IncT
  fun obj_col_stride_mag = bli_obj_col_stride_mag(obj : ObjT*) : IncT
  fun obj_imag_stride_mag = bli_obj_imag_stride_mag(obj : ObjT*) : IncT
  fun obj_length_stored = bli_obj_length_stored(obj : ObjT*) : DimT
  fun obj_width_stored = bli_obj_width_stored(obj : ObjT*) : DimT
  fun obj_length_stored_after_trans = bli_obj_length_stored_after_trans(obj : ObjT*) : DimT
  fun obj_width_stored_after_trans = bli_obj_width_stored_after_trans(obj : ObjT*) : DimT
  fun obj_vector_dim = bli_obj_vector_dim(x : ObjT*) : DimT
  fun obj_vector_inc = bli_obj_vector_inc(x : ObjT*) : IncT
  fun obj_is_vector = bli_obj_is_vector(x : ObjT*) : BoolT
  fun obj_is_row_vector = bli_obj_is_row_vector(x : ObjT*) : BoolT
  fun obj_is_col_vector = bli_obj_is_col_vector(x : ObjT*) : BoolT
  fun obj_has_zero_dim = bli_obj_has_zero_dim(x : ObjT*) : BoolT
  fun obj_set_length = bli_obj_set_length(m : DimT, obj : ObjT*)
  fun obj_set_width = bli_obj_set_width(n : DimT, obj : ObjT*)
  fun obj_set_dim = bli_obj_set_dim(mdim : MdimT, dim_val : DimT, obj : ObjT*)
  fun obj_set_dims = bli_obj_set_dims(m : DimT, n : DimT, obj : ObjT*)
  fun obj_set_dims_with_trans = bli_obj_set_dims_with_trans(trans : TransT, m : DimT, n : DimT, obj : ObjT*)
  fun obj_is_row_stored = bli_obj_is_row_stored(obj : ObjT*) : BoolT
  fun obj_is_col_stored = bli_obj_is_col_stored(obj : ObjT*) : BoolT
  fun obj_is_gen_stored = bli_obj_is_gen_stored(obj : ObjT*) : BoolT
  fun obj_is_row_tilted = bli_obj_is_row_tilted(obj : ObjT*) : BoolT
  fun obj_is_col_tilted = bli_obj_is_col_tilted(obj : ObjT*) : BoolT
  fun obj_set_strides = bli_obj_set_strides(rs : IncT, cs : IncT, obj : ObjT*)
  fun obj_set_imag_stride = bli_obj_set_imag_stride(is : IncT, obj : ObjT*)
  fun obj_row_off = bli_obj_row_off(obj : ObjT*) : DimT
  fun obj_col_off = bli_obj_col_off(obj : ObjT*) : DimT
  fun obj_off = bli_obj_off(mdim : MdimT, obj : ObjT*) : DimT
  fun obj_set_off = bli_obj_set_off(mdim : MdimT, offset : DimT, obj : ObjT*)
  fun obj_set_offs = bli_obj_set_offs(offm : DimT, offn : DimT, obj : ObjT*)
  fun obj_inc_off = bli_obj_inc_off(mdim : MdimT, offset : DimT, obj : ObjT*)
  fun obj_inc_offs = bli_obj_inc_offs(offm : DimT, offn : DimT, obj : ObjT*)
  fun obj_is_strictly_above_diag = bli_obj_is_strictly_above_diag(obj : ObjT*) : BoolT
  fun obj_is_strictly_below_diag = bli_obj_is_strictly_below_diag(obj : ObjT*) : BoolT
  fun obj_is_outside_diag = bli_obj_is_outside_diag(obj : ObjT*) : BoolT
  fun obj_intersects_diag = bli_obj_intersects_diag(obj : ObjT*) : BoolT
  fun obj_is_unstored_subpart = bli_obj_is_unstored_subpart(obj : ObjT*) : BoolT
  fun obj_buffer = bli_obj_buffer(obj : ObjT*) : Void*
  fun obj_set_buffer = bli_obj_set_buffer(p : Void*, obj : ObjT*)
  fun obj_internal_scalar_buffer = bli_obj_internal_scalar_buffer(obj : ObjT*) : Void*
  fun obj_copy_internal_scalar = bli_obj_copy_internal_scalar(a : ObjT*, b : ObjT*)
  fun obj_elem_size = bli_obj_elem_size(obj : ObjT*) : SizT
  fun obj_set_elem_size = bli_obj_set_elem_size(size : SizT, obj : ObjT*)
  fun obj_padded_length = bli_obj_padded_length(obj : ObjT*) : DimT
  fun obj_padded_width = bli_obj_padded_width(obj : ObjT*) : DimT
  fun obj_set_padded_length = bli_obj_set_padded_length(m : DimT, obj : ObjT*)
  fun obj_set_padded_width = bli_obj_set_padded_width(n : DimT, obj : ObjT*)
  fun obj_set_padded_dims = bli_obj_set_padded_dims(m : DimT, n : DimT, obj : ObjT*)
  fun obj_panel_length = bli_obj_panel_length(obj : ObjT*) : DimT
  fun obj_panel_width = bli_obj_panel_width(obj : ObjT*) : DimT
  fun obj_panel_dim = bli_obj_panel_dim(obj : ObjT*) : IncT
  fun obj_panel_stride = bli_obj_panel_stride(obj : ObjT*) : IncT
  fun obj_set_panel_length = bli_obj_set_panel_length(m : DimT, obj : ObjT*)
  fun obj_set_panel_width = bli_obj_set_panel_width(n : DimT, obj : ObjT*)
  fun obj_set_panel_dims = bli_obj_set_panel_dims(m : DimT, n : DimT, obj : ObjT*)
  fun obj_set_panel_dim = bli_obj_set_panel_dim(pd : IncT, obj : ObjT*)
  fun obj_set_panel_stride = bli_obj_set_panel_stride(ps : IncT, obj : ObjT*)
  fun obj_toggle_region_ref = bli_obj_toggle_region_ref(obj : ObjT*)
  fun obj_toggle_uplo_if_trans = bli_obj_toggle_uplo_if_trans(trans : TransT, obj : ObjT*)
  fun obj_alias_to = bli_obj_alias_to(a : ObjT*, b : ObjT*)
  fun obj_is_alias_of = bli_obj_is_alias_of(a : ObjT*, b : ObjT*) : BoolT
  fun obj_alias_with_trans = bli_obj_alias_with_trans(trans : TransT, a : ObjT*, b : ObjT*)
  fun obj_alias_with_conj = bli_obj_alias_with_conj(conja : ConjT, a : ObjT*, b : ObjT*)
  fun obj_set_defaults = bli_obj_set_defaults(obj : ObjT*)
  fun obj_buffer_at_off = bli_obj_buffer_at_off(obj : ObjT*) : Void*
  fun obj_buffer_for_const = bli_obj_buffer_for_const(dt : NumT, obj : ObjT*) : Void*
  fun obj_buffer_for_1x1 = bli_obj_buffer_for_1x1(dt : NumT, obj : ObjT*) : Void*
  fun obj_scalar_set_dt_buffer = bli_obj_scalar_set_dt_buffer(obj : ObjT*, dt_aux : NumT, dt : NumT*, buf : Void**)
  fun obj_swap = bli_obj_swap(a : ObjT*, b : ObjT*)
  fun obj_induce_trans = bli_obj_induce_trans(obj : ObjT*)
  fun obj_reflect_about_diag = bli_obj_reflect_about_diag(obj : ObjT*)
  fun thrcomm_num_threads = bli_thrcomm_num_threads(comm : ThrcommT*) : DimT

  struct ThrcommS
    sent_object : Void*
    n_threads : DimT
    barrier_sense : BoolT
    barrier_threads_arrived : DimT
  end

  type ThrcommT = ThrcommS
  fun thrcomm_create = bli_thrcomm_create(n_threads : DimT) : ThrcommT*
  fun thrcomm_free = bli_thrcomm_free(comm : ThrcommT*)
  fun thrcomm_init = bli_thrcomm_init(comm : ThrcommT*, n_threads : DimT)
  fun thrcomm_cleanup = bli_thrcomm_cleanup(comm : ThrcommT*)
  fun thrcomm_barrier = bli_thrcomm_barrier(comm : ThrcommT*, thread_id : DimT)
  fun thrcomm_bcast = bli_thrcomm_bcast(comm : ThrcommT*, inside_id : DimT, to_send : Void*) : Void*
  fun thrcomm_barrier_atomic = bli_thrcomm_barrier_atomic(comm : ThrcommT*, t_id : DimT)
  fun thread_num_threads = bli_thread_num_threads(t : ThrinfoT*) : DimT

  struct ThrinfoS
    ocomm : ThrcommT*
    ocomm_id : DimT
    n_way : DimT
    work_id : DimT
    free_comm : BoolT
    sub_node : ThrinfoS*
  end

  type ThrinfoT = ThrinfoS
  fun thread_ocomm_id = bli_thread_ocomm_id(t : ThrinfoT*) : DimT
  fun thread_n_way = bli_thread_n_way(t : ThrinfoT*) : DimT
  fun thread_work_id = bli_thread_work_id(t : ThrinfoT*) : DimT
  fun thrinfo_ocomm = bli_thrinfo_ocomm(t : ThrinfoT*) : ThrcommT*
  fun thrinfo_needs_free_comm = bli_thrinfo_needs_free_comm(t : ThrinfoT*) : BoolT
  fun thrinfo_sub_node = bli_thrinfo_sub_node(t : ThrinfoT*) : ThrinfoT*
  fun thread_am_ochief = bli_thread_am_ochief(t : ThrinfoT*) : BoolT
  fun thrinfo_set_sub_node = bli_thrinfo_set_sub_node(sub_node : ThrinfoT*, t : ThrinfoT*)
  fun thread_obroadcast = bli_thread_obroadcast(t : ThrinfoT*, p : Void*) : Void*
  fun thread_obarrier = bli_thread_obarrier(t : ThrinfoT*)
  fun thrinfo_create = bli_thrinfo_create(ocomm : ThrcommT*, ocomm_id : DimT, n_way : DimT, work_id : DimT, free_comm : BoolT, sub_node : ThrinfoT*) : ThrinfoT*
  fun thrinfo_init = bli_thrinfo_init(thread : ThrinfoT*, ocomm : ThrcommT*, ocomm_id : DimT, n_way : DimT, work_id : DimT, free_comm : BoolT, sub_node : ThrinfoT*)
  fun thrinfo_init_single = bli_thrinfo_init_single(thread : ThrinfoT*)
  fun thrinfo_create_for_cntl = bli_thrinfo_create_for_cntl(cntx : CntxT*, cntl_par : CntlT*, cntl_chl : CntlT*, thread_par : ThrinfoT*) : ThrinfoT*

  struct CntxS
    blkszs : BlkszT[11]
    bmults : BszidT[11]
    l3_vir_ukrs : FuncT[5]
    l3_nat_ukrs : FuncT[5]
    l3_nat_ukrs_prefs : MboolT[5]
    l1f_kers : FuncT[5]
    l1v_kers : FuncT[14]
    packm_kers : FuncT[32]
    unpackm_kers : FuncT[32]
    method : IndT
    schema_a_block : PackT
    schema_b_panel : PackT
    schema_c_panel : PackT
    anti_pref : BoolT
    thrloop : DimT[6]
    membrk : MembrkT*
  end

  type CntxT = CntxS

  struct BlkszS
    v : DimT[4]
    e : DimT[4]
  end

  type BlkszT = BlkszS
  enum BszidT
    BlisKr     =  0
    BlisMr     =  1
    BlisNr     =  2
    BlisMc     =  3
    BlisKc     =  4
    BlisNc     =  5
    BlisM2     =  6
    BlisN2     =  7
    BlisAf     =  8
    BlisDf     =  9
    BlisXf     = 10
    BlisNoPart = 11
  end

  struct FuncS
    ptr : Void*[4]
  end

  type FuncT = FuncS

  struct MboolS
    v : BoolT[4]
  end

  type MboolT = MboolS
  enum IndT
    Blis3Mh  = 0
    Blis3M1  = 1
    Blis4Mh  = 2
    Blis4M1B = 3
    Blis4M1A = 4
    Blis1M   = 5
    BlisNat  = 6
  end

  struct MembrkS
    pools : PoolT[3]
    mutex : MtxT
    malloc_fp : MallocFt
    free_fp : FreeFt
  end

  type MembrkT = MembrkS

  struct PoolT
    block_ptrs : PblkT*
    block_ptrs_len : DimT
    top_index : DimT
    num_blocks : DimT
    block_size : SizT
    align_size : SizT
  end

  struct PblkT
    buf_sys : Void*
    buf_align : Void*
  end

  struct CntlS
    family : OpidT
    bszid : BszidT
    var_func : Void*
    sub_node : CntlS*
    params : Void*
    pack_mem : MemT
  end

  type CntlT = CntlS
  enum OpidT
    BlisGemm  =  0
    BlisHemm  =  1
    BlisHerk  =  2
    BlisHer2K =  3
    BlisSymm  =  4
    BlisSyrk  =  5
    BlisSyr2K =  6
    BlisTrmm3 =  7
    BlisTrmm  =  8
    BlisTrsm  =  9
    BlisNoid  = 10
  end

  struct MemS
    pblk : PblkT
    buf_type : PackbufT
    pool : PoolT*
    membrk : MembrkT*
    size : SizT
  end

  type MemT = MemS
  fun thrinfo_grow = bli_thrinfo_grow(cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun thrinfo_rgrow = bli_thrinfo_rgrow(cntx : CntxT*, cntl_par : CntlT*, cntl_cur : CntlT*, thread_par : ThrinfoT*) : ThrinfoT*
  fun packm_thrinfo_init = bli_packm_thrinfo_init(thread : ThrinfoT*, ocomm : ThrcommT*, ocomm_id : DimT, n_way : DimT, work_id : DimT, sub_node : ThrinfoT*)
  fun packm_thrinfo_init_single = bli_packm_thrinfo_init_single(thread : ThrinfoT*)
  fun l3_thrinfo_init = bli_l3_thrinfo_init(thread : ThrinfoT*, ocomm : ThrcommT*, ocomm_id : DimT, n_way : DimT, work_id : DimT, sub_node : ThrinfoT*)
  fun l3_thrinfo_init_single = bli_l3_thrinfo_init_single(thread : ThrinfoT*)
  fun l3_thrinfo_free = bli_l3_thrinfo_free(thread : ThrinfoT*)
  fun l3_thrinfo_create_root = bli_l3_thrinfo_create_root(id : DimT, gl_comm : ThrcommT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT**)
  fun l3_thrinfo_print_paths = bli_l3_thrinfo_print_paths(threads : ThrinfoT**)
  fun l3_thrinfo_free_paths = bli_l3_thrinfo_free_paths(threads : ThrinfoT**)
  fun thread_init = bli_thread_init
  fun thread_finalize = bli_thread_finalize
  fun thread_get_range_sub = bli_thread_get_range_sub(thread : ThrinfoT*, n : DimT, bf : DimT, handle_edge_low : BoolT, start : DimT*, _end : DimT*)
  fun thread_get_range_mdim = bli_thread_get_range_mdim(direct : DirT, thr : ThrinfoT*, a : ObjT*, b : ObjT*, c : ObjT*, cntl : CntlT*, cntx : CntxT*, start : DimT*, _end : DimT*) : SizT
  enum DirT
    BlisFwd = 0
    BlisBwd = 1
  end
  fun thread_get_range_ndim = bli_thread_get_range_ndim(direct : DirT, thr : ThrinfoT*, a : ObjT*, b : ObjT*, c : ObjT*, cntl : CntlT*, cntx : CntxT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_l2r = bli_thread_get_range_l2r(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_r2l = bli_thread_get_range_r2l(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_t2b = bli_thread_get_range_t2b(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_b2t = bli_thread_get_range_b2t(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_weighted_l2r = bli_thread_get_range_weighted_l2r(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_weighted_r2l = bli_thread_get_range_weighted_r2l(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_weighted_t2b = bli_thread_get_range_weighted_t2b(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_weighted_b2t = bli_thread_get_range_weighted_b2t(thr : ThrinfoT*, a : ObjT*, bmult : BlkszT*, start : DimT*, _end : DimT*) : SizT
  fun thread_get_range_width_l = bli_thread_get_range_width_l(diagoff_j : DoffT, m : DimT, n_j : DimT, j : DimT, n_way : DimT, bf : DimT, bf_left : DimT, area_per_thr : LibC::Double, handle_edge_low : BoolT) : DimT
  fun find_area_trap_l = bli_find_area_trap_l(m : DimT, n : DimT, diagoff : DoffT) : SizT
  fun thread_get_range_weighted_sub = bli_thread_get_range_weighted_sub(thread : ThrinfoT*, diagoff : DoffT, uplo : UploT, m : DimT, n : DimT, bf : DimT, handle_edge_low : BoolT, j_start_thr : DimT*, j_end_thr : DimT*) : SizT
  fun l3_thread_decorator = bli_l3_thread_decorator(func : L3intT, family : OpidT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  alias L3intT = (ObjT*, ObjT*, ObjT*, ObjT*, ObjT*, CntxT*, CntlT*, ThrinfoT* -> Void)
  fun prime_factorization = bli_prime_factorization(n : DimT, factors : PrimeFactorsT*)

  struct PrimeFactorsT
    n : DimT
    sqrt_n : DimT
    f : DimT
  end

  fun next_prime_factor = bli_next_prime_factor(factors : PrimeFactorsT*) : DimT
  fun partition_2x2 = bli_partition_2x2(nthread : DimT, work1 : DimT, work2 : DimT, nt1 : DimT*, nt2 : DimT*)
  fun thread_get_env = bli_thread_get_env(env : LibC::Char*, fallback : DimT) : DimT
  fun thread_get_jc_nt = bli_thread_get_jc_nt : DimT
  fun thread_get_ic_nt = bli_thread_get_ic_nt : DimT
  fun thread_get_jr_nt = bli_thread_get_jr_nt : DimT
  fun thread_get_ir_nt = bli_thread_get_ir_nt : DimT
  fun thread_get_num_threads = bli_thread_get_num_threads : DimT
  fun thread_set_env = bli_thread_set_env(env : LibC::Char*, value : DimT)
  fun thread_set_jc_nt = bli_thread_set_jc_nt(value : DimT)
  fun thread_set_ic_nt = bli_thread_set_ic_nt(value : DimT)
  fun thread_set_jr_nt = bli_thread_set_jr_nt(value : DimT)
  fun thread_set_ir_nt = bli_thread_set_ir_nt(value : DimT)
  fun thread_set_num_threads = bli_thread_set_num_threads(value : DimT)
  fun gcd = bli_gcd(x : DimT, y : DimT) : DimT
  fun lcm = bli_lcm(x : DimT, y : DimT) : DimT
  fun ipow = bli_ipow(base : DimT, power : DimT) : DimT
  fun cntx_init_haswell = bli_cntx_init_haswell(cntx : CntxT*)
  fun cntx_init_haswell_ref = bli_cntx_init_haswell_ref(cntx : CntxT*)
  fun cntx_init_haswell_ind = bli_cntx_init_haswell_ind(method : IndT, dt : NumT, cntx : CntxT*)
  fun sgemm_haswell_asm_24x4 = bli_sgemm_haswell_asm_24x4(k : DimT, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)

  struct AuxinfoT
    schema_a : PackT
    schema_b : PackT
    a_next : Void*
    b_next : Void*
    is_a : IncT
    is_b : IncT
  end

  fun dgemm_haswell_asm_12x4 = bli_dgemm_haswell_asm_12x4(k : DimT, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemm_haswell_asm_4x24 = bli_sgemm_haswell_asm_4x24(k : DimT, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemm_haswell_asm_4x12 = bli_dgemm_haswell_asm_4x12(k : DimT, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemm_haswell_asm_6x16 = bli_sgemm_haswell_asm_6x16(k : DimT, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemm_haswell_asm_6x8 = bli_dgemm_haswell_asm_6x8(k : DimT, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun cgemm_haswell_asm_3x8 = bli_cgemm_haswell_asm_3x8(k : DimT, alpha : Scomplex*, a : Scomplex*, b : Scomplex*, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)

  struct Scomplex
    real : LibC::Float
    imag : LibC::Float
  end

  fun zgemm_haswell_asm_3x4 = bli_zgemm_haswell_asm_3x4(k : DimT, alpha : Dcomplex*, a : Dcomplex*, b : Dcomplex*, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemm_haswell_asm_16x6 = bli_sgemm_haswell_asm_16x6(k : DimT, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemm_haswell_asm_8x6 = bli_dgemm_haswell_asm_8x6(k : DimT, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun cgemm_haswell_asm_8x3 = bli_cgemm_haswell_asm_8x3(k : DimT, alpha : Scomplex*, a : Scomplex*, b : Scomplex*, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun zgemm_haswell_asm_4x3 = bli_zgemm_haswell_asm_4x3(k : DimT, alpha : Dcomplex*, a : Dcomplex*, b : Dcomplex*, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun samaxv_zen_int = bli_samaxv_zen_int(n : DimT, x : LibC::Float*, incx : IncT, index : DimT*, cntx : CntxT*)
  fun damaxv_zen_int = bli_damaxv_zen_int(n : DimT, x : LibC::Double*, incx : IncT, index : DimT*, cntx : CntxT*)
  fun saxpyv_zen_int = bli_saxpyv_zen_int(conjx : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daxpyv_zen_int = bli_daxpyv_zen_int(conjx : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun saxpyv_zen_int10 = bli_saxpyv_zen_int10(conjx : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daxpyv_zen_int10 = bli_daxpyv_zen_int10(conjx : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun sdotv_zen_int = bli_sdotv_zen_int(conjx : ConjT, conjy : ConjT, n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, rho : LibC::Float*, cntx : CntxT*)
  fun ddotv_zen_int = bli_ddotv_zen_int(conjx : ConjT, conjy : ConjT, n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, rho : LibC::Double*, cntx : CntxT*)
  fun sdotv_zen_int10 = bli_sdotv_zen_int10(conjx : ConjT, conjy : ConjT, n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, rho : LibC::Float*, cntx : CntxT*)
  fun ddotv_zen_int10 = bli_ddotv_zen_int10(conjx : ConjT, conjy : ConjT, n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, rho : LibC::Double*, cntx : CntxT*)
  fun sdotxv_zen_int = bli_sdotxv_zen_int(conjx : ConjT, conjy : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, beta : LibC::Float*, rho : LibC::Float*, cntx : CntxT*)
  fun ddotxv_zen_int = bli_ddotxv_zen_int(conjx : ConjT, conjy : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, beta : LibC::Double*, rho : LibC::Double*, cntx : CntxT*)
  fun sscalv_zen_int = bli_sscalv_zen_int(conjalpha : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dscalv_zen_int = bli_dscalv_zen_int(conjalpha : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun sscalv_zen_int10 = bli_sscalv_zen_int10(conjalpha : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dscalv_zen_int10 = bli_dscalv_zen_int10(conjalpha : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun saxpyf_zen_int_8 = bli_saxpyf_zen_int_8(conja : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Float*, a : LibC::Float*, inca : IncT, lda : IncT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daxpyf_zen_int_8 = bli_daxpyf_zen_int_8(conja : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Double*, a : LibC::Double*, inca : IncT, lda : IncT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun sdotxf_zen_int_8 = bli_sdotxf_zen_int_8(conjat : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Float*, a : LibC::Float*, inca : IncT, lda : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun ddotxf_zen_int_8 = bli_ddotxf_zen_int_8(conjat : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Double*, a : LibC::Double*, inca : IncT, lda : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun sgemm_zen_asm_6x16 = bli_sgemm_zen_asm_6x16(k : DimT, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemm_zen_asm_6x8 = bli_dgemm_zen_asm_6x8(k : DimT, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun cgemm_zen_asm_3x8 = bli_cgemm_zen_asm_3x8(k : DimT, alpha : Scomplex*, a : Scomplex*, b : Scomplex*, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun zgemm_zen_asm_3x4 = bli_zgemm_zen_asm_3x4(k : DimT, alpha : Dcomplex*, a : Dcomplex*, b : Dcomplex*, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemmtrsm_l_zen_asm_6x16 = bli_sgemmtrsm_l_zen_asm_6x16(k : DimT, alpha : LibC::Float*, a1x : LibC::Float*, a11 : LibC::Float*, bx1 : LibC::Float*, b11 : LibC::Float*, c11 : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemmtrsm_l_zen_asm_6x8 = bli_dgemmtrsm_l_zen_asm_6x8(k : DimT, alpha : LibC::Double*, a1x : LibC::Double*, a11 : LibC::Double*, bx1 : LibC::Double*, b11 : LibC::Double*, c11 : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemmtrsm_u_zen_asm_6x16 = bli_sgemmtrsm_u_zen_asm_6x16(k : DimT, alpha : LibC::Float*, a1x : LibC::Float*, a11 : LibC::Float*, bx1 : LibC::Float*, b11 : LibC::Float*, c11 : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemmtrsm_u_zen_asm_6x8 = bli_dgemmtrsm_u_zen_asm_6x8(k : DimT, alpha : LibC::Double*, a1x : LibC::Double*, a11 : LibC::Double*, bx1 : LibC::Double*, b11 : LibC::Double*, c11 : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun init = bli_init
  fun finalize = bli_finalize
  fun init_auto = bli_init_auto
  fun finalize_auto = bli_finalize_auto
  fun init_apis = bli_init_apis
  fun finalize_apis = bli_finalize_apis
  fun init_once = bli_init_once
  fun finalize_once = bli_finalize_once
  fun const_init = bli_const_init
  fun const_finalize = bli_const_finalize
  fun obj_create_check = bli_obj_create_check(dt : NumT, m : DimT, n : DimT, rs : IncT, cs : IncT, obj : ObjT*)
  fun obj_create_without_buffer_check = bli_obj_create_without_buffer_check(dt : NumT, m : DimT, n : DimT, obj : ObjT*)
  fun obj_alloc_buffer_check = bli_obj_alloc_buffer_check(rs : IncT, cs : IncT, is : IncT, obj : ObjT*)
  fun obj_attach_buffer_check = bli_obj_attach_buffer_check(p : Void*, rs : IncT, cs : IncT, is : IncT, obj : ObjT*)
  fun obj_create_scalar_check = bli_obj_create_scalar_check(dt : NumT, obj : ObjT*)
  fun obj_free_check = bli_obj_free_check(obj : ObjT*)
  fun obj_create_const_check = bli_obj_create_const_check(value : LibC::Double, obj : ObjT*)
  fun obj_create_const_copy_of_check = bli_obj_create_const_copy_of_check(a : ObjT*, b : ObjT*)
  fun dt_size_check = bli_dt_size_check(dt : NumT)
  fun dt_string_check = bli_dt_string_check(dt : NumT)
  fun dt_union_check = bli_dt_union_check(dt1 : NumT, dt2 : NumT)
  fun obj_print_check = bli_obj_print_check(label : LibC::Char*, obj : ObjT*)
  fun obj_create = bli_obj_create(dt : NumT, m : DimT, n : DimT, rs : IncT, cs : IncT, obj : ObjT*)
  fun obj_create_with_attached_buffer = bli_obj_create_with_attached_buffer(dt : NumT, m : DimT, n : DimT, p : Void*, rs : IncT, cs : IncT, obj : ObjT*)
  fun obj_create_without_buffer = bli_obj_create_without_buffer(dt : NumT, m : DimT, n : DimT, obj : ObjT*)
  fun obj_alloc_buffer = bli_obj_alloc_buffer(rs : IncT, cs : IncT, is : IncT, obj : ObjT*)
  fun obj_attach_buffer = bli_obj_attach_buffer(p : Void*, rs : IncT, cs : IncT, is : IncT, obj : ObjT*)
  fun obj_create_1x1 = bli_obj_create_1x1(dt : NumT, obj : ObjT*)
  fun obj_create_1x1_with_attached_buffer = bli_obj_create_1x1_with_attached_buffer(dt : NumT, p : Void*, obj : ObjT*)
  fun obj_create_conf_to = bli_obj_create_conf_to(s : ObjT*, d : ObjT*)
  fun obj_free = bli_obj_free(obj : ObjT*)
  fun adjust_strides = bli_adjust_strides(m : DimT, n : DimT, elem_size : SizT, rs : IncT*, cs : IncT*, is : IncT*)
  fun dt_size = bli_dt_size(dt : NumT) : SizT
  fun dt_string = bli_dt_string(dt : NumT) : LibC::Char*
  fun align_dim_to_mult = bli_align_dim_to_mult(dim : DimT, dim_mult : DimT) : DimT
  fun align_dim_to_size = bli_align_dim_to_size(dim : DimT, elem_size : SizT, align_size : SizT) : DimT
  fun align_ptr_to_size = bli_align_ptr_to_size(p : Void*, align_size : LibC::SizeT) : DimT
  fun dt_union = bli_dt_union(dt1 : NumT, dt2 : NumT) : NumT
  fun obj_print = bli_obj_print(label : LibC::Char*, obj : ObjT*)
  fun obj_scalar_init_detached = bli_obj_scalar_init_detached(dt : NumT, beta : ObjT*)
  fun obj_scalar_init_detached_copy_of = bli_obj_scalar_init_detached_copy_of(dt : NumT, conj : ConjT, alpha : ObjT*, beta : ObjT*)
  fun obj_scalar_detach = bli_obj_scalar_detach(a : ObjT*, alpha : ObjT*)
  fun obj_scalar_attach = bli_obj_scalar_attach(conj : ConjT, alpha : ObjT*, a : ObjT*)
  fun obj_scalar_apply_scalar = bli_obj_scalar_apply_scalar(alpha : ObjT*, a : ObjT*)
  fun obj_scalar_reset = bli_obj_scalar_reset(a : ObjT*)
  fun obj_scalar_has_nonzero_imag = bli_obj_scalar_has_nonzero_imag(a : ObjT*) : BoolT
  fun obj_scalar_equals = bli_obj_scalar_equals(a : ObjT*, beta : ObjT*) : BoolT
  fun blksz_get_def = bli_blksz_get_def(dt : NumT, b : BlkszT*) : DimT
  fun blksz_get_max = bli_blksz_get_max(dt : NumT, b : BlkszT*) : DimT
  fun blksz_set_def = bli_blksz_set_def(val : DimT, dt : NumT, b : BlkszT*)
  fun blksz_set_max = bli_blksz_set_max(val : DimT, dt : NumT, b : BlkszT*)
  fun blksz_copy = bli_blksz_copy(b_src : BlkszT*, b_dst : BlkszT*)
  fun blksz_copy_if_pos = bli_blksz_copy_if_pos(b_src : BlkszT*, b_dst : BlkszT*)
  fun blksz_copy_def_dt = bli_blksz_copy_def_dt(dt_src : NumT, b_src : BlkszT*, dt_dst : NumT, b_dst : BlkszT*)
  fun blksz_copy_max_dt = bli_blksz_copy_max_dt(dt_src : NumT, b_src : BlkszT*, dt_dst : NumT, b_dst : BlkszT*)
  fun blksz_copy_dt = bli_blksz_copy_dt(dt_src : NumT, b_src : BlkszT*, dt_dst : NumT, b_dst : BlkszT*)
  fun blksz_scale_def = bli_blksz_scale_def(num : DimT, den : DimT, dt : NumT, b : BlkszT*)
  fun blksz_scale_max = bli_blksz_scale_max(num : DimT, den : DimT, dt : NumT, b : BlkszT*)
  fun blksz_create_ed = bli_blksz_create_ed(b_s : DimT, be_s : DimT, b_d : DimT, be_d : DimT, b_c : DimT, be_c : DimT, b_z : DimT, be_z : DimT) : BlkszT*
  fun blksz_create = bli_blksz_create(b_s : DimT, b_d : DimT, b_c : DimT, b_z : DimT, be_s : DimT, be_d : DimT, be_c : DimT, be_z : DimT) : BlkszT*
  fun blksz_init_ed = bli_blksz_init_ed(b : BlkszT*, b_s : DimT, be_s : DimT, b_d : DimT, be_d : DimT, b_c : DimT, be_c : DimT, b_z : DimT, be_z : DimT)
  fun blksz_init = bli_blksz_init(b : BlkszT*, b_s : DimT, b_d : DimT, b_c : DimT, b_z : DimT, be_s : DimT, be_d : DimT, be_c : DimT, be_z : DimT)
  fun blksz_init_easy = bli_blksz_init_easy(b : BlkszT*, b_s : DimT, b_d : DimT, b_c : DimT, b_z : DimT)
  fun blksz_free = bli_blksz_free(b : BlkszT*)
  fun blksz_reduce_def_to = bli_blksz_reduce_def_to(dt_bm : NumT, bmult : BlkszT*, dt_bs : NumT, blksz : BlkszT*)
  fun blksz_reduce_max_to = bli_blksz_reduce_max_to(dt_bm : NumT, bmult : BlkszT*, dt_bs : NumT, blksz : BlkszT*)
  fun determine_blocksize = bli_determine_blocksize(direct : DirT, i : DimT, dim : DimT, obj : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun determine_blocksize_f = bli_determine_blocksize_f(i : DimT, dim : DimT, obj : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun determine_blocksize_b = bli_determine_blocksize_b(i : DimT, dim : DimT, obj : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun determine_blocksize_f_sub = bli_determine_blocksize_f_sub(i : DimT, dim : DimT, b_alg : DimT, b_max : DimT) : DimT
  fun determine_blocksize_b_sub = bli_determine_blocksize_b_sub(i : DimT, dim : DimT, b_alg : DimT, b_max : DimT) : DimT
  fun func_get_dt = bli_func_get_dt(dt : NumT, func : FuncT*) : Void*
  fun func_set_dt = bli_func_set_dt(fp : Void*, dt : NumT, func : FuncT*)
  fun func_copy_dt = bli_func_copy_dt(dt_src : NumT, func_src : FuncT*, dt_dst : NumT, func_dst : FuncT*)
  fun func_create = bli_func_create(ptr_s : Void*, ptr_d : Void*, ptr_c : Void*, ptr_z : Void*) : FuncT*
  fun func_init = bli_func_init(f : FuncT*, ptr_s : Void*, ptr_d : Void*, ptr_c : Void*, ptr_z : Void*)
  fun func_init_null = bli_func_init_null(f : FuncT*)
  fun func_free = bli_func_free(f : FuncT*)
  fun func_is_null_dt = bli_func_is_null_dt(dt : NumT, f : FuncT*) : BoolT
  fun func_is_null = bli_func_is_null(f : FuncT*) : BoolT
  fun mbool_get_dt = bli_mbool_get_dt(dt : NumT, mb : MboolT*) : BoolT
  fun mbool_set_dt = bli_mbool_set_dt(val : BoolT, dt : NumT, mb : MboolT*)
  fun mbool_create = bli_mbool_create(b_s : BoolT, b_d : BoolT, b_c : BoolT, b_z : BoolT) : MboolT*
  fun mbool_init = bli_mbool_init(b : MboolT*, b_s : BoolT, b_d : BoolT, b_c : BoolT, b_z : BoolT)
  fun mbool_free = bli_mbool_free(b : MboolT*)
  fun cntx_blkszs_buf = bli_cntx_blkszs_buf(cntx : CntxT*) : BlkszT*
  fun cntx_bmults_buf = bli_cntx_bmults_buf(cntx : CntxT*) : BszidT*
  fun cntx_l3_vir_ukrs_buf = bli_cntx_l3_vir_ukrs_buf(cntx : CntxT*) : FuncT*
  fun cntx_l3_nat_ukrs_buf = bli_cntx_l3_nat_ukrs_buf(cntx : CntxT*) : FuncT*
  fun cntx_l3_nat_ukrs_prefs_buf = bli_cntx_l3_nat_ukrs_prefs_buf(cntx : CntxT*) : MboolT*
  fun cntx_l1f_kers_buf = bli_cntx_l1f_kers_buf(cntx : CntxT*) : FuncT*
  fun cntx_l1v_kers_buf = bli_cntx_l1v_kers_buf(cntx : CntxT*) : FuncT*
  fun cntx_packm_kers_buf = bli_cntx_packm_kers_buf(cntx : CntxT*) : FuncT*
  fun cntx_unpackm_kers_buf = bli_cntx_unpackm_kers_buf(cntx : CntxT*) : FuncT*
  fun cntx_method = bli_cntx_method(cntx : CntxT*) : IndT
  fun cntx_schema_a_block = bli_cntx_schema_a_block(cntx : CntxT*) : PackT
  fun cntx_schema_b_panel = bli_cntx_schema_b_panel(cntx : CntxT*) : PackT
  fun cntx_schema_c_panel = bli_cntx_schema_c_panel(cntx : CntxT*) : PackT
  fun cntx_anti_pref = bli_cntx_anti_pref(cntx : CntxT*) : BoolT
  fun cntx_thrloop = bli_cntx_thrloop(cntx : CntxT*) : DimT*
  fun cntx_get_membrk = bli_cntx_get_membrk(cntx : CntxT*) : MembrkT*
  fun cntx_set_method = bli_cntx_set_method(method : IndT, cntx : CntxT*)
  fun cntx_set_schema_a_block = bli_cntx_set_schema_a_block(schema : PackT, cntx : CntxT*)
  fun cntx_set_schema_b_panel = bli_cntx_set_schema_b_panel(schema : PackT, cntx : CntxT*)
  fun cntx_set_schema_c_panel = bli_cntx_set_schema_c_panel(schema : PackT, cntx : CntxT*)
  fun cntx_set_schema_ab_blockpanel = bli_cntx_set_schema_ab_blockpanel(sa : PackT, sb : PackT, cntx : CntxT*)
  fun cntx_set_anti_pref = bli_cntx_set_anti_pref(anti_pref : BoolT, cntx : CntxT*)
  fun cntx_set_membrk = bli_cntx_set_membrk(membrk : MembrkT*, cntx : CntxT*)
  fun cntx_get_blksz = bli_cntx_get_blksz(bs_id : BszidT, cntx : CntxT*) : BlkszT*
  fun cntx_get_blksz_def_dt = bli_cntx_get_blksz_def_dt(dt : NumT, bs_id : BszidT, cntx : CntxT*) : DimT
  fun cntx_get_blksz_max_dt = bli_cntx_get_blksz_max_dt(dt : NumT, bs_id : BszidT, cntx : CntxT*) : DimT
  fun cntx_get_bmult_id = bli_cntx_get_bmult_id(bs_id : BszidT, cntx : CntxT*) : BszidT
  fun cntx_get_bmult = bli_cntx_get_bmult(bs_id : BszidT, cntx : CntxT*) : BlkszT*
  fun cntx_get_bmult_dt = bli_cntx_get_bmult_dt(dt : NumT, bs_id : BszidT, cntx : CntxT*) : DimT
  fun cntx_get_l3_ukrs = bli_cntx_get_l3_ukrs(ukr_id : L3ukrT, cntx : CntxT*) : FuncT*
  enum L3ukrT
    BlisGemmUkr      = 0
    BlisGemmtrsmLUkr = 1
    BlisGemmtrsmUUkr = 2
    BlisTrsmLUkr     = 3
    BlisTrsmUUkr     = 4
  end
  fun cntx_get_l3_ukr_dt = bli_cntx_get_l3_ukr_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : Void*
  fun cntx_get_l3_vir_ukrs = bli_cntx_get_l3_vir_ukrs(ukr_id : L3ukrT, cntx : CntxT*) : FuncT*
  fun cntx_get_l3_vir_ukr_dt = bli_cntx_get_l3_vir_ukr_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : Void*
  fun cntx_get_l3_nat_ukrs = bli_cntx_get_l3_nat_ukrs(ukr_id : L3ukrT, cntx : CntxT*) : FuncT*
  fun cntx_get_l3_nat_ukr_dt = bli_cntx_get_l3_nat_ukr_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : Void*
  fun cntx_get_l3_nat_ukr_prefs = bli_cntx_get_l3_nat_ukr_prefs(ukr_id : L3ukrT, cntx : CntxT*) : MboolT*
  fun cntx_get_l3_nat_ukr_prefs_dt = bli_cntx_get_l3_nat_ukr_prefs_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_get_l1f_kers = bli_cntx_get_l1f_kers(ker_id : L1fkrT, cntx : CntxT*) : FuncT*
  enum L1fkrT
    BlisAxpy2VKer    = 0
    BlisDotaxpyvKer  = 1
    BlisAxpyfKer     = 2
    BlisDotxfKer     = 3
    BlisDotxaxpyfKer = 4
  end
  fun cntx_get_l1f_ker_dt = bli_cntx_get_l1f_ker_dt(dt : NumT, ker_id : L1fkrT, cntx : CntxT*) : Void*
  fun cntx_get_l1v_kers = bli_cntx_get_l1v_kers(ker_id : L1vkrT, cntx : CntxT*) : FuncT*
  enum L1vkrT
    BlisAddvKer    =  0
    BlisAmaxvKer   =  1
    BlisAxpbyvKer  =  2
    BlisAxpyvKer   =  3
    BlisCopyvKer   =  4
    BlisDotvKer    =  5
    BlisDotxvKer   =  6
    BlisInvertvKer =  7
    BlisScalvKer   =  8
    BlisScal2VKer  =  9
    BlisSetvKer    = 10
    BlisSubvKer    = 11
    BlisSwapvKer   = 12
    BlisXpbyvKer   = 13
  end
  fun cntx_get_l1v_ker_dt = bli_cntx_get_l1v_ker_dt(dt : NumT, ker_id : L1vkrT, cntx : CntxT*) : Void*
  fun cntx_get_packm_kers = bli_cntx_get_packm_kers(ker_id : L1mkrT, cntx : CntxT*) : FuncT*
  enum L1mkrT
    BlisPackm0XkKer    =  0
    BlisPackm1XkKer    =  1
    BlisPackm2XkKer    =  2
    BlisPackm3XkKer    =  3
    BlisPackm4XkKer    =  4
    BlisPackm5XkKer    =  5
    BlisPackm6XkKer    =  6
    BlisPackm7XkKer    =  7
    BlisPackm8XkKer    =  8
    BlisPackm9XkKer    =  9
    BlisPackm10XkKer   = 10
    BlisPackm11XkKer   = 11
    BlisPackm12XkKer   = 12
    BlisPackm13XkKer   = 13
    BlisPackm14XkKer   = 14
    BlisPackm15XkKer   = 15
    BlisPackm16XkKer   = 16
    BlisPackm17XkKer   = 17
    BlisPackm18XkKer   = 18
    BlisPackm19XkKer   = 19
    BlisPackm20XkKer   = 20
    BlisPackm21XkKer   = 21
    BlisPackm22XkKer   = 22
    BlisPackm23XkKer   = 23
    BlisPackm24XkKer   = 24
    BlisPackm25XkKer   = 25
    BlisPackm26XkKer   = 26
    BlisPackm27XkKer   = 27
    BlisPackm28XkKer   = 28
    BlisPackm29XkKer   = 29
    BlisPackm30XkKer   = 30
    BlisPackm31XkKer   = 31
    BlisUnpackm0XkKer  =  0
    BlisUnpackm1XkKer  =  1
    BlisUnpackm2XkKer  =  2
    BlisUnpackm3XkKer  =  3
    BlisUnpackm4XkKer  =  4
    BlisUnpackm5XkKer  =  5
    BlisUnpackm6XkKer  =  6
    BlisUnpackm7XkKer  =  7
    BlisUnpackm8XkKer  =  8
    BlisUnpackm9XkKer  =  9
    BlisUnpackm10XkKer = 10
    BlisUnpackm11XkKer = 11
    BlisUnpackm12XkKer = 12
    BlisUnpackm13XkKer = 13
    BlisUnpackm14XkKer = 14
    BlisUnpackm15XkKer = 15
    BlisUnpackm16XkKer = 16
    BlisUnpackm17XkKer = 17
    BlisUnpackm18XkKer = 18
    BlisUnpackm19XkKer = 19
    BlisUnpackm20XkKer = 20
    BlisUnpackm21XkKer = 21
    BlisUnpackm22XkKer = 22
    BlisUnpackm23XkKer = 23
    BlisUnpackm24XkKer = 24
    BlisUnpackm25XkKer = 25
    BlisUnpackm26XkKer = 26
    BlisUnpackm27XkKer = 27
    BlisUnpackm28XkKer = 28
    BlisUnpackm29XkKer = 29
    BlisUnpackm30XkKer = 30
    BlisUnpackm31XkKer = 31
  end
  fun cntx_get_packm_ker_dt = bli_cntx_get_packm_ker_dt(dt : NumT, ker_id : L1mkrT, cntx : CntxT*) : Void*
  fun cntx_get_unpackm_kers = bli_cntx_get_unpackm_kers(ker_id : L1mkrT, cntx : CntxT*) : FuncT*
  fun cntx_get_unpackm_ker_dt = bli_cntx_get_unpackm_ker_dt(dt : NumT, ker_id : L1mkrT, cntx : CntxT*) : Void*
  fun cntx_jc_way = bli_cntx_jc_way(cntx : CntxT*) : DimT
  fun cntx_pc_way = bli_cntx_pc_way(cntx : CntxT*) : DimT
  fun cntx_ic_way = bli_cntx_ic_way(cntx : CntxT*) : DimT
  fun cntx_jr_way = bli_cntx_jr_way(cntx : CntxT*) : DimT
  fun cntx_ir_way = bli_cntx_ir_way(cntx : CntxT*) : DimT
  fun cntx_pr_way = bli_cntx_pr_way(cntx : CntxT*) : DimT
  fun cntx_way_for_bszid = bli_cntx_way_for_bszid(bszid : BszidT, cntx : CntxT*) : DimT
  fun cntx_get_num_threads = bli_cntx_get_num_threads(cntx : CntxT*) : DimT
  fun cntx_l3_nat_ukr_prefers_rows_dt = bli_cntx_l3_nat_ukr_prefers_rows_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_nat_ukr_prefers_cols_dt = bli_cntx_l3_nat_ukr_prefers_cols_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_nat_ukr_prefers_storage_of = bli_cntx_l3_nat_ukr_prefers_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_nat_ukr_dislikes_storage_of = bli_cntx_l3_nat_ukr_dislikes_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_nat_ukr_eff_prefers_storage_of = bli_cntx_l3_nat_ukr_eff_prefers_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_nat_ukr_eff_dislikes_storage_of = bli_cntx_l3_nat_ukr_eff_dislikes_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_ukr_prefers_rows_dt = bli_cntx_l3_ukr_prefers_rows_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_ukr_prefers_cols_dt = bli_cntx_l3_ukr_prefers_cols_dt(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_ukr_prefers_storage_of = bli_cntx_l3_ukr_prefers_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_ukr_dislikes_storage_of = bli_cntx_l3_ukr_dislikes_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_ukr_eff_prefers_storage_of = bli_cntx_l3_ukr_eff_prefers_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_l3_ukr_eff_dislikes_storage_of = bli_cntx_l3_ukr_eff_dislikes_storage_of(obj : ObjT*, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun cntx_set_blksz = bli_cntx_set_blksz(bs_id : BszidT, blksz : BlkszT*, mult_id : BszidT, cntx : CntxT*)
  fun cntx_set_l3_vir_ukr = bli_cntx_set_l3_vir_ukr(ukr_id : L3ukrT, func : FuncT*, cntx : CntxT*)
  fun cntx_set_l3_nat_ukr = bli_cntx_set_l3_nat_ukr(ukr_id : L3ukrT, func : FuncT*, cntx : CntxT*)
  fun cntx_set_l3_nat_ukr_prefs = bli_cntx_set_l3_nat_ukr_prefs(ukr_id : L3ukrT, prefs : MboolT*, cntx : CntxT*)
  fun cntx_set_l1f_ker = bli_cntx_set_l1f_ker(ker_id : L1fkrT, func : FuncT*, cntx : CntxT*)
  fun cntx_set_l1v_ker = bli_cntx_set_l1v_ker(ker_id : L1vkrT, func : FuncT*, cntx : CntxT*)
  fun cntx_set_packm_ker = bli_cntx_set_packm_ker(ker_id : L1mkrT, func : FuncT*, cntx : CntxT*)
  fun cntx_set_packm_ker_dt = bli_cntx_set_packm_ker_dt(fp : Void*, dt : NumT, ker_id : L1mkrT, cntx : CntxT*)
  fun cntx_set_unpackm_ker = bli_cntx_set_unpackm_ker(ker_id : L1mkrT, func : FuncT*, cntx : CntxT*)
  fun cntx_set_unpackm_ker_dt = bli_cntx_set_unpackm_ker_dt(fp : Void*, dt : NumT, ker_id : L1mkrT, cntx : CntxT*)
  fun cntx_set_thrloop = bli_cntx_set_thrloop(jc : DimT, pc : DimT, ic : DimT, jr : DimT, ir : DimT, cntx : CntxT*)
  fun cntx_clear = bli_cntx_clear(cntx : CntxT*)
  fun cntx_get_num_threads_in = bli_cntx_get_num_threads_in(cntx : CntxT*, cntl : CntlT*) : DimT
  fun cntx_set_blkszs = bli_cntx_set_blkszs(method : IndT, n_bs : DimT, ...)
  fun cntx_set_ind_blkszs = bli_cntx_set_ind_blkszs(method : IndT, n_bs : DimT, ...)
  fun cntx_set_l3_nat_ukrs = bli_cntx_set_l3_nat_ukrs(n_ukrs : DimT, ...)
  fun cntx_set_l1f_kers = bli_cntx_set_l1f_kers(n_kers : DimT, ...)
  fun cntx_set_l1v_kers = bli_cntx_set_l1v_kers(n_kers : DimT, ...)
  fun cntx_set_packm_kers = bli_cntx_set_packm_kers(n_kers : DimT, ...)
  fun cntx_set_thrloop_from_env = bli_cntx_set_thrloop_from_env(l3_op : OpidT, side : SideT, cntx : CntxT*, m : DimT, n : DimT, k : DimT)
  fun cntx_print = bli_cntx_print(cntx : CntxT*)
  fun arch_query_id = bli_arch_query_id : ArchT
  enum ArchT
    BlisArchSkx         =  0
    BlisArchKnl         =  1
    BlisArchKnc         =  2
    BlisArchHaswell     =  3
    BlisArchSandybridge =  4
    BlisArchPenryn      =  5
    BlisArchZen         =  6
    BlisArchExcavator   =  7
    BlisArchSteamroller =  8
    BlisArchPiledriver  =  9
    BlisArchBulldozer   = 10
    BlisArchCortexa57   = 11
    BlisArchCortexa15   = 12
    BlisArchCortexa9    = 13
    BlisArchPower7      = 14
    BlisArchBgq         = 15
    BlisArchGeneric     = 16
  end
  fun gks_init = bli_gks_init
  fun gks_finalize = bli_gks_finalize
  fun gks_init_index = bli_gks_init_index
  fun gks_lookup_nat_cntx = bli_gks_lookup_nat_cntx(id : ArchT) : CntxT*
  fun gks_lookup_ind_cntx = bli_gks_lookup_ind_cntx(id : ArchT, ind : IndT) : CntxT*
  fun gks_register_cntx = bli_gks_register_cntx(id : ArchT, nat_fp : Void*, ref_fp : Void*, ind_fp : Void*)
  fun gks_query_cntx = bli_gks_query_cntx : CntxT*
  fun gks_query_nat_cntx = bli_gks_query_nat_cntx : CntxT*
  fun gks_query_cntx_noinit = bli_gks_query_cntx_noinit : CntxT*
  fun gks_query_ind_cntx = bli_gks_query_ind_cntx(ind : IndT, dt : NumT) : CntxT*
  fun gks_init_ref_cntx = bli_gks_init_ref_cntx(cntx : CntxT*)
  fun gks_cntx_l3_nat_ukr_is_ref = bli_gks_cntx_l3_nat_ukr_is_ref(dt : NumT, ukr_id : L3ukrT, cntx : CntxT*) : BoolT
  fun gks_l3_ukr_impl_string = bli_gks_l3_ukr_impl_string(ukr : L3ukrT, method : IndT, dt : NumT) : LibC::Char*
  fun gks_l3_ukr_impl_type = bli_gks_l3_ukr_impl_type(ukr : L3ukrT, method : IndT, dt : NumT) : KimplT
  enum KimplT
    BlisReferenceUkernel = 0
    BlisVirtualUkernel   = 1
    BlisOptimizedUkernel = 2
    BlisNotapplicUkernel = 3
  end
  fun gemmind_get_avail = bli_gemmind_get_avail(dt : NumT) : Void*
  fun hemmind_get_avail = bli_hemmind_get_avail(dt : NumT) : Void*
  fun herkind_get_avail = bli_herkind_get_avail(dt : NumT) : Void*
  fun her2kind_get_avail = bli_her2kind_get_avail(dt : NumT) : Void*
  fun symmind_get_avail = bli_symmind_get_avail(dt : NumT) : Void*
  fun syrkind_get_avail = bli_syrkind_get_avail(dt : NumT) : Void*
  fun syr2kind_get_avail = bli_syr2kind_get_avail(dt : NumT) : Void*
  fun trmm3ind_get_avail = bli_trmm3ind_get_avail(dt : NumT) : Void*
  fun trmmind_get_avail = bli_trmmind_get_avail(dt : NumT) : Void*
  fun trsmind_get_avail = bli_trsmind_get_avail(dt : NumT) : Void*
  fun l3_ind_oper_find_avail = bli_l3_ind_oper_find_avail(oper : OpidT, dt : NumT) : IndT
  fun l3_ind_set_enable_dt = bli_l3_ind_set_enable_dt(method : IndT, dt : NumT, status : BoolT)
  fun l3_ind_oper_enable_only = bli_l3_ind_oper_enable_only(oper : OpidT, method : IndT, dt : NumT)
  fun l3_ind_oper_set_enable_all = bli_l3_ind_oper_set_enable_all(oper : OpidT, dt : NumT, status : BoolT)
  fun l3_ind_oper_set_enable = bli_l3_ind_oper_set_enable(oper : OpidT, method : IndT, dt : NumT, status : BoolT)
  fun l3_ind_oper_get_enable = bli_l3_ind_oper_get_enable(oper : OpidT, method : IndT, dt : NumT) : BoolT
  fun l3_ind_oper_get_func = bli_l3_ind_oper_get_func(oper : OpidT, method : IndT) : Void*
  fun gemmnat = bli_gemmnat(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemmnat = bli_hemmnat(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herknat = bli_herknat(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2knat = bli_her2knat(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symmnat = bli_symmnat(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrknat = bli_syrknat(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2knat = bli_syr2knat(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm3nat = bli_trmm3nat(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmmnat = bli_trmmnat(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun trsmnat = bli_trsmnat(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun gemmind = bli_gemmind(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemmind = bli_hemmind(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herkind = bli_herkind(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2kind = bli_her2kind(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symmind = bli_symmind(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrkind = bli_syrkind(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2kind = bli_syr2kind(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm3ind = bli_trmm3ind(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmmind = bli_trmmind(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun trsmind = bli_trsmind(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun gemm3m1 = bli_gemm3m1(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm3m1 = bli_hemm3m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk3m1 = bli_herk3m1(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k3m1 = bli_her2k3m1(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm3m1 = bli_symm3m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk3m1 = bli_syrk3m1(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k3m1 = bli_syr2k3m1(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm33m1 = bli_trmm33m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm3m1 = bli_trmm3m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun trsm3m1 = bli_trsm3m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun gemm4m1 = bli_gemm4m1(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm4m1 = bli_hemm4m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk4m1 = bli_herk4m1(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k4m1 = bli_her2k4m1(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm4m1 = bli_symm4m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk4m1 = bli_syrk4m1(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k4m1 = bli_syr2k4m1(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm34m1 = bli_trmm34m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm4m1 = bli_trmm4m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun trsm4m1 = bli_trsm4m1(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun gemm1m = bli_gemm1m(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm1m = bli_hemm1m(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk1m = bli_herk1m(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k1m = bli_her2k1m(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm1m = bli_symm1m(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk1m = bli_syrk1m(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k1m = bli_syr2k1m(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm31m = bli_trmm31m(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm1m = bli_trmm1m(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun trsm1m = bli_trsm1m(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun gemm3mh = bli_gemm3mh(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm3mh = bli_hemm3mh(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk3mh = bli_herk3mh(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k3mh = bli_her2k3mh(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm3mh = bli_symm3mh(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk3mh = bli_syrk3mh(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k3mh = bli_syr2k3mh(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm33mh = bli_trmm33mh(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun gemm4mh = bli_gemm4mh(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm4mh = bli_hemm4mh(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk4mh = bli_herk4mh(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k4mh = bli_her2k4mh(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm4mh = bli_symm4mh(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk4mh = bli_syrk4mh(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k4mh = bli_syr2k4mh(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm34mh = bli_trmm34mh(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun gemm4mb = bli_gemm4mb(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm4mb = bli_hemm4mb(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk4mb = bli_herk4mb(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k4mb = bli_her2k4mb(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm4mb = bli_symm4mb(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk4mb = bli_syrk4mb(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k4mb = bli_syr2k4mb(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm34mb = bli_trmm34mb(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun sgemm3mh = bli_sgemm3mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm3mh = bli_dgemm3mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm3mh = bli_cgemm3mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm3mh = bli_zgemm3mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sgemm3m1 = bli_sgemm3m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm3m1 = bli_dgemm3m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm3m1 = bli_cgemm3m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm3m1 = bli_zgemm3m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sgemm4mh = bli_sgemm4mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm4mh = bli_dgemm4mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm4mh = bli_cgemm4mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm4mh = bli_zgemm4mh(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sgemm4mb = bli_sgemm4mb(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm4mb = bli_dgemm4mb(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm4mb = bli_cgemm4mb(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm4mb = bli_zgemm4mb(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sgemm4m1 = bli_sgemm4m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm4m1 = bli_dgemm4m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm4m1 = bli_cgemm4m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm4m1 = bli_zgemm4m1(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sgemm1m = bli_sgemm1m(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm1m = bli_dgemm1m(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm1m = bli_cgemm1m(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm1m = bli_zgemm1m(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun shemm3mh = bli_shemm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dhemm3mh = bli_dhemm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun chemm3mh = bli_chemm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zhemm3mh = bli_zhemm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun shemm3m1 = bli_shemm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dhemm3m1 = bli_dhemm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun chemm3m1 = bli_chemm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zhemm3m1 = bli_zhemm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun shemm4mh = bli_shemm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dhemm4mh = bli_dhemm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun chemm4mh = bli_chemm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zhemm4mh = bli_zhemm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun shemm4m1 = bli_shemm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dhemm4m1 = bli_dhemm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun chemm4m1 = bli_chemm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zhemm4m1 = bli_zhemm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun shemm1m = bli_shemm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dhemm1m = bli_dhemm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun chemm1m = bli_chemm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zhemm1m = bli_zhemm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2k3mh = bli_sher2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2k3mh = bli_dher2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2k3mh = bli_cher2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2k3mh = bli_zher2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2k3m1 = bli_sher2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2k3m1 = bli_dher2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2k3m1 = bli_cher2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2k3m1 = bli_zher2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2k4mh = bli_sher2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2k4mh = bli_dher2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2k4mh = bli_cher2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2k4mh = bli_zher2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2k4m1 = bli_sher2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2k4m1 = bli_dher2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2k4m1 = bli_cher2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2k4m1 = bli_zher2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2k1m = bli_sher2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2k1m = bli_dher2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2k1m = bli_cher2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2k1m = bli_zher2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sherk3mh = bli_sherk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dherk3mh = bli_dherk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cherk3mh = bli_cherk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zherk3mh = bli_zherk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sherk3m1 = bli_sherk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dherk3m1 = bli_dherk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cherk3m1 = bli_cherk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zherk3m1 = bli_zherk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sherk4mh = bli_sherk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dherk4mh = bli_dherk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cherk4mh = bli_cherk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zherk4mh = bli_zherk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sherk4m1 = bli_sherk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dherk4m1 = bli_dherk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cherk4m1 = bli_cherk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zherk4m1 = bli_zherk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sherk1m = bli_sherk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dherk1m = bli_dherk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cherk1m = bli_cherk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zherk1m = bli_zherk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssymm3mh = bli_ssymm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsymm3mh = bli_dsymm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csymm3mh = bli_csymm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsymm3mh = bli_zsymm3mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssymm3m1 = bli_ssymm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsymm3m1 = bli_dsymm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csymm3m1 = bli_csymm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsymm3m1 = bli_zsymm3m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssymm4mh = bli_ssymm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsymm4mh = bli_dsymm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csymm4mh = bli_csymm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsymm4mh = bli_zsymm4mh(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssymm4m1 = bli_ssymm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsymm4m1 = bli_dsymm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csymm4m1 = bli_csymm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsymm4m1 = bli_zsymm4m1(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssymm1m = bli_ssymm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsymm1m = bli_dsymm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csymm1m = bli_csymm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsymm1m = bli_zsymm1m(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyr2k3mh = bli_ssyr2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyr2k3mh = bli_dsyr2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyr2k3mh = bli_csyr2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyr2k3mh = bli_zsyr2k3mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyr2k3m1 = bli_ssyr2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyr2k3m1 = bli_dsyr2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyr2k3m1 = bli_csyr2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyr2k3m1 = bli_zsyr2k3m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyr2k4mh = bli_ssyr2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyr2k4mh = bli_dsyr2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyr2k4mh = bli_csyr2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyr2k4mh = bli_zsyr2k4mh(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyr2k4m1 = bli_ssyr2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyr2k4m1 = bli_dsyr2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyr2k4m1 = bli_csyr2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyr2k4m1 = bli_zsyr2k4m1(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyr2k1m = bli_ssyr2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyr2k1m = bli_dsyr2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyr2k1m = bli_csyr2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyr2k1m = bli_zsyr2k1m(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyrk3mh = bli_ssyrk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyrk3mh = bli_dsyrk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyrk3mh = bli_csyrk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyrk3mh = bli_zsyrk3mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyrk3m1 = bli_ssyrk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyrk3m1 = bli_dsyrk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyrk3m1 = bli_csyrk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyrk3m1 = bli_zsyrk3m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyrk4mh = bli_ssyrk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyrk4mh = bli_dsyrk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyrk4mh = bli_csyrk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyrk4mh = bli_zsyrk4mh(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyrk4m1 = bli_ssyrk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyrk4m1 = bli_dsyrk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyrk4m1 = bli_csyrk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyrk4m1 = bli_zsyrk4m1(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyrk1m = bli_ssyrk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyrk1m = bli_dsyrk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyrk1m = bli_csyrk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyrk1m = bli_zsyrk1m(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm33mh = bli_strmm33mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dtrmm33mh = bli_dtrmm33mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ctrmm33mh = bli_ctrmm33mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ztrmm33mh = bli_ztrmm33mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm33m1 = bli_strmm33m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dtrmm33m1 = bli_dtrmm33m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ctrmm33m1 = bli_ctrmm33m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ztrmm33m1 = bli_ztrmm33m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm34mh = bli_strmm34mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dtrmm34mh = bli_dtrmm34mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ctrmm34mh = bli_ctrmm34mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ztrmm34mh = bli_ztrmm34mh(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm34m1 = bli_strmm34m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dtrmm34m1 = bli_dtrmm34m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ctrmm34m1 = bli_ctrmm34m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ztrmm34m1 = bli_ztrmm34m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm31m = bli_strmm31m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dtrmm31m = bli_dtrmm31m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ctrmm31m = bli_ctrmm31m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ztrmm31m = bli_ztrmm31m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm3m1 = bli_strmm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrmm3m1 = bli_dtrmm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrmm3m1 = bli_ctrmm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrmm3m1 = bli_ztrmm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun strmm4m1 = bli_strmm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrmm4m1 = bli_dtrmm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrmm4m1 = bli_ctrmm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrmm4m1 = bli_ztrmm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun strmm1m = bli_strmm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrmm1m = bli_dtrmm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrmm1m = bli_ctrmm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrmm1m = bli_ztrmm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun strsm3m1 = bli_strsm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrsm3m1 = bli_dtrsm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrsm3m1 = bli_ctrsm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrsm3m1 = bli_ztrsm3m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun strsm4m1 = bli_strsm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrsm4m1 = bli_dtrsm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrsm4m1 = bli_ctrsm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrsm4m1 = bli_ztrsm4m1(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun strsm1m = bli_strsm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrsm1m = bli_dtrsm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrsm1m = bli_ctrsm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrsm1m = bli_ztrsm1m(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun cntx_ind_stage = bli_cntx_ind_stage(method : IndT, stage : DimT, cntx : CntxT*)
  fun cntx_3mh_stage = bli_cntx_3mh_stage(stage : DimT, cntx : CntxT*)
  fun cntx_3m1_stage = bli_cntx_3m1_stage(stage : DimT, cntx : CntxT*)
  fun cntx_4mh_stage = bli_cntx_4mh_stage(stage : DimT, cntx : CntxT*)
  fun cntx_4mb_stage = bli_cntx_4mb_stage(stage : DimT, cntx : CntxT*)
  fun cntx_4m1_stage = bli_cntx_4m1_stage(stage : DimT, cntx : CntxT*)
  fun cntx_1m_stage = bli_cntx_1m_stage(stage : DimT, cntx : CntxT*)
  fun cntx_nat_stage = bli_cntx_nat_stage(stage : DimT, cntx : CntxT*)
  fun ind_init = bli_ind_init
  fun ind_finalize = bli_ind_finalize
  fun ind_enable = bli_ind_enable(method : IndT)
  fun ind_disable = bli_ind_disable(method : IndT)
  fun ind_disable_all = bli_ind_disable_all
  fun ind_enable_dt = bli_ind_enable_dt(method : IndT, dt : NumT)
  fun ind_disable_dt = bli_ind_disable_dt(method : IndT, dt : NumT)
  fun ind_disable_all_dt = bli_ind_disable_all_dt(dt : NumT)
  fun ind_oper_enable_only = bli_ind_oper_enable_only(oper : OpidT, method : IndT, dt : NumT)
  fun ind_oper_is_impl = bli_ind_oper_is_impl(oper : OpidT, method : IndT) : BoolT
  fun ind_oper_get_avail = bli_ind_oper_get_avail(oper : OpidT, dt : NumT) : Void*
  fun ind_oper_find_avail = bli_ind_oper_find_avail(oper : OpidT, dt : NumT) : IndT
  fun ind_oper_get_avail_impl_string = bli_ind_oper_get_avail_impl_string(oper : OpidT, dt : NumT) : LibC::Char*
  fun ind_get_impl_string = bli_ind_get_impl_string(method : IndT) : LibC::Char*
  fun ind_map_cdt_to_index = bli_ind_map_cdt_to_index(dt : NumT) : NumT
  fun membrk_pool = bli_membrk_pool(pool_index : DimT, membrk : MembrkT*) : PoolT*
  fun membrk_mutex = bli_membrk_mutex(membrk : MembrkT*) : MtxT
  fun membrk_malloc_fp = bli_membrk_malloc_fp(membrk : MembrkT*) : Void*
  fun membrk_free_fp = bli_membrk_free_fp(membrk : MembrkT*) : Void*
  fun membrk_set_malloc_fp = bli_membrk_set_malloc_fp(malloc_fp : Void*, membrk : MembrkT*)
  fun membrk_set_free_fp = bli_membrk_set_free_fp(free_fp : Void*, membrk : MembrkT*)
  fun membrk_lock = bli_membrk_lock(membrk : MembrkT*)
  fun membrk_unlock = bli_membrk_unlock(membrk : MembrkT*)
  fun membrk_malloc = bli_membrk_malloc(size : LibC::SizeT, membrk : MembrkT*) : Void*
  fun membrk_free = bli_membrk_free(p : Void*, membrk : MembrkT*)
  fun membrk_init = bli_membrk_init(cntx : CntxT*, membrk : MembrkT*)
  fun membrk_finalize = bli_membrk_finalize(membrk : MembrkT*)
  fun membrk_acquire_m = bli_membrk_acquire_m(membrk : MembrkT*, req_size : SizT, buf_type : PackbufT, mem : MemT*)
  fun membrk_acquire_v = bli_membrk_acquire_v(membrk : MembrkT*, req_size : SizT, mem : MemT*)
  fun membrk_release = bli_membrk_release(mem : MemT*)
  fun membrk_pool_size = bli_membrk_pool_size(membrk : MembrkT*, buf_type : PackbufT) : SizT
  fun membrk_init_pools = bli_membrk_init_pools(cntx : CntxT*, membrk : MembrkT*)
  fun membrk_finalize_pools = bli_membrk_finalize_pools(membrk : MembrkT*)
  fun membrk_compute_pool_block_sizes = bli_membrk_compute_pool_block_sizes(bs_a : SizT*, bs_b : SizT*, bs_c : SizT*, cntx : CntxT*)
  fun membrk_compute_pool_block_sizes_dt = bli_membrk_compute_pool_block_sizes_dt(dt : NumT, bs_a : SizT*, bs_b : SizT*, bs_c : SizT*, cntx : CntxT*)
  fun pblk_buf_sys = bli_pblk_buf_sys(pblk : PblkT*) : Void*
  fun pblk_buf_align = bli_pblk_buf_align(pblk : PblkT*) : Void*
  fun pblk_set_buf_sys = bli_pblk_set_buf_sys(buf_sys : Void*, pblk : PblkT*)
  fun pblk_set_buf_align = bli_pblk_set_buf_align(buf_align : Void*, pblk : PblkT*)
  fun pblk_clear = bli_pblk_clear(pblk : PblkT*)
  fun pool_block_ptrs = bli_pool_block_ptrs(pool : PoolT*) : PblkT*
  fun pool_block_ptrs_len = bli_pool_block_ptrs_len(pool : PoolT*) : DimT
  fun pool_num_blocks = bli_pool_num_blocks(pool : PoolT*) : DimT
  fun pool_block_size = bli_pool_block_size(pool : PoolT*) : SizT
  fun pool_align_size = bli_pool_align_size(pool : PoolT*) : SizT
  fun pool_top_index = bli_pool_top_index(pool : PoolT*) : DimT
  fun pool_is_exhausted = bli_pool_is_exhausted(pool : PoolT*) : BoolT
  fun pool_set_block_ptrs = bli_pool_set_block_ptrs(block_ptrs : PblkT*, pool : PoolT*)
  fun pool_set_block_ptrs_len = bli_pool_set_block_ptrs_len(block_ptrs_len : DimT, pool : PoolT*)
  fun pool_set_num_blocks = bli_pool_set_num_blocks(num_blocks : DimT, pool : PoolT*)
  fun pool_set_block_size = bli_pool_set_block_size(block_size : SizT, pool : PoolT*)
  fun pool_set_align_size = bli_pool_set_align_size(align_size : SizT, pool : PoolT*)
  fun pool_set_top_index = bli_pool_set_top_index(top_index : DimT, pool : PoolT*)
  fun pool_init = bli_pool_init(num_blocks : DimT, block_size : SizT, align_size : SizT, pool : PoolT*)
  fun pool_finalize = bli_pool_finalize(pool : PoolT*)
  fun pool_reinit = bli_pool_reinit(num_blocks_new : DimT, block_size_new : SizT, align_size_new : SizT, pool : PoolT*)
  fun pool_checkout_block = bli_pool_checkout_block(req_size : SizT, block : PblkT*, pool : PoolT*)
  fun pool_checkin_block = bli_pool_checkin_block(block : PblkT*, pool : PoolT*)
  fun pool_grow = bli_pool_grow(num_blocks_add : DimT, pool : PoolT*)
  fun pool_shrink = bli_pool_shrink(num_blocks_sub : DimT, pool : PoolT*)
  fun pool_alloc_block = bli_pool_alloc_block(block_size : SizT, align_size : SizT, block : PblkT*)
  fun pool_free_block = bli_pool_free_block(block : PblkT*)
  fun pool_print = bli_pool_print(pool : PoolT*)
  fun pblk_print = bli_pblk_print(pblk : PblkT*)
  fun memsys_global_membrk = bli_memsys_global_membrk : MembrkT*
  fun memsys_init = bli_memsys_init
  fun memsys_finalize = bli_memsys_finalize
  fun mem_pblk = bli_mem_pblk(mem : MemT*) : PblkT*
  fun mem_buffer = bli_mem_buffer(mem : MemT*) : Void*
  fun mem_buf_sys = bli_mem_buf_sys(mem : MemT*) : Void*
  fun mem_buf_type = bli_mem_buf_type(mem : MemT*) : PackbufT
  fun mem_pool = bli_mem_pool(mem : MemT*) : PoolT*
  fun mem_membrk = bli_mem_membrk(mem : MemT*) : MembrkT*
  fun mem_size = bli_mem_size(mem : MemT*) : SizT
  fun mem_is_alloc = bli_mem_is_alloc(mem : MemT*) : BoolT
  fun mem_is_unalloc = bli_mem_is_unalloc(mem : MemT*) : BoolT
  fun mem_set_pblk = bli_mem_set_pblk(pblk : PblkT*, mem : MemT*)
  fun mem_set_buffer = bli_mem_set_buffer(buf : Void*, mem : MemT*)
  fun mem_set_buf_sys = bli_mem_set_buf_sys(buf : Void*, mem : MemT*)
  fun mem_set_buf_type = bli_mem_set_buf_type(buf_type : PackbufT, mem : MemT*)
  fun mem_set_pool = bli_mem_set_pool(pool : PoolT*, mem : MemT*)
  fun mem_set_membrk = bli_mem_set_membrk(membrk : MembrkT*, mem : MemT*)
  fun mem_set_size = bli_mem_set_size(size : SizT, mem : MemT*)
  fun mem_clear = bli_mem_clear(mem : MemT*)
  fun acquire_mpart_t2b_check = bli_acquire_mpart_t2b_check(requested_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  enum SubpartT
    BlisSubpart0  =  0
    BlisSubpart1  =  1
    BlisSubpart2  =  2
    BlisSubpart1T =  3
    BlisSubpart1B =  4
    BlisSubpart1L =  5
    BlisSubpart1R =  6
    BlisSubpart00 =  7
    BlisSubpart10 =  8
    BlisSubpart20 =  9
    BlisSubpart01 = 10
    BlisSubpart11 = 11
    BlisSubpart21 = 12
    BlisSubpart02 = 13
    BlisSubpart12 = 14
    BlisSubpart22 = 15
  end
  fun acquire_mpart_l2r_check = bli_acquire_mpart_l2r_check(requested_part : SubpartT, j : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_tl2br_check = bli_acquire_mpart_tl2br_check(requested_part : SubpartT, ij : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_mdim = bli_acquire_mpart_mdim(direct : DirT, req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_ndim = bli_acquire_mpart_ndim(direct : DirT, req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_t2b = bli_acquire_mpart_t2b(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_b2t = bli_acquire_mpart_b2t(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_l2r = bli_acquire_mpart_l2r(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_r2l = bli_acquire_mpart_r2l(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_tl2br = bli_acquire_mpart_tl2br(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mpart_br2tl = bli_acquire_mpart_br2tl(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_vpart_f2b = bli_acquire_vpart_f2b(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_vpart_b2f = bli_acquire_vpart_b2f(req_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_mij = bli_acquire_mij(i : DimT, j : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun acquire_vi = bli_acquire_vi(i : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun prune_unref_mparts = bli_prune_unref_mparts(p : ObjT*, mdim_p : MdimT, s : ObjT*, mdim_s : MdimT)
  fun obj_equals = bli_obj_equals(a : ObjT*, b : ObjT*) : BoolT
  fun obj_imag_equals = bli_obj_imag_equals(a : ObjT*, b : ObjT*) : BoolT
  fun auxinfo_schema_a = bli_auxinfo_schema_a(ai : AuxinfoT*) : PackT
  fun auxinfo_schema_b = bli_auxinfo_schema_b(ai : AuxinfoT*) : PackT
  fun auxinfo_next_a = bli_auxinfo_next_a(ai : AuxinfoT*) : Void*
  fun auxinfo_next_b = bli_auxinfo_next_b(ai : AuxinfoT*) : Void*
  fun auxinfo_is_a = bli_auxinfo_is_a(ai : AuxinfoT*) : IncT
  fun auxinfo_is_b = bli_auxinfo_is_b(ai : AuxinfoT*) : IncT
  fun auxinfo_set_schema_a = bli_auxinfo_set_schema_a(schema : PackT, ai : AuxinfoT*)
  fun auxinfo_set_schema_b = bli_auxinfo_set_schema_b(schema : PackT, ai : AuxinfoT*)
  fun auxinfo_set_next_a = bli_auxinfo_set_next_a(p : Void*, ai : AuxinfoT*)
  fun auxinfo_set_next_b = bli_auxinfo_set_next_b(p : Void*, ai : AuxinfoT*)
  fun auxinfo_set_next_ab = bli_auxinfo_set_next_ab(ap : Void*, bp : Void*, ai : AuxinfoT*)
  fun auxinfo_set_is_a = bli_auxinfo_set_is_a(is : IncT, ai : AuxinfoT*)
  fun auxinfo_set_is_b = bli_auxinfo_set_is_b(is : IncT, ai : AuxinfoT*)
  fun param_map_blis_to_netlib_side = bli_param_map_blis_to_netlib_side(side : SideT, blas_side : LibC::Char*)
  fun param_map_blis_to_netlib_uplo = bli_param_map_blis_to_netlib_uplo(uplo : UploT, blas_uplo : LibC::Char*)
  fun param_map_blis_to_netlib_trans = bli_param_map_blis_to_netlib_trans(trans : TransT, blas_trans : LibC::Char*)
  fun param_map_blis_to_netlib_diag = bli_param_map_blis_to_netlib_diag(diag : DiagT, blas_diag : LibC::Char*)
  fun param_map_blis_to_netlib_machval = bli_param_map_blis_to_netlib_machval(machval : MachvalT, blas_machval : LibC::Char*)
  enum MachvalT
    BlisMachEps      =  0
    BlisMachSfmin    =  1
    BlisMachBase     =  2
    BlisMachPrec     =  3
    BlisMachNdigmant =  4
    BlisMachRnd      =  5
    BlisMachEmin     =  6
    BlisMachRmin     =  7
    BlisMachEmax     =  8
    BlisMachRmax     =  9
    BlisMachEps2     = 10
  end
  fun param_map_netlib_to_blis_side = bli_param_map_netlib_to_blis_side(side : LibC::Char, side : SideT*)
  fun param_map_netlib_to_blis_uplo = bli_param_map_netlib_to_blis_uplo(uplo : LibC::Char, uplo : UploT*)
  fun param_map_netlib_to_blis_trans = bli_param_map_netlib_to_blis_trans(trans : LibC::Char, trans : TransT*)
  fun param_map_netlib_to_blis_diag = bli_param_map_netlib_to_blis_diag(diag : LibC::Char, diag : DiagT*)
  fun param_map_char_to_blis_side = bli_param_map_char_to_blis_side(side : LibC::Char, side : SideT*)
  fun param_map_char_to_blis_uplo = bli_param_map_char_to_blis_uplo(uplo : LibC::Char, uplo : UploT*)
  fun param_map_char_to_blis_trans = bli_param_map_char_to_blis_trans(trans : LibC::Char, trans : TransT*)
  fun param_map_char_to_blis_conj = bli_param_map_char_to_blis_conj(conj : LibC::Char, conj : ConjT*)
  fun param_map_char_to_blis_diag = bli_param_map_char_to_blis_diag(diag : LibC::Char, diag : DiagT*)
  fun param_map_blis_to_char_side = bli_param_map_blis_to_char_side(side : SideT, side : LibC::Char*)
  fun param_map_blis_to_char_uplo = bli_param_map_blis_to_char_uplo(uplo : UploT, uplo : LibC::Char*)
  fun param_map_blis_to_char_trans = bli_param_map_blis_to_char_trans(trans : TransT, trans : LibC::Char*)
  fun param_map_blis_to_char_conj = bli_param_map_blis_to_char_conj(conj : ConjT, conj : LibC::Char*)
  fun param_map_blis_to_char_diag = bli_param_map_blis_to_char_diag(diag : DiagT, diag : LibC::Char*)
  fun clock = bli_clock : LibC::Double
  fun clock_min_diff = bli_clock_min_diff(time_min : LibC::Double, time_start : LibC::Double) : LibC::Double
  fun clock_helper = bli_clock_helper : LibC::Double
  fun check_error_code_helper = bli_check_error_code_helper(code : GintT, file : LibC::Char*, line : GuintT) : ErrT
  enum ErrT
    BlisSuccess                         =   -1
    BlisFailure                         =   -2
    BlisErrorCodeMin                    =   -9
    BlisInvalidErrorCheckingLevel       =  -10
    BlisUndefinedErrorCode              =  -11
    BlisNullPointer                     =  -12
    BlisNotYetImplemented               =  -13
    BlisInvalidSide                     =  -20
    BlisInvalidUplo                     =  -21
    BlisInvalidTrans                    =  -22
    BlisInvalidConj                     =  -23
    BlisInvalidDiag                     =  -24
    BlisInvalidMachval                  =  -25
    BlisExpectedNonunitDiag             =  -26
    BlisInvalidDatatype                 =  -30
    BlisExpectedFloatingPointDatatype   =  -31
    BlisExpectedNonintegerDatatype      =  -32
    BlisExpectedNonconstantDatatype     =  -33
    BlisExpectedRealDatatype            =  -34
    BlisExpectedIntegerDatatype         =  -35
    BlisInconsistentDatatypes           =  -36
    BlisExpectedRealProjOf              =  -37
    BlisExpectedRealValuedObject        =  -38
    BlisNonconformalDimensions          =  -40
    BlisExpectedScalarObject            =  -41
    BlisExpectedVectorObject            =  -42
    BlisUnequalVectorLengths            =  -43
    BlisExpectedSquareObject            =  -44
    BlisUnexpectedObjectLength          =  -45
    BlisUnexpectedObjectWidth           =  -46
    BlisUnexpectedVectorDim             =  -47
    BlisUnexpectedDiagOffset            =  -48
    BlisNegativeDimension               =  -49
    BlisInvalidRowStride                =  -50
    BlisInvalidColStride                =  -51
    BlisInvalidDimStrideCombination     =  -52
    BlisExpectedGeneralObject           =  -60
    BlisExpectedHermitianObject         =  -61
    BlisExpectedSymmetricObject         =  -62
    BlisExpectedTriangularObject        =  -63
    BlisExpectedUpperOrLowerObject      =  -70
    BlisInvalid3x1Subpart               =  -80
    BlisInvalid1x3Subpart               =  -81
    BlisInvalid3x3Subpart               =  -82
    BlisUnexpectedNullControlTree       =  -90
    BlisPackSchemaNotSupportedForUnpack = -100
    BlisExpectedNonnullObjectBuffer     = -110
    BlisInvalidPackbuf                  = -120
    BlisExhaustedContigMemoryPool       = -122
    BlisInsufficientStackBufSize        = -123
    BlisAlignmentNotPowerOfTwo          = -124
    BlisAlignmentNotMultOfPtrSize       = -125
    BlisExpectedObjectAlias             = -130
    BlisInvalidArchId                   = -140
    BlisMcDefNonmultipleOfMr            = -150
    BlisMcMaxNonmultipleOfMr            = -151
    BlisNcDefNonmultipleOfNr            = -152
    BlisNcMaxNonmultipleOfNr            = -153
    BlisKcDefNonmultipleOfKr            = -154
    BlisKcMaxNonmultipleOfKr            = -155
    BlisErrorCodeMax                    = -160
  end
  fun check_valid_error_level = bli_check_valid_error_level(level : ErrlevT) : ErrT
  enum ErrlevT
    BlisNoErrorChecking   = 0
    BlisFullErrorChecking = 1
  end
  fun check_null_pointer = bli_check_null_pointer(ptr : Void*) : ErrT
  fun check_valid_side = bli_check_valid_side(side : SideT) : ErrT
  fun check_valid_uplo = bli_check_valid_uplo(uplo : UploT) : ErrT
  fun check_valid_trans = bli_check_valid_trans(trans : TransT) : ErrT
  fun check_valid_diag = bli_check_valid_diag(diag : DiagT) : ErrT
  fun check_nonunit_diag = bli_check_nonunit_diag(a : ObjT*) : ErrT
  fun check_valid_datatype = bli_check_valid_datatype(dt : NumT) : ErrT
  fun check_object_valid_datatype = bli_check_object_valid_datatype(a : ObjT*) : ErrT
  fun check_noninteger_datatype = bli_check_noninteger_datatype(dt : NumT) : ErrT
  fun check_noninteger_object = bli_check_noninteger_object(a : ObjT*) : ErrT
  fun check_nonconstant_datatype = bli_check_nonconstant_datatype(dt : NumT) : ErrT
  fun check_nonconstant_object = bli_check_nonconstant_object(a : ObjT*) : ErrT
  fun check_floating_datatype = bli_check_floating_datatype(dt : NumT) : ErrT
  fun check_floating_object = bli_check_floating_object(a : ObjT*) : ErrT
  fun check_real_datatype = bli_check_real_datatype(dt : NumT) : ErrT
  fun check_real_object = bli_check_real_object(a : ObjT*) : ErrT
  fun check_integer_datatype = bli_check_integer_datatype(dt : NumT) : ErrT
  fun check_integer_object = bli_check_integer_object(a : ObjT*) : ErrT
  fun check_consistent_datatypes = bli_check_consistent_datatypes(dt_a : NumT, dt_b : NumT) : ErrT
  fun check_consistent_object_datatypes = bli_check_consistent_object_datatypes(a : ObjT*, b : ObjT*) : ErrT
  fun check_datatype_real_proj_of = bli_check_datatype_real_proj_of(dt_c : NumT, dt_r : NumT) : ErrT
  fun check_object_real_proj_of = bli_check_object_real_proj_of(c : ObjT*, r : ObjT*) : ErrT
  fun check_real_valued_object = bli_check_real_valued_object(a : ObjT*) : ErrT
  fun check_conformal_dims = bli_check_conformal_dims(a : ObjT*, b : ObjT*) : ErrT
  fun check_level3_dims = bli_check_level3_dims(a : ObjT*, b : ObjT*, c : ObjT*) : ErrT
  fun check_scalar_object = bli_check_scalar_object(a : ObjT*) : ErrT
  fun check_vector_object = bli_check_vector_object(a : ObjT*) : ErrT
  fun check_matrix_object = bli_check_matrix_object(a : ObjT*) : ErrT
  fun check_equal_vector_lengths = bli_check_equal_vector_lengths(x : ObjT*, y : ObjT*) : ErrT
  fun check_square_object = bli_check_square_object(a : ObjT*) : ErrT
  fun check_object_length_equals = bli_check_object_length_equals(a : ObjT*, m : DimT) : ErrT
  fun check_object_width_equals = bli_check_object_width_equals(a : ObjT*, n : DimT) : ErrT
  fun check_vector_dim_equals = bli_check_vector_dim_equals(a : ObjT*, n : DimT) : ErrT
  fun check_object_diag_offset_equals = bli_check_object_diag_offset_equals(a : ObjT*, offset : DoffT) : ErrT
  fun check_matrix_strides = bli_check_matrix_strides(m : DimT, n : DimT, rs : IncT, cs : IncT, is : IncT) : ErrT
  fun check_general_object = bli_check_general_object(a : ObjT*) : ErrT
  fun check_hermitian_object = bli_check_hermitian_object(a : ObjT*) : ErrT
  fun check_symmetric_object = bli_check_symmetric_object(a : ObjT*) : ErrT
  fun check_triangular_object = bli_check_triangular_object(a : ObjT*) : ErrT
  fun check_object_struc = bli_check_object_struc(a : ObjT*, struc : StrucT) : ErrT
  fun check_upper_or_lower_object = bli_check_upper_or_lower_object(a : ObjT*) : ErrT
  fun check_valid_3x1_subpart = bli_check_valid_3x1_subpart(part : SubpartT) : ErrT
  fun check_valid_1x3_subpart = bli_check_valid_1x3_subpart(part : SubpartT) : ErrT
  fun check_valid_3x3_subpart = bli_check_valid_3x3_subpart(part : SubpartT) : ErrT
  fun check_valid_cntl = bli_check_valid_cntl(cntl : Void*) : ErrT
  fun check_packm_schema_on_unpack = bli_check_packm_schema_on_unpack(a : ObjT*) : ErrT
  fun check_packv_schema_on_unpack = bli_check_packv_schema_on_unpack(a : ObjT*) : ErrT
  fun check_object_buffer = bli_check_object_buffer(a : ObjT*) : ErrT
  fun check_valid_packbuf = bli_check_valid_packbuf(buf_type : PackbufT) : ErrT
  fun check_if_exhausted_pool = bli_check_if_exhausted_pool(pool : PoolT*) : ErrT
  fun check_sufficient_stack_buf_size = bli_check_sufficient_stack_buf_size(dt : NumT, cntx : CntxT*) : ErrT
  fun check_alignment_is_power_of_two = bli_check_alignment_is_power_of_two(align_size : LibC::SizeT) : ErrT
  fun check_alignment_is_mult_of_ptr_size = bli_check_alignment_is_mult_of_ptr_size(align_size : LibC::SizeT) : ErrT
  fun check_object_alias_of = bli_check_object_alias_of(a : ObjT*, b : ObjT*) : ErrT
  fun check_valid_arch_id = bli_check_valid_arch_id(id : ArchT) : ErrT
  fun check_valid_mc_mod_mult = bli_check_valid_mc_mod_mult(mc : BlkszT*, mr : BlkszT*) : ErrT
  fun check_valid_nc_mod_mult = bli_check_valid_nc_mod_mult(nc : BlkszT*, nr : BlkszT*) : ErrT
  fun check_valid_kc_mod_mult = bli_check_valid_kc_mod_mult(kc : BlkszT*, kr : BlkszT*) : ErrT
  fun error_init = bli_error_init
  fun error_finalize = bli_error_finalize
  fun error_init_msgs = bli_error_init_msgs
  fun print_msg = bli_print_msg(str : LibC::Char*, file : LibC::Char*, line : GuintT)
  fun abort = bli_abort
  fun error_checking_level = bli_error_checking_level : ErrlevT
  fun error_checking_level_set = bli_error_checking_level_set(new_level : ErrlevT)
  fun error_checking_is_enabled = bli_error_checking_is_enabled : BoolT
  fun error_string_for_code = bli_error_string_for_code(code : GintT) : LibC::Char*
  fun lsame = bli_lsame(ca : BlaCharacter*, cb : BlaCharacter*, ca_len : Ftnlen, cb_len : Ftnlen) : BlaLogical
  alias F77Char = LibC::Char
  alias BlaCharacter = F77Char
  alias Ftnlen = LibC::Long
  alias Int32T = LibC::Int
  alias F77Int = Int32T
  alias BlaLogical = F77Int
  fun slamch = bli_slamch(cmach : BlaCharacter*, cmach_len : Ftnlen) : BlaReal
  alias BlaReal = LibC::Float
  fun dlamch = bli_dlamch(cmach : BlaCharacter*, cmach_len : Ftnlen) : BlaDouble
  alias BlaDouble = LibC::Double
  fun machval = bli_machval(mval : MachvalT, v : ObjT*)
  fun smachval = bli_smachval(mval : MachvalT, v : Void*)
  fun dmachval = bli_dmachval(mval : MachvalT, v : Void*)
  fun cmachval = bli_cmachval(mval : MachvalT, v : Void*)
  fun zmachval = bli_zmachval(mval : MachvalT, v : Void*)
  fun getopt_init_state = bli_getopt_init_state(opterr : LibC::Int, state : GetoptT*)

  struct GetoptS
    optarg : LibC::Char*
    optind : LibC::Int
    opterr : LibC::Int
    optopt : LibC::Int
  end

  type GetoptT = GetoptS
  fun getopt = bli_getopt(argc : LibC::Int, argv : LibC::Char**, optstring : LibC::Char*, state : GetoptT*) : LibC::Int
  fun opid_is_level3 = bli_opid_is_level3(opid : OpidT) : BoolT
  fun cntl_create_node = bli_cntl_create_node(family : OpidT, bszid : BszidT, var_func : Void*, params : Void*, sub_node : CntlT*) : CntlT*
  fun cntl_free_node = bli_cntl_free_node(cntl : CntlT*)
  fun cntl_clear_node = bli_cntl_clear_node(cntl : CntlT*)
  fun cntl_free = bli_cntl_free(cntl : CntlT*, thread : ThrinfoT*)
  fun cntl_free_w_thrinfo = bli_cntl_free_w_thrinfo(cntl : CntlT*, thread : ThrinfoT*)
  fun cntl_free_wo_thrinfo = bli_cntl_free_wo_thrinfo(cntl : CntlT*)
  fun cntl_copy = bli_cntl_copy(cntl : CntlT*) : CntlT*
  fun cntl_mark_family = bli_cntl_mark_family(family : OpidT, cntl : CntlT*)
  fun cntl_family = bli_cntl_family(cntl : CntlT*) : OpidT
  fun cntl_bszid = bli_cntl_bszid(cntl : CntlT*) : BszidT
  fun cntl_var_func = bli_cntl_var_func(cntl : CntlT*) : Void*
  fun cntl_sub_node = bli_cntl_sub_node(cntl : CntlT*) : CntlT*
  fun cntl_params = bli_cntl_params(cntl : CntlT*) : Void*
  fun cntl_params_size = bli_cntl_params_size(cntl : CntlT*) : Uint64T
  fun cntl_pack_mem = bli_cntl_pack_mem(cntl : CntlT*) : MemT*
  fun cntl_is_leaf = bli_cntl_is_leaf(cntl : CntlT*) : BoolT
  fun cntl_does_part = bli_cntl_does_part(cntl : CntlT*) : BoolT
  fun cntl_set_family = bli_cntl_set_family(family : OpidT, cntl : CntlT*)
  fun cntl_set_bszid = bli_cntl_set_bszid(bszid : BszidT, cntl : CntlT*)
  fun cntl_set_var_func = bli_cntl_set_var_func(var_func : Void*, cntl : CntlT*)
  fun cntl_set_sub_node = bli_cntl_set_sub_node(sub_node : CntlT*, cntl : CntlT*)
  fun cntl_set_params = bli_cntl_set_params(params : Void*, cntl : CntlT*)
  fun cntl_set_pack_mem = bli_cntl_set_pack_mem(pack_mem : MemT*, cntl : CntlT*)
  fun info_get_version_str = bli_info_get_version_str : LibC::Char*
  fun info_get_int_type_size_str = bli_info_get_int_type_size_str : LibC::Char*
  fun info_get_int_type_size = bli_info_get_int_type_size : GintT
  fun info_get_num_fp_types = bli_info_get_num_fp_types : GintT
  fun info_get_max_type_size = bli_info_get_max_type_size : GintT
  fun info_get_page_size = bli_info_get_page_size : GintT
  fun info_get_simd_num_registers = bli_info_get_simd_num_registers : GintT
  fun info_get_simd_size = bli_info_get_simd_size : GintT
  fun info_get_simd_align_size = bli_info_get_simd_align_size : GintT
  fun info_get_stack_buf_max_size = bli_info_get_stack_buf_max_size : GintT
  fun info_get_stack_buf_align_size = bli_info_get_stack_buf_align_size : GintT
  fun info_get_heap_addr_align_size = bli_info_get_heap_addr_align_size : GintT
  fun info_get_heap_stride_align_size = bli_info_get_heap_stride_align_size : GintT
  fun info_get_pool_addr_align_size = bli_info_get_pool_addr_align_size : GintT
  fun info_get_enable_stay_auto_init = bli_info_get_enable_stay_auto_init : GintT
  fun info_get_enable_blas = bli_info_get_enable_blas : GintT
  fun info_get_enable_cblas = bli_info_get_enable_cblas : GintT
  fun info_get_blas_int_type_size = bli_info_get_blas_int_type_size : GintT
  fun info_get_enable_packbuf_pools = bli_info_get_enable_packbuf_pools : GintT
  fun info_get_gemm_ukr_impl_string = bli_info_get_gemm_ukr_impl_string(method : IndT, dt : NumT) : LibC::Char*
  fun info_get_gemmtrsm_l_ukr_impl_string = bli_info_get_gemmtrsm_l_ukr_impl_string(method : IndT, dt : NumT) : LibC::Char*
  fun info_get_gemmtrsm_u_ukr_impl_string = bli_info_get_gemmtrsm_u_ukr_impl_string(method : IndT, dt : NumT) : LibC::Char*
  fun info_get_trsm_l_ukr_impl_string = bli_info_get_trsm_l_ukr_impl_string(method : IndT, dt : NumT) : LibC::Char*
  fun info_get_trsm_u_ukr_impl_string = bli_info_get_trsm_u_ukr_impl_string(method : IndT, dt : NumT) : LibC::Char*
  fun info_get_gemm_impl_string = bli_info_get_gemm_impl_string(dt : NumT) : LibC::Char*
  fun info_get_hemm_impl_string = bli_info_get_hemm_impl_string(dt : NumT) : LibC::Char*
  fun info_get_herk_impl_string = bli_info_get_herk_impl_string(dt : NumT) : LibC::Char*
  fun info_get_her2k_impl_string = bli_info_get_her2k_impl_string(dt : NumT) : LibC::Char*
  fun info_get_symm_impl_string = bli_info_get_symm_impl_string(dt : NumT) : LibC::Char*
  fun info_get_syrk_impl_string = bli_info_get_syrk_impl_string(dt : NumT) : LibC::Char*
  fun info_get_syr2k_impl_string = bli_info_get_syr2k_impl_string(dt : NumT) : LibC::Char*
  fun info_get_trmm_impl_string = bli_info_get_trmm_impl_string(dt : NumT) : LibC::Char*
  fun info_get_trmm3_impl_string = bli_info_get_trmm3_impl_string(dt : NumT) : LibC::Char*
  fun info_get_trsm_impl_string = bli_info_get_trsm_impl_string(dt : NumT) : LibC::Char*
  fun arch_query_id = bli_arch_query_id : ArchT
  fun arch_set_id_once = bli_arch_set_id_once
  fun arch_set_id = bli_arch_set_id
  fun arch_string = bli_arch_string(id : ArchT) : LibC::Char*
  fun cpuid_query_id = bli_cpuid_query_id : ArchT
  fun cpuid_is_skx = bli_cpuid_is_skx(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  alias Uint32T = LibC::UInt
  fun cpuid_is_knl = bli_cpuid_is_knl(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_haswell = bli_cpuid_is_haswell(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_sandybridge = bli_cpuid_is_sandybridge(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_penryn = bli_cpuid_is_penryn(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_zen = bli_cpuid_is_zen(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_excavator = bli_cpuid_is_excavator(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_steamroller = bli_cpuid_is_steamroller(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_piledriver = bli_cpuid_is_piledriver(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_bulldozer = bli_cpuid_is_bulldozer(family : Uint32T, model : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_cortexa57 = bli_cpuid_is_cortexa57(model : Uint32T, part : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_cortexa15 = bli_cpuid_is_cortexa15(model : Uint32T, part : Uint32T, features : Uint32T) : BoolT
  fun cpuid_is_cortexa9 = bli_cpuid_is_cortexa9(model : Uint32T, part : Uint32T, features : Uint32T) : BoolT
  fun cpuid_query = bli_cpuid_query(family : Uint32T*, model : Uint32T*, features : Uint32T*) : Uint32T
  fun cpuid_has_features = bli_cpuid_has_features(have : Uint32T, want : Uint32T) : BoolT
  fun string_mkupper = bli_string_mkupper(s : LibC::Char*)
  fun setijm = bli_setijm(ar : LibC::Double, ai : LibC::Double, i : DimT, j : DimT, b : ObjT*) : ErrT
  fun ssetijm = bli_ssetijm(ar : LibC::Double, ai : LibC::Double, i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT)
  fun dsetijm = bli_dsetijm(ar : LibC::Double, ai : LibC::Double, i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT)
  fun csetijm = bli_csetijm(ar : LibC::Double, ai : LibC::Double, i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT)
  fun zsetijm = bli_zsetijm(ar : LibC::Double, ai : LibC::Double, i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT)
  fun getijm = bli_getijm(i : DimT, j : DimT, b : ObjT*, ar : LibC::Double*, ai : LibC::Double*) : ErrT
  fun sgetijm = bli_sgetijm(i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT, ar : LibC::Double*, ai : LibC::Double*)
  fun dgetijm = bli_dgetijm(i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT, ar : LibC::Double*, ai : LibC::Double*)
  fun cgetijm = bli_cgetijm(i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT, ar : LibC::Double*, ai : LibC::Double*)
  fun zgetijm = bli_zgetijm(i : DimT, j : DimT, b : Void*, rs : IncT, cs : IncT, ar : LibC::Double*, ai : LibC::Double*)
  fun addsc_check = bli_addsc_check(chi : ObjT*, psi : ObjT*)
  fun copysc_check = bli_copysc_check(chi : ObjT*, psi : ObjT*)
  fun divsc_check = bli_divsc_check(chi : ObjT*, psi : ObjT*)
  fun mulsc_check = bli_mulsc_check(chi : ObjT*, psi : ObjT*)
  fun sqrtsc_check = bli_sqrtsc_check(chi : ObjT*, psi : ObjT*)
  fun subsc_check = bli_subsc_check(chi : ObjT*, psi : ObjT*)
  fun invertsc_check = bli_invertsc_check(chi : ObjT*)
  fun absqsc_check = bli_absqsc_check(chi : ObjT*, absq : ObjT*)
  fun normfsc_check = bli_normfsc_check(chi : ObjT*, absq : ObjT*)
  fun getsc_check = bli_getsc_check(chi : ObjT*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun setsc_check = bli_setsc_check(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : ObjT*)
  fun unzipsc_check = bli_unzipsc_check(chi : ObjT*, zeta_r : ObjT*, zeta_i : ObjT*)
  fun zipsc_check = bli_zipsc_check(zeta_r : ObjT*, zeta_i : ObjT*, chi : ObjT*)
  fun l0_xsc_check = bli_l0_xsc_check(chi : ObjT*)
  fun l0_xxsc_check = bli_l0_xxsc_check(chi : ObjT*, psi : ObjT*)
  fun l0_xx2sc_check = bli_l0_xx2sc_check(chi : ObjT*, norm : ObjT*)
  fun absqsc = bli_absqsc(chi : ObjT*, absq : ObjT*)
  fun normfsc = bli_normfsc(chi : ObjT*, absq : ObjT*)
  fun addsc = bli_addsc(chi : ObjT*, psi : ObjT*)
  fun divsc = bli_divsc(chi : ObjT*, psi : ObjT*)
  fun mulsc = bli_mulsc(chi : ObjT*, psi : ObjT*)
  fun sqrtsc = bli_sqrtsc(chi : ObjT*, psi : ObjT*)
  fun subsc = bli_subsc(chi : ObjT*, psi : ObjT*)
  fun invertsc = bli_invertsc(chi : ObjT*)
  fun getsc = bli_getsc(chi : ObjT*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun setsc = bli_setsc(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : ObjT*)
  fun unzipsc = bli_unzipsc(chi : ObjT*, zeta_r : ObjT*, zeta_i : ObjT*)
  fun zipsc = bli_zipsc(zeta_r : ObjT*, zeta_i : ObjT*, chi : ObjT*)
  fun saddsc = bli_saddsc(conjchi : ConjT, chi : LibC::Float*, psi : LibC::Float*)
  fun daddsc = bli_daddsc(conjchi : ConjT, chi : LibC::Double*, psi : LibC::Double*)
  fun caddsc = bli_caddsc(conjchi : ConjT, chi : Scomplex*, psi : Scomplex*)
  fun zaddsc = bli_zaddsc(conjchi : ConjT, chi : Dcomplex*, psi : Dcomplex*)
  fun sdivsc = bli_sdivsc(conjchi : ConjT, chi : LibC::Float*, psi : LibC::Float*)
  fun ddivsc = bli_ddivsc(conjchi : ConjT, chi : LibC::Double*, psi : LibC::Double*)
  fun cdivsc = bli_cdivsc(conjchi : ConjT, chi : Scomplex*, psi : Scomplex*)
  fun zdivsc = bli_zdivsc(conjchi : ConjT, chi : Dcomplex*, psi : Dcomplex*)
  fun smulsc = bli_smulsc(conjchi : ConjT, chi : LibC::Float*, psi : LibC::Float*)
  fun dmulsc = bli_dmulsc(conjchi : ConjT, chi : LibC::Double*, psi : LibC::Double*)
  fun cmulsc = bli_cmulsc(conjchi : ConjT, chi : Scomplex*, psi : Scomplex*)
  fun zmulsc = bli_zmulsc(conjchi : ConjT, chi : Dcomplex*, psi : Dcomplex*)
  fun ssubsc = bli_ssubsc(conjchi : ConjT, chi : LibC::Float*, psi : LibC::Float*)
  fun dsubsc = bli_dsubsc(conjchi : ConjT, chi : LibC::Double*, psi : LibC::Double*)
  fun csubsc = bli_csubsc(conjchi : ConjT, chi : Scomplex*, psi : Scomplex*)
  fun zsubsc = bli_zsubsc(conjchi : ConjT, chi : Dcomplex*, psi : Dcomplex*)
  fun sinvertsc = bli_sinvertsc(conjchi : ConjT, chi : LibC::Float*)
  fun dinvertsc = bli_dinvertsc(conjchi : ConjT, chi : LibC::Double*)
  fun cinvertsc = bli_cinvertsc(conjchi : ConjT, chi : Scomplex*)
  fun zinvertsc = bli_zinvertsc(conjchi : ConjT, chi : Dcomplex*)
  fun sabsqsc = bli_sabsqsc(chi : LibC::Float*, absq : LibC::Float*)
  fun dabsqsc = bli_dabsqsc(chi : LibC::Double*, absq : LibC::Double*)
  fun cabsqsc = bli_cabsqsc(chi : Scomplex*, absq : LibC::Float*)
  fun zabsqsc = bli_zabsqsc(chi : Dcomplex*, absq : LibC::Double*)
  fun snormfsc = bli_snormfsc(chi : LibC::Float*, absq : LibC::Float*)
  fun dnormfsc = bli_dnormfsc(chi : LibC::Double*, absq : LibC::Double*)
  fun cnormfsc = bli_cnormfsc(chi : Scomplex*, absq : LibC::Float*)
  fun znormfsc = bli_znormfsc(chi : Dcomplex*, absq : LibC::Double*)
  fun ssqrtsc = bli_ssqrtsc(chi : LibC::Float*, psi : LibC::Float*)
  fun dsqrtsc = bli_dsqrtsc(chi : LibC::Double*, psi : LibC::Double*)
  fun csqrtsc = bli_csqrtsc(chi : Scomplex*, psi : Scomplex*)
  fun zsqrtsc = bli_zsqrtsc(chi : Dcomplex*, psi : Dcomplex*)
  fun sgetsc = bli_sgetsc(chi : LibC::Float*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun dgetsc = bli_dgetsc(chi : LibC::Double*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun cgetsc = bli_cgetsc(chi : Scomplex*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun zgetsc = bli_zgetsc(chi : Dcomplex*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun ssetsc = bli_ssetsc(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : LibC::Float*)
  fun dsetsc = bli_dsetsc(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : LibC::Double*)
  fun csetsc = bli_csetsc(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : Scomplex*)
  fun zsetsc = bli_zsetsc(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : Dcomplex*)
  fun sunzipsc = bli_sunzipsc(chi : LibC::Float*, zeta_r : LibC::Float*, zeta_i : LibC::Float*)
  fun dunzipsc = bli_dunzipsc(chi : LibC::Double*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun cunzipsc = bli_cunzipsc(chi : Scomplex*, zeta_r : LibC::Float*, zeta_i : LibC::Float*)
  fun zunzipsc = bli_zunzipsc(chi : Dcomplex*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun szipsc = bli_szipsc(zeta_r : LibC::Float*, zeta_i : LibC::Float*, chi : LibC::Float*)
  fun dzipsc = bli_dzipsc(zeta_r : LibC::Double*, zeta_i : LibC::Double*, chi : LibC::Double*)
  fun czipsc = bli_czipsc(zeta_r : LibC::Float*, zeta_i : LibC::Float*, chi : Scomplex*)
  fun zzipsc = bli_zzipsc(zeta_r : LibC::Double*, zeta_i : LibC::Double*, chi : Dcomplex*)
  fun igetsc = bli_igetsc(chi : DimT*, zeta_r : LibC::Double*, zeta_i : LibC::Double*)
  fun isetsc = bli_isetsc(zeta_r : LibC::Double, zeta_i : LibC::Double, chi : DimT*)
  fun copysc = bli_copysc(chi : ObjT*, psi : ObjT*)
  fun sscopysc = bli_sscopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun ddcopysc = bli_ddcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun cccopysc = bli_cccopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun zzcopysc = bli_zzcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun sccopysc = bli_sccopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun cscopysc = bli_cscopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun dzcopysc = bli_dzcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun zdcopysc = bli_zdcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun sdcopysc = bli_sdcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun szcopysc = bli_szcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun dscopysc = bli_dscopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun dccopysc = bli_dccopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun cdcopysc = bli_cdcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun czcopysc = bli_czcopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun zscopysc = bli_zscopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun zccopysc = bli_zccopysc(conjchi : ConjT, chi : Void*, psi : Void*)
  fun addv_check = bli_addv_check(x : ObjT*, y : ObjT*)
  fun copyv_check = bli_copyv_check(x : ObjT*, y : ObjT*)
  fun subv_check = bli_subv_check(x : ObjT*, y : ObjT*)
  fun swapv_check = bli_swapv_check(x : ObjT*, y : ObjT*)
  fun amaxv_check = bli_amaxv_check(x : ObjT*, index : ObjT*)
  fun axpbyv_check = bli_axpbyv_check(alpha : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun axpyv_check = bli_axpyv_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scal2v_check = bli_scal2v_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun dotv_check = bli_dotv_check(x : ObjT*, y : ObjT*, rho : ObjT*)
  fun dotxv_check = bli_dotxv_check(alpha : ObjT*, x : ObjT*, y : ObjT*, beta : ObjT*, rho : ObjT*)
  fun invertv_check = bli_invertv_check(x : ObjT*)
  fun scalv_check = bli_scalv_check(alpha : ObjT*, x : ObjT*)
  fun setv_check = bli_setv_check(alpha : ObjT*, x : ObjT*)
  fun xpbyv_check = bli_xpbyv_check(x : ObjT*, beta : ObjT*, y : ObjT*)
  fun l1v_xy_check = bli_l1v_xy_check(x : ObjT*, y : ObjT*)
  fun l1v_axy_check = bli_l1v_axy_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun l1v_xby_check = bli_l1v_xby_check(x : ObjT*, beta : ObjT*, y : ObjT*)
  fun l1v_axby_check = bli_l1v_axby_check(alpha : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun l1v_dot_check = bli_l1v_dot_check(alpha : ObjT*, x : ObjT*, y : ObjT*, beta : ObjT*, rho : ObjT*)
  fun l1v_x_check = bli_l1v_x_check(x : ObjT*)
  fun l1v_ax_check = bli_l1v_ax_check(alpha : ObjT*, x : ObjT*)
  fun l1v_xi_check = bli_l1v_xi_check(x : ObjT*, index : ObjT*)
  fun addv_ex = bli_addv_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun copyv_ex = bli_copyv_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun subv_ex = bli_subv_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun amaxv_ex = bli_amaxv_ex(x : ObjT*, index : ObjT*, cntx : CntxT*)
  fun axpbyv_ex = bli_axpbyv_ex(alpha : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*)
  fun axpyv_ex = bli_axpyv_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun scal2v_ex = bli_scal2v_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun dotv_ex = bli_dotv_ex(x : ObjT*, y : ObjT*, rho : ObjT*, cntx : CntxT*)
  fun dotxv_ex = bli_dotxv_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, beta : ObjT*, rho : ObjT*, cntx : CntxT*)
  fun invertv_ex = bli_invertv_ex(x : ObjT*, cntx : CntxT*)
  fun scalv_ex = bli_scalv_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun setv_ex = bli_setv_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun swapv_ex = bli_swapv_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun xpbyv_ex = bli_xpbyv_ex(x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*)
  fun addv = bli_addv(x : ObjT*, y : ObjT*)
  fun copyv = bli_copyv(x : ObjT*, y : ObjT*)
  fun subv = bli_subv(x : ObjT*, y : ObjT*)
  fun amaxv = bli_amaxv(x : ObjT*, index : ObjT*)
  fun axpbyv = bli_axpbyv(alpha : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun axpyv = bli_axpyv(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scal2v = bli_scal2v(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun dotv = bli_dotv(x : ObjT*, y : ObjT*, rho : ObjT*)
  fun dotxv = bli_dotxv(alpha : ObjT*, x : ObjT*, y : ObjT*, beta : ObjT*, rho : ObjT*)
  fun invertv = bli_invertv(x : ObjT*)
  fun scalv = bli_scalv(alpha : ObjT*, x : ObjT*)
  fun setv = bli_setv(alpha : ObjT*, x : ObjT*)
  fun swapv = bli_swapv(x : ObjT*, y : ObjT*)
  fun xpbyv = bli_xpbyv(x : ObjT*, beta : ObjT*, y : ObjT*)
  fun saddv = bli_saddv(conjx : ConjT, n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daddv = bli_daddv(conjx : ConjT, n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun caddv = bli_caddv(conjx : ConjT, n : DimT, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zaddv = bli_zaddv(conjx : ConjT, n : DimT, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun samaxv = bli_samaxv(n : DimT, x : LibC::Float*, incx : IncT, index : DimT*, cntx : CntxT*)
  fun damaxv = bli_damaxv(n : DimT, x : LibC::Double*, incx : IncT, index : DimT*, cntx : CntxT*)
  fun camaxv = bli_camaxv(n : DimT, x : Scomplex*, incx : IncT, index : DimT*, cntx : CntxT*)
  fun zamaxv = bli_zamaxv(n : DimT, x : Dcomplex*, incx : IncT, index : DimT*, cntx : CntxT*)
  fun saxpbyv = bli_saxpbyv(conjx : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daxpbyv = bli_daxpbyv(conjx : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun caxpbyv = bli_caxpbyv(conjx : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zaxpbyv = bli_zaxpbyv(conjx : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun saxpyv = bli_saxpyv(conjx : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daxpyv = bli_daxpyv(conjx : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun caxpyv = bli_caxpyv(conjx : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zaxpyv = bli_zaxpyv(conjx : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun scopyv = bli_scopyv(conjx : ConjT, n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dcopyv = bli_dcopyv(conjx : ConjT, n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun ccopyv = bli_ccopyv(conjx : ConjT, n : DimT, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zcopyv = bli_zcopyv(conjx : ConjT, n : DimT, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sdotv = bli_sdotv(conjx : ConjT, conjy : ConjT, n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, rho : LibC::Float*, cntx : CntxT*)
  fun ddotv = bli_ddotv(conjx : ConjT, conjy : ConjT, n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, rho : LibC::Double*, cntx : CntxT*)
  fun cdotv = bli_cdotv(conjx : ConjT, conjy : ConjT, n : DimT, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, rho : Scomplex*, cntx : CntxT*)
  fun zdotv = bli_zdotv(conjx : ConjT, conjy : ConjT, n : DimT, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, rho : Dcomplex*, cntx : CntxT*)
  fun sdotxv = bli_sdotxv(conjx : ConjT, conjy : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, beta : LibC::Float*, rho : LibC::Float*, cntx : CntxT*)
  fun ddotxv = bli_ddotxv(conjx : ConjT, conjy : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, beta : LibC::Double*, rho : LibC::Double*, cntx : CntxT*)
  fun cdotxv = bli_cdotxv(conjx : ConjT, conjy : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, beta : Scomplex*, rho : Scomplex*, cntx : CntxT*)
  fun zdotxv = bli_zdotxv(conjx : ConjT, conjy : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, beta : Dcomplex*, rho : Dcomplex*, cntx : CntxT*)
  fun sinvertv = bli_sinvertv(n : DimT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dinvertv = bli_dinvertv(n : DimT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun cinvertv = bli_cinvertv(n : DimT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zinvertv = bli_zinvertv(n : DimT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun sscalv = bli_sscalv(conjalpha : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dscalv = bli_dscalv(conjalpha : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun cscalv = bli_cscalv(conjalpha : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zscalv = bli_zscalv(conjalpha : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun sscal2v = bli_sscal2v(conjx : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dscal2v = bli_dscal2v(conjx : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cscal2v = bli_cscal2v(conjx : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zscal2v = bli_zscal2v(conjx : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun ssetv = bli_ssetv(conjalpha : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dsetv = bli_dsetv(conjalpha : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun csetv = bli_csetv(conjalpha : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zsetv = bli_zsetv(conjalpha : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun ssubv = bli_ssubv(conjx : ConjT, n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dsubv = bli_dsubv(conjx : ConjT, n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun csubv = bli_csubv(conjx : ConjT, n : DimT, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zsubv = bli_zsubv(conjx : ConjT, n : DimT, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sswapv = bli_sswapv(n : DimT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dswapv = bli_dswapv(n : DimT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cswapv = bli_cswapv(n : DimT, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zswapv = bli_zswapv(n : DimT, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sxpbyv = bli_sxpbyv(conjx : ConjT, n : DimT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dxpbyv = bli_dxpbyv(conjx : ConjT, n : DimT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cxpbyv = bli_cxpbyv(conjx : ConjT, n : DimT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zxpbyv = bli_zxpbyv(conjx : ConjT, n : DimT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun addd_check = bli_addd_check(x : ObjT*, y : ObjT*)
  fun copyd_check = bli_copyd_check(x : ObjT*, y : ObjT*)
  fun subd_check = bli_subd_check(x : ObjT*, y : ObjT*)
  fun axpyd_check = bli_axpyd_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scal2d_check = bli_scal2d_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun invertd_check = bli_invertd_check(x : ObjT*)
  fun scald_check = bli_scald_check(alpha : ObjT*, x : ObjT*)
  fun setd_check = bli_setd_check(alpha : ObjT*, x : ObjT*)
  fun setid_check = bli_setid_check(alpha : ObjT*, x : ObjT*)
  fun l1d_xy_check = bli_l1d_xy_check(x : ObjT*, y : ObjT*)
  fun l1d_axy_check = bli_l1d_axy_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun l1d_x_check = bli_l1d_x_check(x : ObjT*)
  fun l1d_ax_check = bli_l1d_ax_check(alpha : ObjT*, x : ObjT*)
  fun addd_ex = bli_addd_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun copyd_ex = bli_copyd_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun subd_ex = bli_subd_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun axpyd_ex = bli_axpyd_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun scal2d_ex = bli_scal2d_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun invertd_ex = bli_invertd_ex(x : ObjT*, cntx : CntxT*)
  fun scald_ex = bli_scald_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun setd_ex = bli_setd_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun setid_ex = bli_setid_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun addd = bli_addd(x : ObjT*, y : ObjT*)
  fun copyd = bli_copyd(x : ObjT*, y : ObjT*)
  fun subd = bli_subd(x : ObjT*, y : ObjT*)
  fun axpyd = bli_axpyd(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scal2d = bli_scal2d(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun invertd = bli_invertd(x : ObjT*)
  fun scald = bli_scald(alpha : ObjT*, x : ObjT*)
  fun setd = bli_setd(alpha : ObjT*, x : ObjT*)
  fun setid = bli_setid(alpha : ObjT*, x : ObjT*)
  fun saddd = bli_saddd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun daddd = bli_daddd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun caddd = bli_caddd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zaddd = bli_zaddd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun scopyd = bli_scopyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dcopyd = bli_dcopyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun ccopyd = bli_ccopyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zcopyd = bli_zcopyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun ssubd = bli_ssubd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dsubd = bli_dsubd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun csubd = bli_csubd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zsubd = bli_zsubd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun saxpyd = bli_saxpyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun daxpyd = bli_daxpyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun caxpyd = bli_caxpyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zaxpyd = bli_zaxpyd(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun sscal2d = bli_sscal2d(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dscal2d = bli_dscal2d(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun cscal2d = bli_cscal2d(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zscal2d = bli_zscal2d(diagoffx : DoffT, diagx : DiagT, transx : TransT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun sinvertd = bli_sinvertd(diagoffx : DoffT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dinvertd = bli_dinvertd(diagoffx : DoffT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun cinvertd = bli_cinvertd(diagoffx : DoffT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zinvertd = bli_zinvertd(diagoffx : DoffT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun sscald = bli_sscald(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dscald = bli_dscald(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun cscald = bli_cscald(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zscald = bli_zscald(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun ssetd = bli_ssetd(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dsetd = bli_dsetd(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun csetd = bli_csetd(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zsetd = bli_zsetd(conjalpha : ConjT, diagoffx : DoffT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun ssetid = bli_ssetid(diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dsetid = bli_dsetid(diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun csetid = bli_csetid(diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Float*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zsetid = bli_zsetid(diagoffx : DoffT, m : DimT, n : DimT, alpha : LibC::Double*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun axpy2v_check = bli_axpy2v_check(alphax : ObjT*, alphay : ObjT*, x : ObjT*, y : ObjT*, z : ObjT*)
  fun axpyf_check = bli_axpyf_check(alpha : ObjT*, a : ObjT*, x : ObjT*, y : ObjT*)
  fun dotaxpyv_check = bli_dotaxpyv_check(alpha : ObjT*, xt : ObjT*, x : ObjT*, y : ObjT*, rho : ObjT*, z : ObjT*)
  fun dotxaxpyf_check = bli_dotxaxpyf_check(alpha : ObjT*, at : ObjT*, a : ObjT*, w : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, z : ObjT*)
  fun dotxf_check = bli_dotxf_check(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun axpy2v_ex = bli_axpy2v_ex(alphax : ObjT*, alphay : ObjT*, x : ObjT*, y : ObjT*, z : ObjT*, cntx : CntxT*)
  fun axpyf_ex = bli_axpyf_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun dotaxpyv_ex = bli_dotaxpyv_ex(alpha : ObjT*, xt : ObjT*, x : ObjT*, y : ObjT*, rho : ObjT*, z : ObjT*, cntx : CntxT*)
  fun dotxaxpyf_ex = bli_dotxaxpyf_ex(alpha : ObjT*, at : ObjT*, a : ObjT*, w : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, z : ObjT*, cntx : CntxT*)
  fun dotxf_ex = bli_dotxf_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*)
  fun axpy2v = bli_axpy2v(alphax : ObjT*, alphay : ObjT*, x : ObjT*, y : ObjT*, z : ObjT*)
  fun axpyf = bli_axpyf(alpha : ObjT*, a : ObjT*, x : ObjT*, y : ObjT*)
  fun dotaxpyv = bli_dotaxpyv(alpha : ObjT*, xt : ObjT*, x : ObjT*, y : ObjT*, rho : ObjT*, z : ObjT*)
  fun dotxaxpyf = bli_dotxaxpyf(alpha : ObjT*, at : ObjT*, a : ObjT*, w : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, z : ObjT*)
  fun dotxf = bli_dotxf(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun saxpy2v = bli_saxpy2v(conjx : ConjT, conjy : ConjT, n : DimT, alphax : LibC::Float*, alphay : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, z : LibC::Float*, incz : IncT, cntx : CntxT*)
  fun daxpy2v = bli_daxpy2v(conjx : ConjT, conjy : ConjT, n : DimT, alphax : LibC::Double*, alphay : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, z : LibC::Double*, incz : IncT, cntx : CntxT*)
  fun caxpy2v = bli_caxpy2v(conjx : ConjT, conjy : ConjT, n : DimT, alphax : Scomplex*, alphay : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, z : Scomplex*, incz : IncT, cntx : CntxT*)
  fun zaxpy2v = bli_zaxpy2v(conjx : ConjT, conjy : ConjT, n : DimT, alphax : Dcomplex*, alphay : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, z : Dcomplex*, incz : IncT, cntx : CntxT*)
  fun saxpyf = bli_saxpyf(conja : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Float*, a : LibC::Float*, inca : IncT, lda : IncT, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun daxpyf = bli_daxpyf(conja : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Double*, a : LibC::Double*, inca : IncT, lda : IncT, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun caxpyf = bli_caxpyf(conja : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zaxpyf = bli_zaxpyf(conja : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sdotaxpyv = bli_sdotaxpyv(conjxt : ConjT, conjx : ConjT, conjy : ConjT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, rho : LibC::Float*, z : LibC::Float*, incz : IncT, cntx : CntxT*)
  fun ddotaxpyv = bli_ddotaxpyv(conjxt : ConjT, conjx : ConjT, conjy : ConjT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, rho : LibC::Double*, z : LibC::Double*, incz : IncT, cntx : CntxT*)
  fun cdotaxpyv = bli_cdotaxpyv(conjxt : ConjT, conjx : ConjT, conjy : ConjT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, rho : Scomplex*, z : Scomplex*, incz : IncT, cntx : CntxT*)
  fun zdotaxpyv = bli_zdotaxpyv(conjxt : ConjT, conjx : ConjT, conjy : ConjT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, rho : Dcomplex*, z : Dcomplex*, incz : IncT, cntx : CntxT*)
  fun sdotxaxpyf = bli_sdotxaxpyf(conjat : ConjT, conja : ConjT, conjw : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Float*, a : LibC::Float*, inca : IncT, lda : IncT, w : LibC::Float*, incw : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, z : LibC::Float*, incz : IncT, cntx : CntxT*)
  fun ddotxaxpyf = bli_ddotxaxpyf(conjat : ConjT, conja : ConjT, conjw : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Double*, a : LibC::Double*, inca : IncT, lda : IncT, w : LibC::Double*, incw : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, z : LibC::Double*, incz : IncT, cntx : CntxT*)
  fun cdotxaxpyf = bli_cdotxaxpyf(conjat : ConjT, conja : ConjT, conjw : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, w : Scomplex*, incw : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, z : Scomplex*, incz : IncT, cntx : CntxT*)
  fun zdotxaxpyf = bli_zdotxaxpyf(conjat : ConjT, conja : ConjT, conjw : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, w : Dcomplex*, incw : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, z : Dcomplex*, incz : IncT, cntx : CntxT*)
  fun sdotxf = bli_sdotxf(conjat : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Float*, a : LibC::Float*, inca : IncT, lda : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun ddotxf = bli_ddotxf(conjat : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : LibC::Double*, a : LibC::Double*, inca : IncT, lda : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cdotxf = bli_cdotxf(conjat : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zdotxf = bli_zdotxf(conjat : ConjT, conjx : ConjT, m : DimT, b_n : DimT, alpha : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun addm_check = bli_addm_check(x : ObjT*, y : ObjT*)
  fun copym_check = bli_copym_check(x : ObjT*, y : ObjT*)
  fun subm_check = bli_subm_check(x : ObjT*, y : ObjT*)
  fun axpym_check = bli_axpym_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scal2m_check = bli_scal2m_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scalm_check = bli_scalm_check(alpha : ObjT*, x : ObjT*)
  fun setm_check = bli_setm_check(alpha : ObjT*, x : ObjT*)
  fun l1m_xy_check = bli_l1m_xy_check(x : ObjT*, y : ObjT*)
  fun l1m_axy_check = bli_l1m_axy_check(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun l1m_ax_check = bli_l1m_ax_check(alpha : ObjT*, x : ObjT*)
  fun addm_ex = bli_addm_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun copym_ex = bli_copym_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun subm_ex = bli_subm_ex(x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun axpym_ex = bli_axpym_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun scal2m_ex = bli_scal2m_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, cntx : CntxT*)
  fun scalm_ex = bli_scalm_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun setm_ex = bli_setm_ex(alpha : ObjT*, x : ObjT*, cntx : CntxT*)
  fun addm = bli_addm(x : ObjT*, y : ObjT*)
  fun copym = bli_copym(x : ObjT*, y : ObjT*)
  fun subm = bli_subm(x : ObjT*, y : ObjT*)
  fun axpym = bli_axpym(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scal2m = bli_scal2m(alpha : ObjT*, x : ObjT*, y : ObjT*)
  fun scalm = bli_scalm(alpha : ObjT*, x : ObjT*)
  fun setm = bli_setm(alpha : ObjT*, x : ObjT*)
  fun saddm = bli_saddm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun daddm = bli_daddm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun caddm = bli_caddm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zaddm = bli_zaddm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun scopym = bli_scopym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dcopym = bli_dcopym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun ccopym = bli_ccopym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zcopym = bli_zcopym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun ssubm = bli_ssubm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dsubm = bli_dsubm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun csubm = bli_csubm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zsubm = bli_zsubm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun saxpym = bli_saxpym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun daxpym = bli_daxpym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun caxpym = bli_caxpym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zaxpym = bli_zaxpym(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun sscal2m = bli_sscal2m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dscal2m = bli_dscal2m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun cscal2m = bli_cscal2m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zscal2m = bli_zscal2m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun sscalm = bli_sscalm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dscalm = bli_dscalm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun cscalm = bli_cscalm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zscalm = bli_zscalm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun ssetm = bli_ssetm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dsetm = bli_dsetm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun csetm = bli_csetm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zsetm = bli_zsetm(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun saddm_unb_var1 = bli_saddm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun daddm_unb_var1 = bli_daddm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun caddm_unb_var1 = bli_caddm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zaddm_unb_var1 = bli_zaddm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun scopym_unb_var1 = bli_scopym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dcopym_unb_var1 = bli_dcopym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun ccopym_unb_var1 = bli_ccopym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zcopym_unb_var1 = bli_zcopym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun ssubm_unb_var1 = bli_ssubm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dsubm_unb_var1 = bli_dsubm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun csubm_unb_var1 = bli_csubm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zsubm_unb_var1 = bli_zsubm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun saxpym_unb_var1 = bli_saxpym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun daxpym_unb_var1 = bli_daxpym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun caxpym_unb_var1 = bli_caxpym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zaxpym_unb_var1 = bli_zaxpym_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun sscal2m_unb_var1 = bli_sscal2m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, y : LibC::Float*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun dscal2m_unb_var1 = bli_dscal2m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, y : LibC::Double*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun cscal2m_unb_var1 = bli_cscal2m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, y : Scomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun zscal2m_unb_var1 = bli_zscal2m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, transx : TransT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, y : Dcomplex*, rs_y : IncT, cs_y : IncT, cntx : CntxT*)
  fun sscalm_unb_var1 = bli_sscalm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dscalm_unb_var1 = bli_dscalm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun cscalm_unb_var1 = bli_cscalm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zscalm_unb_var1 = bli_zscalm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun ssetm_unb_var1 = bli_ssetm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun dsetm_unb_var1 = bli_dsetm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun csetm_unb_var1 = bli_csetm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zsetm_unb_var1 = bli_zsetm_unb_var1(conjalpha : ConjT, diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun cntl_packm_params_var_func = bli_cntl_packm_params_var_func(cntl : CntlT*) : PackmVoft
  alias PackmVoft = (ObjT*, ObjT*, CntxT*, CntlT*, ThrinfoT* -> Void)
  fun cntl_packm_params_bmid_m = bli_cntl_packm_params_bmid_m(cntl : CntlT*) : BszidT
  fun cntl_packm_params_bmid_n = bli_cntl_packm_params_bmid_n(cntl : CntlT*) : BszidT
  fun cntl_packm_params_does_invert_diag = bli_cntl_packm_params_does_invert_diag(cntl : CntlT*) : BoolT
  fun cntl_packm_params_rev_iter_if_upper = bli_cntl_packm_params_rev_iter_if_upper(cntl : CntlT*) : BoolT
  fun cntl_packm_params_rev_iter_if_lower = bli_cntl_packm_params_rev_iter_if_lower(cntl : CntlT*) : BoolT
  fun cntl_packm_params_pack_schema = bli_cntl_packm_params_pack_schema(cntl : CntlT*) : PackT
  fun cntl_packm_params_pack_buf_type = bli_cntl_packm_params_pack_buf_type(cntl : CntlT*) : PackbufT
  fun packm_cntl_create_node = bli_packm_cntl_create_node(var_func : Void*, packm_var_func : Void*, bmid_m : BszidT, bmid_n : BszidT, does_invert_diag : BoolT, rev_iter_if_upper : BoolT, rev_iter_if_lower : BoolT, pack_schema : PackT, pack_buf_type : PackbufT, sub_node : CntlT*) : CntlT*
  fun packm_init_check = bli_packm_init_check(a : ObjT*, p : ObjT*, cntx : CntxT*)
  fun packm_int_check = bli_packm_int_check(a : ObjT*, p : ObjT*, cntx : CntxT*)
  fun packm_init = bli_packm_init(a : ObjT*, p : ObjT*, cntx : CntxT*, cntl : CntlT*) : SizT
  fun packm_init_pack = bli_packm_init_pack(invert_diag : InvdiagT, schema : PackT, pack_ord_if_up : PackordT, pack_ord_if_lo : PackordT, bmult_id_m : BszidT, bmult_id_n : BszidT, a : ObjT*, p : ObjT*, cntx : CntxT*) : SizT
  fun packm_int = bli_packm_int(a : ObjT*, p : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun packm_acquire_mpart_t2b = bli_packm_acquire_mpart_t2b(requested_part : SubpartT, i : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun packm_acquire_mpart_l2r = bli_packm_acquire_mpart_l2r(requested_part : SubpartT, j : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun packm_acquire_mpart_tl2br = bli_packm_acquire_mpart_tl2br(requested_part : SubpartT, ij : DimT, b : DimT, obj : ObjT*, sub_obj : ObjT*)
  fun packm_offset_to_panel_for = bli_packm_offset_to_panel_for(offmn : DimT, p : ObjT*) : DimT
  fun packm_unb_var1 = bli_packm_unb_var1(c : ObjT*, p : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun spackm_unb_var1 = bli_spackm_unb_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, cntx : CntxT*)
  fun dpackm_unb_var1 = bli_dpackm_unb_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, cntx : CntxT*)
  fun cpackm_unb_var1 = bli_cpackm_unb_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, cntx : CntxT*)
  fun zpackm_unb_var1 = bli_zpackm_unb_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, cntx : CntxT*)
  fun packm_blk_var1 = bli_packm_blk_var1(c : ObjT*, p : ObjT*, cntx : CntxT*, cntl : CntlT*, t : ThrinfoT*)
  fun spackm_blk_var1 = bli_spackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, schema : PackT, invdiag : BoolT, revifup : BoolT, reviflo : BoolT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, is_p : IncT, pd_p : DimT, ps_p : IncT, packm_ker : Void*, cntx : CntxT*, thread : ThrinfoT*)
  fun dpackm_blk_var1 = bli_dpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, schema : PackT, invdiag : BoolT, revifup : BoolT, reviflo : BoolT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, is_p : IncT, pd_p : DimT, ps_p : IncT, packm_ker : Void*, cntx : CntxT*, thread : ThrinfoT*)
  fun cpackm_blk_var1 = bli_cpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, schema : PackT, invdiag : BoolT, revifup : BoolT, reviflo : BoolT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, is_p : IncT, pd_p : DimT, ps_p : IncT, packm_ker : Void*, cntx : CntxT*, thread : ThrinfoT*)
  fun zpackm_blk_var1 = bli_zpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, schema : PackT, invdiag : BoolT, revifup : BoolT, reviflo : BoolT, m : DimT, n : DimT, m_max : DimT, n_max : DimT, kappa : Void*, c : Void*, rs_c : IncT, cs_c : IncT, p : Void*, rs_p : IncT, cs_p : IncT, is_p : IncT, pd_p : DimT, ps_p : IncT, packm_ker : Void*, cntx : CntxT*, thread : ThrinfoT*)
  fun spackm_struc_cxk = bli_spackm_struc_cxk(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, p : LibC::Float*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun dpackm_struc_cxk = bli_dpackm_struc_cxk(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, p : LibC::Double*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun cpackm_struc_cxk = bli_cpackm_struc_cxk(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun zpackm_struc_cxk = bli_zpackm_struc_cxk(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun spackm_herm_cxk = bli_spackm_herm_cxk(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : LibC::Float*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun dpackm_herm_cxk = bli_dpackm_herm_cxk(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : LibC::Double*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_herm_cxk = bli_cpackm_herm_cxk(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_herm_cxk = bli_zpackm_herm_cxk(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun spackm_tri_cxk = bli_spackm_tri_cxk(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : LibC::Float*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun dpackm_tri_cxk = bli_dpackm_tri_cxk(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : LibC::Double*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_tri_cxk = bli_cpackm_tri_cxk(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_tri_cxk = bli_zpackm_tri_cxk(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_struc_cxk_4mi = bli_cpackm_struc_cxk_4mi(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun zpackm_struc_cxk_4mi = bli_zpackm_struc_cxk_4mi(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun cpackm_herm_cxk_4mi = bli_cpackm_herm_cxk_4mi(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_herm_cxk_4mi = bli_zpackm_herm_cxk_4mi(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_tri_cxk_4mi = bli_cpackm_tri_cxk_4mi(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_tri_cxk_4mi = bli_zpackm_tri_cxk_4mi(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_struc_cxk_3mis = bli_cpackm_struc_cxk_3mis(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun zpackm_struc_cxk_3mis = bli_zpackm_struc_cxk_3mis(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun cpackm_herm_cxk_3mis = bli_cpackm_herm_cxk_3mis(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_herm_cxk_3mis = bli_zpackm_herm_cxk_3mis(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_tri_cxk_3mis = bli_cpackm_tri_cxk_3mis(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_tri_cxk_3mis = bli_zpackm_tri_cxk_3mis(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_struc_cxk_rih = bli_cpackm_struc_cxk_rih(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun zpackm_struc_cxk_rih = bli_zpackm_struc_cxk_rih(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun cpackm_herm_cxk_rih = bli_cpackm_herm_cxk_rih(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_herm_cxk_rih = bli_zpackm_herm_cxk_rih(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_tri_cxk_rih = bli_cpackm_tri_cxk_rih(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_tri_cxk_rih = bli_zpackm_tri_cxk_rih(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_struc_cxk_1er = bli_cpackm_struc_cxk_1er(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun zpackm_struc_cxk_1er = bli_zpackm_struc_cxk_1er(strucc : StrucT, diagoffp : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, is_p : IncT, cntx : CntxT*)
  fun cpackm_herm_cxk_1er = bli_cpackm_herm_cxk_1er(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_herm_cxk_1er = bli_zpackm_herm_cxk_1er(strucc : StrucT, diagoffc : DoffT, uploc : UploT, conjc : ConjT, schema : PackT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_tri_cxk_1er = bli_cpackm_tri_cxk_1er(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Scomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_tri_cxk_1er = bli_zpackm_tri_cxk_1er(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, conjc : ConjT, schema : PackT, invdiag : BoolT, m_panel : DimT, n_panel : DimT, m_panel_max : DimT, n_panel_max : DimT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, incc : IncT, ldc : IncT, p : Dcomplex*, rs_p : IncT, cs_p : IncT, ldp : IncT, cntx : CntxT*)
  fun spackm_cxk = bli_spackm_cxk(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Float*, a : LibC::Float*, inca : IncT, lda : IncT, p : LibC::Float*, ldp : IncT, cntx : CntxT*)
  fun dpackm_cxk = bli_dpackm_cxk(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Double*, a : LibC::Double*, inca : IncT, lda : IncT, p : LibC::Double*, ldp : IncT, cntx : CntxT*)
  fun cpackm_cxk = bli_cpackm_cxk(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, p : Scomplex*, ldp : IncT, cntx : CntxT*)
  fun zpackm_cxk = bli_zpackm_cxk(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, p : Dcomplex*, ldp : IncT, cntx : CntxT*)
  fun cpackm_cxk_4mi = bli_cpackm_cxk_4mi(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, p : Scomplex*, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_cxk_4mi = bli_zpackm_cxk_4mi(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, p : Dcomplex*, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_cxk_3mis = bli_cpackm_cxk_3mis(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, p : Scomplex*, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun zpackm_cxk_3mis = bli_zpackm_cxk_3mis(conja : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, p : Dcomplex*, is_p : IncT, ldp : IncT, cntx : CntxT*)
  fun cpackm_cxk_rih = bli_cpackm_cxk_rih(conja : ConjT, schema : PackT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, p : Scomplex*, ldp : IncT, cntx : CntxT*)
  fun zpackm_cxk_rih = bli_zpackm_cxk_rih(conja : ConjT, schema : PackT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, p : Dcomplex*, ldp : IncT, cntx : CntxT*)
  fun cpackm_cxk_1er = bli_cpackm_cxk_1er(conja : ConjT, schema : PackT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, a : Scomplex*, inca : IncT, lda : IncT, p : Scomplex*, ldp : IncT, cntx : CntxT*)
  fun zpackm_cxk_1er = bli_zpackm_cxk_1er(conja : ConjT, schema : PackT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, a : Dcomplex*, inca : IncT, lda : IncT, p : Dcomplex*, ldp : IncT, cntx : CntxT*)
  fun unpackm_cntl_create_node = bli_unpackm_cntl_create_node(var_func : Void*, unpackm_var_func : Void*, sub_node : CntlT*) : CntlT*
  fun unpackm_int_check = bli_unpackm_int_check(p : ObjT*, a : ObjT*, cntx : CntxT*)
  fun unpackm_int = bli_unpackm_int(p : ObjT*, a : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun unpackm_unb_var1 = bli_unpackm_unb_var1(p : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun sunpackm_unb_var1 = bli_sunpackm_unb_var1(diagoffp : DoffT, uplop : UploT, transp : TransT, m : DimT, n : DimT, p : Void*, rs_p : IncT, cs_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dunpackm_unb_var1 = bli_dunpackm_unb_var1(diagoffp : DoffT, uplop : UploT, transp : TransT, m : DimT, n : DimT, p : Void*, rs_p : IncT, cs_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cunpackm_unb_var1 = bli_cunpackm_unb_var1(diagoffp : DoffT, uplop : UploT, transp : TransT, m : DimT, n : DimT, p : Void*, rs_p : IncT, cs_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zunpackm_unb_var1 = bli_zunpackm_unb_var1(diagoffp : DoffT, uplop : UploT, transp : TransT, m : DimT, n : DimT, p : Void*, rs_p : IncT, cs_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun unpackm_blk_var1 = bli_unpackm_blk_var1(p : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun sunpackm_blk_var1 = bli_sunpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_panel : DimT, n_panel : DimT, p : Void*, rs_p : IncT, cs_p : IncT, pd_p : DimT, ps_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dunpackm_blk_var1 = bli_dunpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_panel : DimT, n_panel : DimT, p : Void*, rs_p : IncT, cs_p : IncT, pd_p : DimT, ps_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cunpackm_blk_var1 = bli_cunpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_panel : DimT, n_panel : DimT, p : Void*, rs_p : IncT, cs_p : IncT, pd_p : DimT, ps_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zunpackm_blk_var1 = bli_zunpackm_blk_var1(strucc : StrucT, diagoffc : DoffT, diagc : DiagT, uploc : UploT, transc : TransT, m : DimT, n : DimT, m_panel : DimT, n_panel : DimT, p : Void*, rs_p : IncT, cs_p : IncT, pd_p : DimT, ps_p : IncT, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sunpackm_cxk = bli_sunpackm_cxk(conjp : ConjT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Float*, p : LibC::Float*, ldp : IncT, a : LibC::Float*, inca : IncT, lda : IncT, cntx : CntxT*)
  fun dunpackm_cxk = bli_dunpackm_cxk(conjp : ConjT, panel_dim : DimT, panel_len : DimT, kappa : LibC::Double*, p : LibC::Double*, ldp : IncT, a : LibC::Double*, inca : IncT, lda : IncT, cntx : CntxT*)
  fun cunpackm_cxk = bli_cunpackm_cxk(conjp : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Scomplex*, p : Scomplex*, ldp : IncT, a : Scomplex*, inca : IncT, lda : IncT, cntx : CntxT*)
  fun zunpackm_cxk = bli_zunpackm_cxk(conjp : ConjT, panel_dim : DimT, panel_len : DimT, kappa : Dcomplex*, p : Dcomplex*, ldp : IncT, a : Dcomplex*, inca : IncT, lda : IncT, cntx : CntxT*)
  fun scalm_cntl_create_node = bli_scalm_cntl_create_node(var_func : Void*, sub_node : CntlT*) : CntlT*
  fun gemv_check = bli_gemv_check(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun hemv_check = bli_hemv_check(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun symv_check = bli_symv_check(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun ger_check = bli_ger_check(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun her2_check = bli_her2_check(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun syr2_check = bli_syr2_check(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun her_check = bli_her_check(alpha : ObjT*, x : ObjT*, a : ObjT*)
  fun syr_check = bli_syr_check(alpha : ObjT*, x : ObjT*, a : ObjT*)
  fun trmv_check = bli_trmv_check(alpha : ObjT*, a : ObjT*, x : ObjT*)
  fun trsv_check = bli_trsv_check(alpha : ObjT*, a : ObjT*, x : ObjT*)
  fun xxmv_check = bli_xxmv_check(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun xxr_check = bli_xxr_check(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun gemv_ex = bli_gemv_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*)
  fun hemv_ex = bli_hemv_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*)
  fun symv_ex = bli_symv_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*)
  fun ger_ex = bli_ger_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*)
  fun her2_ex = bli_her2_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*)
  fun syr2_ex = bli_syr2_ex(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*)
  fun her_ex = bli_her_ex(alpha : ObjT*, x : ObjT*, a : ObjT*, cntx : CntxT*)
  fun syr_ex = bli_syr_ex(alpha : ObjT*, x : ObjT*, a : ObjT*, cntx : CntxT*)
  fun trmv_ex = bli_trmv_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*)
  fun trsv_ex = bli_trsv_ex(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*)
  fun gemv = bli_gemv(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun hemv = bli_hemv(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun symv = bli_symv(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*)
  fun ger = bli_ger(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun her2 = bli_her2(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun syr2 = bli_syr2(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*)
  fun her = bli_her(alpha : ObjT*, x : ObjT*, a : ObjT*)
  fun syr = bli_syr(alpha : ObjT*, x : ObjT*, a : ObjT*)
  fun trmv = bli_trmv(alpha : ObjT*, a : ObjT*, x : ObjT*)
  fun trsv = bli_trsv(alpha : ObjT*, a : ObjT*, x : ObjT*)
  fun sgemv = bli_sgemv(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dgemv = bli_dgemv(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cgemv = bli_cgemv(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zgemv = bli_zgemv(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sger = bli_sger(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dger = bli_dger(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cger = bli_cger(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zger = bli_zger(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun shemv = bli_shemv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv = bli_dhemv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv = bli_chemv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv = bli_zhemv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun ssymv = bli_ssymv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dsymv = bli_dsymv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun csymv = bli_csymv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zsymv = bli_zsymv(uploa : UploT, conja : ConjT, conjx : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sher = bli_sher(uploa : UploT, conjx : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dher = bli_dher(uploa : UploT, conjx : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cher = bli_cher(uploa : UploT, conjx : ConjT, m : DimT, alpha : LibC::Float*, x : Scomplex*, incx : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zher = bli_zher(uploa : UploT, conjx : ConjT, m : DimT, alpha : LibC::Double*, x : Dcomplex*, incx : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun ssyr = bli_ssyr(uploa : UploT, conjx : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dsyr = bli_dsyr(uploa : UploT, conjx : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun csyr = bli_csyr(uploa : UploT, conjx : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zsyr = bli_zsyr(uploa : UploT, conjx : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun sher2 = bli_sher2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dher2 = bli_dher2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cher2 = bli_cher2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zher2 = bli_zher2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun ssyr2 = bli_ssyr2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dsyr2 = bli_dsyr2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun csyr2 = bli_csyr2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zsyr2 = bli_zsyr2(uploa : UploT, conjx : ConjT, conjy : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun strmv = bli_strmv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrmv = bli_dtrmv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrmv = bli_ctrmv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrmv = bli_ztrmv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strsv = bli_strsv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrsv = bli_dtrsv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrsv = bli_ctrsv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrsv = bli_ztrsv(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun gemv_blk_var1 = bli_gemv_blk_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun gemv_blk_var2 = bli_gemv_blk_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun gemv_unb_var1 = bli_gemv_unb_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun gemv_unb_var2 = bli_gemv_unb_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun gemv_unf_var1 = bli_gemv_unf_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun gemv_unf_var2 = bli_gemv_unf_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun sgemv_unb_var1 = bli_sgemv_unb_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dgemv_unb_var1 = bli_dgemv_unb_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cgemv_unb_var1 = bli_cgemv_unb_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zgemv_unb_var1 = bli_zgemv_unb_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sgemv_unb_var2 = bli_sgemv_unb_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dgemv_unb_var2 = bli_dgemv_unb_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cgemv_unb_var2 = bli_cgemv_unb_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zgemv_unb_var2 = bli_zgemv_unb_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sgemv_unf_var1 = bli_sgemv_unf_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dgemv_unf_var1 = bli_dgemv_unf_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cgemv_unf_var1 = bli_cgemv_unf_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zgemv_unf_var1 = bli_zgemv_unf_var1(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun sgemv_unf_var2 = bli_sgemv_unf_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dgemv_unf_var2 = bli_dgemv_unf_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun cgemv_unf_var2 = bli_cgemv_unf_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zgemv_unf_var2 = bli_zgemv_unf_var2(transa : TransT, conjx : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun ger_blk_var1 = bli_ger_blk_var1(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun ger_blk_var2 = bli_ger_blk_var2(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun ger_unb_var1 = bli_ger_unb_var1(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun ger_unb_var2 = bli_ger_unb_var2(alpha : ObjT*, x : ObjT*, y : ObjT*, a : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun sger_unb_var1 = bli_sger_unb_var1(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dger_unb_var1 = bli_dger_unb_var1(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cger_unb_var1 = bli_cger_unb_var1(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zger_unb_var1 = bli_zger_unb_var1(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun sger_unb_var2 = bli_sger_unb_var2(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dger_unb_var2 = bli_dger_unb_var2(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cger_unb_var2 = bli_cger_unb_var2(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zger_unb_var2 = bli_zger_unb_var2(conjx : ConjT, conjy : ConjT, m : DimT, n : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun hemv_blk_var1 = bli_hemv_blk_var1(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_blk_var2 = bli_hemv_blk_var2(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_blk_var3 = bli_hemv_blk_var3(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_blk_var4 = bli_hemv_blk_var4(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unb_var1 = bli_hemv_unb_var1(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unb_var2 = bli_hemv_unb_var2(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unb_var3 = bli_hemv_unb_var3(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unb_var4 = bli_hemv_unb_var4(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unf_var1 = bli_hemv_unf_var1(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unf_var3 = bli_hemv_unf_var3(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unf_var1a = bli_hemv_unf_var1a(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun hemv_unf_var3a = bli_hemv_unf_var3a(conjh : ConjT, alpha : ObjT*, a : ObjT*, x : ObjT*, beta : ObjT*, y : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun shemv_unb_var1 = bli_shemv_unb_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unb_var1 = bli_dhemv_unb_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unb_var1 = bli_chemv_unb_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unb_var1 = bli_zhemv_unb_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unb_var2 = bli_shemv_unb_var2(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unb_var2 = bli_dhemv_unb_var2(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unb_var2 = bli_chemv_unb_var2(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unb_var2 = bli_zhemv_unb_var2(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unb_var3 = bli_shemv_unb_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unb_var3 = bli_dhemv_unb_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unb_var3 = bli_chemv_unb_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unb_var3 = bli_zhemv_unb_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unb_var4 = bli_shemv_unb_var4(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unb_var4 = bli_dhemv_unb_var4(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unb_var4 = bli_chemv_unb_var4(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unb_var4 = bli_zhemv_unb_var4(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unf_var1 = bli_shemv_unf_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unf_var1 = bli_dhemv_unf_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unf_var1 = bli_chemv_unf_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unf_var1 = bli_zhemv_unf_var1(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unf_var3 = bli_shemv_unf_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unf_var3 = bli_dhemv_unf_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unf_var3 = bli_chemv_unf_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unf_var3 = bli_zhemv_unf_var3(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unf_var1a = bli_shemv_unf_var1a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unf_var1a = bli_dhemv_unf_var1a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unf_var1a = bli_chemv_unf_var1a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unf_var1a = bli_zhemv_unf_var1a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun shemv_unf_var3a = bli_shemv_unf_var3a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, beta : LibC::Float*, y : LibC::Float*, incy : IncT, cntx : CntxT*)
  fun dhemv_unf_var3a = bli_dhemv_unf_var3a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, beta : LibC::Double*, y : LibC::Double*, incy : IncT, cntx : CntxT*)
  fun chemv_unf_var3a = bli_chemv_unf_var3a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, beta : Scomplex*, y : Scomplex*, incy : IncT, cntx : CntxT*)
  fun zhemv_unf_var3a = bli_zhemv_unf_var3a(uplo : UploT, conja : ConjT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, beta : Dcomplex*, y : Dcomplex*, incy : IncT, cntx : CntxT*)
  fun her_blk_var1 = bli_her_blk_var1(conjh : ConjT, alpha : ObjT*, x : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her_blk_var2 = bli_her_blk_var2(conjh : ConjT, alpha : ObjT*, x : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her_unb_var1 = bli_her_unb_var1(conjh : ConjT, alpha : ObjT*, x : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her_unb_var2 = bli_her_unb_var2(conjh : ConjT, alpha : ObjT*, x : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun sher_unb_var1 = bli_sher_unb_var1(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher_unb_var1 = bli_dher_unb_var1(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher_unb_var1 = bli_cher_unb_var1(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher_unb_var1 = bli_zher_unb_var1(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher_unb_var2 = bli_sher_unb_var2(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher_unb_var2 = bli_dher_unb_var2(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher_unb_var2 = bli_cher_unb_var2(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher_unb_var2 = bli_zher_unb_var2(uplo : UploT, conjx : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun her2_blk_var1 = bli_her2_blk_var1(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_blk_var2 = bli_her2_blk_var2(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_blk_var3 = bli_her2_blk_var3(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_blk_var4 = bli_her2_blk_var4(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_unb_var1 = bli_her2_unb_var1(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_unb_var2 = bli_her2_unb_var2(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_unb_var3 = bli_her2_unb_var3(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_unb_var4 = bli_her2_unb_var4(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_unf_var1 = bli_her2_unf_var1(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun her2_unf_var4 = bli_her2_unf_var4(conjh : ConjT, alpha : ObjT*, alpha_conj : ObjT*, x : ObjT*, y : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun sher2_unb_var1 = bli_sher2_unb_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2_unb_var1 = bli_dher2_unb_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2_unb_var1 = bli_cher2_unb_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2_unb_var1 = bli_zher2_unb_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2_unb_var2 = bli_sher2_unb_var2(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2_unb_var2 = bli_dher2_unb_var2(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2_unb_var2 = bli_cher2_unb_var2(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2_unb_var2 = bli_zher2_unb_var2(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2_unb_var3 = bli_sher2_unb_var3(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2_unb_var3 = bli_dher2_unb_var3(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2_unb_var3 = bli_cher2_unb_var3(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2_unb_var3 = bli_zher2_unb_var3(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2_unb_var4 = bli_sher2_unb_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2_unb_var4 = bli_dher2_unb_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2_unb_var4 = bli_cher2_unb_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2_unb_var4 = bli_zher2_unb_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2_unf_var1 = bli_sher2_unf_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2_unf_var1 = bli_dher2_unf_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2_unf_var1 = bli_cher2_unf_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2_unf_var1 = bli_zher2_unf_var1(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2_unf_var4 = bli_sher2_unf_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Float*, x : LibC::Float*, incx : IncT, y : LibC::Float*, incy : IncT, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2_unf_var4 = bli_dher2_unf_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : LibC::Double*, x : LibC::Double*, incx : IncT, y : LibC::Double*, incy : IncT, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2_unf_var4 = bli_cher2_unf_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Scomplex*, x : Scomplex*, incx : IncT, y : Scomplex*, incy : IncT, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2_unf_var4 = bli_zher2_unf_var4(uplo : UploT, conjx : ConjT, conjy : ConjT, conjh : ConjT, m : DimT, alpha : Dcomplex*, x : Dcomplex*, incx : IncT, y : Dcomplex*, incy : IncT, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun trmv_l_blk_var1 = bli_trmv_l_blk_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_l_blk_var2 = bli_trmv_l_blk_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_u_blk_var1 = bli_trmv_u_blk_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_u_blk_var2 = bli_trmv_u_blk_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_unb_var1 = bli_trmv_unb_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_unb_var2 = bli_trmv_unb_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_unf_var1 = bli_trmv_unf_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmv_unf_var2 = bli_trmv_unf_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun strmv_unb_var1 = bli_strmv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrmv_unb_var1 = bli_dtrmv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrmv_unb_var1 = bli_ctrmv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrmv_unb_var1 = bli_ztrmv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strmv_unb_var2 = bli_strmv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrmv_unb_var2 = bli_dtrmv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrmv_unb_var2 = bli_ctrmv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrmv_unb_var2 = bli_ztrmv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strmv_unf_var1 = bli_strmv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrmv_unf_var1 = bli_dtrmv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrmv_unf_var1 = bli_ctrmv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrmv_unf_var1 = bli_ztrmv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strmv_unf_var2 = bli_strmv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrmv_unf_var2 = bli_dtrmv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrmv_unf_var2 = bli_ctrmv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrmv_unf_var2 = bli_ztrmv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun trsv_l_blk_var1 = bli_trsv_l_blk_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_l_blk_var2 = bli_trsv_l_blk_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_u_blk_var1 = bli_trsv_u_blk_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_u_blk_var2 = bli_trsv_u_blk_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_unb_var1 = bli_trsv_unb_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_unb_var2 = bli_trsv_unb_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_unf_var1 = bli_trsv_unf_var1(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsv_unf_var2 = bli_trsv_unf_var2(alpha : ObjT*, a : ObjT*, x : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun strsv_unb_var1 = bli_strsv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrsv_unb_var1 = bli_dtrsv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrsv_unb_var1 = bli_ctrsv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrsv_unb_var1 = bli_ztrsv_unb_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strsv_unb_var2 = bli_strsv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrsv_unb_var2 = bli_dtrsv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrsv_unb_var2 = bli_ctrsv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrsv_unb_var2 = bli_ztrsv_unb_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strsv_unf_var1 = bli_strsv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrsv_unf_var1 = bli_dtrsv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrsv_unf_var1 = bli_ctrsv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrsv_unf_var1 = bli_ztrsv_unf_var1(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun strsv_unf_var2 = bli_strsv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun dtrsv_unf_var2 = bli_dtrsv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun ctrsv_unf_var2 = bli_ctrsv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun ztrsv_unf_var2 = bli_ztrsv_unf_var2(uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun l3_cntl_create_if = bli_l3_cntl_create_if(family : OpidT, a : ObjT*, b : ObjT*, c : ObjT*, cntl_orig : CntlT*, cntl_use : CntlT**)
  fun l3_cntl_free_if = bli_l3_cntl_free_if(a : ObjT*, b : ObjT*, c : ObjT*, cntl_orig : CntlT*, cntl_use : CntlT*, thread : ThrinfoT*)
  fun gemm_check = bli_gemm_check(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k_check = bli_her2k_check(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k_check = bli_syr2k_check(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm_check = bli_hemm_check(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm_check = bli_symm_check(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm_check = bli_trmm_check(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trsm_check = bli_trsm_check(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk_check = bli_herk_check(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk_check = bli_syrk_check(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun gemm_basic_check = bli_gemm_basic_check(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm_basic_check = bli_hemm_basic_check(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk_basic_check = bli_herk_basic_check(alpha : ObjT*, a : ObjT*, ah : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k_basic_check = bli_her2k_basic_check(alpha : ObjT*, a : ObjT*, bh : ObjT*, b : ObjT*, ah : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun l3_basic_check = bli_l3_basic_check(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun l3_determine_kc = bli_l3_determine_kc(direct : DirT, i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*, cntl : CntlT*) : DimT
  fun gemm_determine_kc = bli_gemm_determine_kc(direct : DirT, i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun herk_determine_kc = bli_herk_determine_kc(direct : DirT, i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun trmm_determine_kc = bli_trmm_determine_kc(direct : DirT, i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun trsm_determine_kc = bli_trsm_determine_kc(direct : DirT, i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun gemm_determine_kc_f = bli_gemm_determine_kc_f(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun gemm_determine_kc_b = bli_gemm_determine_kc_b(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun herk_determine_kc_f = bli_herk_determine_kc_f(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun herk_determine_kc_b = bli_herk_determine_kc_b(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun trmm_determine_kc_f = bli_trmm_determine_kc_f(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun trmm_determine_kc_b = bli_trmm_determine_kc_b(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun trsm_determine_kc_f = bli_trsm_determine_kc_f(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun trsm_determine_kc_b = bli_trsm_determine_kc_b(i : DimT, dim : DimT, a : ObjT*, b : ObjT*, bszid : BszidT, cntx : CntxT*) : DimT
  fun l3_direct = bli_l3_direct(a : ObjT*, b : ObjT*, c : ObjT*, cntl : CntlT*) : DirT
  fun gemm_direct = bli_gemm_direct(a : ObjT*, b : ObjT*, c : ObjT*) : DirT
  fun herk_direct = bli_herk_direct(a : ObjT*, b : ObjT*, c : ObjT*) : DirT
  fun trmm_direct = bli_trmm_direct(a : ObjT*, b : ObjT*, c : ObjT*) : DirT
  fun trsm_direct = bli_trsm_direct(a : ObjT*, b : ObjT*, c : ObjT*) : DirT
  fun l3_prune_unref_mparts_m = bli_l3_prune_unref_mparts_m(a : ObjT*, b : ObjT*, c : ObjT*, cntl : CntlT*)
  fun l3_prune_unref_mparts_n = bli_l3_prune_unref_mparts_n(a : ObjT*, b : ObjT*, c : ObjT*, cntl : CntlT*)
  fun l3_prune_unref_mparts_k = bli_l3_prune_unref_mparts_k(a : ObjT*, b : ObjT*, c : ObjT*, cntl : CntlT*)
  fun gemm_prune_unref_mparts_m = bli_gemm_prune_unref_mparts_m(a : ObjT*, b : ObjT*, c : ObjT*)
  fun gemm_prune_unref_mparts_n = bli_gemm_prune_unref_mparts_n(a : ObjT*, b : ObjT*, c : ObjT*)
  fun gemm_prune_unref_mparts_k = bli_gemm_prune_unref_mparts_k(a : ObjT*, b : ObjT*, c : ObjT*)
  fun herk_prune_unref_mparts_m = bli_herk_prune_unref_mparts_m(a : ObjT*, b : ObjT*, c : ObjT*)
  fun herk_prune_unref_mparts_n = bli_herk_prune_unref_mparts_n(a : ObjT*, b : ObjT*, c : ObjT*)
  fun herk_prune_unref_mparts_k = bli_herk_prune_unref_mparts_k(a : ObjT*, b : ObjT*, c : ObjT*)
  fun trmm_prune_unref_mparts_m = bli_trmm_prune_unref_mparts_m(a : ObjT*, b : ObjT*, c : ObjT*)
  fun trmm_prune_unref_mparts_n = bli_trmm_prune_unref_mparts_n(a : ObjT*, b : ObjT*, c : ObjT*)
  fun trmm_prune_unref_mparts_k = bli_trmm_prune_unref_mparts_k(a : ObjT*, b : ObjT*, c : ObjT*)
  fun trsm_prune_unref_mparts_m = bli_trsm_prune_unref_mparts_m(a : ObjT*, b : ObjT*, c : ObjT*)
  fun trsm_prune_unref_mparts_n = bli_trsm_prune_unref_mparts_n(a : ObjT*, b : ObjT*, c : ObjT*)
  fun trsm_prune_unref_mparts_k = bli_trsm_prune_unref_mparts_k(a : ObjT*, b : ObjT*, c : ObjT*)
  fun l3_packm = bli_l3_packm(x : ObjT*, x_pack : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_ex = bli_gemm_ex(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun her2k_ex = bli_her2k_ex(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syr2k_ex = bli_syr2k_ex(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun hemm_ex = bli_hemm_ex(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun symm_ex = bli_symm_ex(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm3_ex = bli_trmm3_ex(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun herk_ex = bli_herk_ex(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun syrk_ex = bli_syrk_ex(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trmm_ex = bli_trmm_ex(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun trsm_ex = bli_trsm_ex(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*)
  fun gemm = bli_gemm(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*)
  fun her2k = bli_her2k(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*)
  fun syr2k = bli_syr2k(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*)
  fun hemm = bli_hemm(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*)
  fun symm = bli_symm(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*)
  fun trmm3 = bli_trmm3(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*)
  fun herk = bli_herk(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*)
  fun syrk = bli_syrk(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*)
  fun trmm = bli_trmm(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*)
  fun trsm = bli_trsm(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*)
  fun sgemm = bli_sgemm(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dgemm = bli_dgemm(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cgemm = bli_cgemm(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zgemm = bli_zgemm(transa : TransT, transb : TransT, m : DimT, n : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun shemm = bli_shemm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dhemm = bli_dhemm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun chemm = bli_chemm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zhemm = bli_zhemm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssymm = bli_ssymm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsymm = bli_dsymm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csymm = bli_csymm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsymm = bli_zsymm(side : SideT, uploa : UploT, conja : ConjT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sherk = bli_sherk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dherk = bli_dherk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cherk = bli_cherk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zherk = bli_zherk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun sher2k = bli_sher2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dher2k = bli_dher2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun cher2k = bli_cher2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zher2k = bli_zher2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyrk = bli_ssyrk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyrk = bli_dsyrk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyrk = bli_csyrk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyrk = bli_zsyrk(uploc : UploT, transa : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ssyr2k = bli_ssyr2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dsyr2k = bli_dsyr2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun csyr2k = bli_csyr2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun zsyr2k = bli_zsyr2k(uploc : UploT, transa : TransT, transb : TransT, m : DimT, k : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm3 = bli_strmm3(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun dtrmm3 = bli_dtrmm3(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ctrmm3 = bli_ctrmm3(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun ztrmm3 = bli_ztrmm3(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, transb : TransT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, cntx : CntxT*)
  fun strmm = bli_strmm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrmm = bli_dtrmm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrmm = bli_ctrmm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrmm = bli_ztrmm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun strsm = bli_strsm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Float*, a : LibC::Float*, rs_a : IncT, cs_a : IncT, b : LibC::Float*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun dtrsm = bli_dtrsm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : LibC::Double*, a : LibC::Double*, rs_a : IncT, cs_a : IncT, b : LibC::Double*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ctrsm = bli_ctrsm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Scomplex*, a : Scomplex*, rs_a : IncT, cs_a : IncT, b : Scomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun ztrsm = bli_ztrsm(side : SideT, uploa : UploT, transa : TransT, diaga : DiagT, m : DimT, n : DimT, alpha : Dcomplex*, a : Dcomplex*, rs_a : IncT, cs_a : IncT, b : Dcomplex*, rs_b : IncT, cs_b : IncT, cntx : CntxT*)
  fun gemm_ukernel = bli_gemm_ukernel(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*)
  fun trsm_ukernel = bli_trsm_ukernel(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*)
  fun gemmtrsm_ukernel = bli_gemmtrsm_ukernel(alpha : ObjT*, a1x : ObjT*, a11 : ObjT*, bx1 : ObjT*, b11 : ObjT*, c11 : ObjT*, cntx : CntxT*)
  fun sgemm_ukernel = bli_sgemm_ukernel(k : DimT, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, beta : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemm_ukernel = bli_dgemm_ukernel(k : DimT, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, beta : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun cgemm_ukernel = bli_cgemm_ukernel(k : DimT, alpha : Scomplex*, a : Scomplex*, b : Scomplex*, beta : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun zgemm_ukernel = bli_zgemm_ukernel(k : DimT, alpha : Dcomplex*, a : Dcomplex*, b : Dcomplex*, beta : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemmtrsm_l_ukernel = bli_sgemmtrsm_l_ukernel(k : DimT, alpha : LibC::Float*, a1x : LibC::Float*, a11 : LibC::Float*, bx1 : LibC::Float*, b11 : LibC::Float*, c11 : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemmtrsm_l_ukernel = bli_dgemmtrsm_l_ukernel(k : DimT, alpha : LibC::Double*, a1x : LibC::Double*, a11 : LibC::Double*, bx1 : LibC::Double*, b11 : LibC::Double*, c11 : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun cgemmtrsm_l_ukernel = bli_cgemmtrsm_l_ukernel(k : DimT, alpha : Scomplex*, a1x : Scomplex*, a11 : Scomplex*, bx1 : Scomplex*, b11 : Scomplex*, c11 : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun zgemmtrsm_l_ukernel = bli_zgemmtrsm_l_ukernel(k : DimT, alpha : Dcomplex*, a1x : Dcomplex*, a11 : Dcomplex*, bx1 : Dcomplex*, b11 : Dcomplex*, c11 : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun sgemmtrsm_u_ukernel = bli_sgemmtrsm_u_ukernel(k : DimT, alpha : LibC::Float*, a1x : LibC::Float*, a11 : LibC::Float*, bx1 : LibC::Float*, b11 : LibC::Float*, c11 : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dgemmtrsm_u_ukernel = bli_dgemmtrsm_u_ukernel(k : DimT, alpha : LibC::Double*, a1x : LibC::Double*, a11 : LibC::Double*, bx1 : LibC::Double*, b11 : LibC::Double*, c11 : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun cgemmtrsm_u_ukernel = bli_cgemmtrsm_u_ukernel(k : DimT, alpha : Scomplex*, a1x : Scomplex*, a11 : Scomplex*, bx1 : Scomplex*, b11 : Scomplex*, c11 : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun zgemmtrsm_u_ukernel = bli_zgemmtrsm_u_ukernel(k : DimT, alpha : Dcomplex*, a1x : Dcomplex*, a11 : Dcomplex*, bx1 : Dcomplex*, b11 : Dcomplex*, c11 : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun strsm_l_ukernel = bli_strsm_l_ukernel(a : LibC::Float*, b : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dtrsm_l_ukernel = bli_dtrsm_l_ukernel(a : LibC::Double*, b : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun ctrsm_l_ukernel = bli_ctrsm_l_ukernel(a : Scomplex*, b : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun ztrsm_l_ukernel = bli_ztrsm_l_ukernel(a : Dcomplex*, b : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun strsm_u_ukernel = bli_strsm_u_ukernel(a : LibC::Float*, b : LibC::Float*, c : LibC::Float*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun dtrsm_u_ukernel = bli_dtrsm_u_ukernel(a : LibC::Double*, b : LibC::Double*, c : LibC::Double*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun ctrsm_u_ukernel = bli_ctrsm_u_ukernel(a : Scomplex*, b : Scomplex*, c : Scomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun ztrsm_u_ukernel = bli_ztrsm_u_ukernel(a : Dcomplex*, b : Dcomplex*, c : Dcomplex*, rs_c : IncT, cs_c : IncT, data : AuxinfoT*, cntx : CntxT*)
  fun gemm_cntl_create = bli_gemm_cntl_create(family : OpidT) : CntlT*
  fun gemmbp_cntl_create = bli_gemmbp_cntl_create(family : OpidT) : CntlT*
  fun gemmpb_cntl_create = bli_gemmpb_cntl_create(family : OpidT) : CntlT*
  fun gemm_cntl_free = bli_gemm_cntl_free(cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_cntl_create_node = bli_gemm_cntl_create_node(family : OpidT, bszid : BszidT, var_func : Void*, sub_node : CntlT*) : CntlT*
  fun gemm_front = bli_gemm_front(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun gemm_small = bli_gemm_small(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*) : ErrT
  fun gemm_int = bli_gemm_int(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_blk_var1 = bli_gemm_blk_var1(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_blk_var2 = bli_gemm_blk_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_blk_var3 = bli_gemm_blk_var3(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_packa = bli_gemm_packa(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_packb = bli_gemm_packb(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_ker_var1 = bli_gemm_ker_var1(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm_ker_var2 = bli_gemm_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun gemm4mb_ker_var2 = bli_gemm4mb_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun sgemm_ker_var2 = bli_sgemm_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dgemm_ker_var2 = bli_dgemm_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun cgemm_ker_var2 = bli_cgemm_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun zgemm_ker_var2 = bli_zgemm_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun sgemm4mb_ker_var2 = bli_sgemm4mb_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dgemm4mb_ker_var2 = bli_dgemm4mb_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun cgemm4mb_ker_var2 = bli_cgemm4mb_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun zgemm4mb_ker_var2 = bli_zgemm4mb_ker_var2(schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun hemm_front = bli_hemm_front(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun herk_front = bli_herk_front(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun herk_x_ker_var2 = bli_herk_x_ker_var2(a : ObjT*, ah : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun herk_l_ker_var2 = bli_herk_l_ker_var2(a : ObjT*, ah : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun herk_u_ker_var2 = bli_herk_u_ker_var2(a : ObjT*, ah : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun sherk_l_ker_var2 = bli_sherk_l_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dherk_l_ker_var2 = bli_dherk_l_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun cherk_l_ker_var2 = bli_cherk_l_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun zherk_l_ker_var2 = bli_zherk_l_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun sherk_u_ker_var2 = bli_sherk_u_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dherk_u_ker_var2 = bli_dherk_u_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun cherk_u_ker_var2 = bli_cherk_u_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun zherk_u_ker_var2 = bli_zherk_u_ker_var2(diagoffc : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, is_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, is_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun her2k_front = bli_her2k_front(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun symm_front = bli_symm_front(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun syrk_front = bli_syrk_front(alpha : ObjT*, a : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun syr2k_front = bli_syr2k_front(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmm_front = bli_trmm_front(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trmm_xx_ker_var2 = bli_trmm_xx_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trmm_ll_ker_var2 = bli_trmm_ll_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trmm_lu_ker_var2 = bli_trmm_lu_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trmm_rl_ker_var2 = bli_trmm_rl_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trmm_ru_ker_var2 = bli_trmm_ru_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun strmm_ll_ker_var2 = bli_strmm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrmm_ll_ker_var2 = bli_dtrmm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrmm_ll_ker_var2 = bli_ctrmm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrmm_ll_ker_var2 = bli_ztrmm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun strmm_lu_ker_var2 = bli_strmm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrmm_lu_ker_var2 = bli_dtrmm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrmm_lu_ker_var2 = bli_ctrmm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrmm_lu_ker_var2 = bli_ztrmm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun strmm_rl_ker_var2 = bli_strmm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrmm_rl_ker_var2 = bli_dtrmm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrmm_rl_ker_var2 = bli_ctrmm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrmm_rl_ker_var2 = bli_ztrmm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun strmm_ru_ker_var2 = bli_strmm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrmm_ru_ker_var2 = bli_dtrmm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrmm_ru_ker_var2 = bli_ctrmm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrmm_ru_ker_var2 = bli_ztrmm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, beta : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun trmm3_front = bli_trmm3_front(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsm_cntl_create = bli_trsm_cntl_create(side : SideT) : CntlT*
  fun trsm_l_cntl_create = bli_trsm_l_cntl_create : CntlT*
  fun trsm_r_cntl_create = bli_trsm_r_cntl_create : CntlT*
  fun trsm_cntl_free = bli_trsm_cntl_free(cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_cntl_create_node = bli_trsm_cntl_create_node(family : OpidT, bszid : BszidT, var_func : Void*, sub_node : CntlT*) : CntlT*
  fun trsm_front = bli_trsm_front(side : SideT, alpha : ObjT*, a : ObjT*, b : ObjT*, cntx : CntxT*, cntl : CntlT*)
  fun trsm_int = bli_trsm_int(alpha : ObjT*, a : ObjT*, b : ObjT*, beta : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_blk_var1 = bli_trsm_blk_var1(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_blk_var2 = bli_trsm_blk_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_blk_var3 = bli_trsm_blk_var3(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_packa = bli_trsm_packa(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_packb = bli_trsm_packb(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_xx_ker_var2 = bli_trsm_xx_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_ll_ker_var2 = bli_trsm_ll_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_lu_ker_var2 = bli_trsm_lu_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_rl_ker_var2 = bli_trsm_rl_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun trsm_ru_ker_var2 = bli_trsm_ru_ker_var2(a : ObjT*, b : ObjT*, c : ObjT*, cntx : CntxT*, cntl : CntlT*, thread : ThrinfoT*)
  fun strsm_ll_ker_var2 = bli_strsm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrsm_ll_ker_var2 = bli_dtrsm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrsm_ll_ker_var2 = bli_ctrsm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrsm_ll_ker_var2 = bli_ztrsm_ll_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun strsm_lu_ker_var2 = bli_strsm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrsm_lu_ker_var2 = bli_dtrsm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrsm_lu_ker_var2 = bli_ctrsm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrsm_lu_ker_var2 = bli_ztrsm_lu_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun strsm_rl_ker_var2 = bli_strsm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrsm_rl_ker_var2 = bli_dtrsm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrsm_rl_ker_var2 = bli_ctrsm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrsm_rl_ker_var2 = bli_ztrsm_rl_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun strsm_ru_ker_var2 = bli_strsm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun dtrsm_ru_ker_var2 = bli_dtrsm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ctrsm_ru_ker_var2 = bli_ctrsm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun ztrsm_ru_ker_var2 = bli_ztrsm_ru_ker_var2(diagoff : DoffT, schema_a : PackT, schema_b : PackT, m : DimT, n : DimT, k : DimT, alpha1 : Void*, a : Void*, cs_a : IncT, pd_a : DimT, ps_a : IncT, b : Void*, rs_b : IncT, pd_b : DimT, ps_b : IncT, alpha2 : Void*, c : Void*, rs_c : IncT, cs_c : IncT, cntx : CntxT*, thread : ThrinfoT*)
  fun asumv_check = bli_asumv_check(x : ObjT*, asum : ObjT*)
  fun mkherm_check = bli_mkherm_check(x : ObjT*)
  fun mksymm_check = bli_mksymm_check(x : ObjT*)
  fun mktrim_check = bli_mktrim_check(x : ObjT*)
  fun norm1v_check = bli_norm1v_check(x : ObjT*, norm : ObjT*)
  fun normfv_check = bli_normfv_check(x : ObjT*, norm : ObjT*)
  fun normiv_check = bli_normiv_check(x : ObjT*, norm : ObjT*)
  fun norm1m_check = bli_norm1m_check(x : ObjT*, norm : ObjT*)
  fun normfm_check = bli_normfm_check(x : ObjT*, norm : ObjT*)
  fun normim_check = bli_normim_check(x : ObjT*, norm : ObjT*)
  fun fprintv_check = bli_fprintv_check(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)

  struct X__SFile
    _p : UInt8*
    _r : LibC::Int
    _w : LibC::Int
    _flags : LibC::Short
    _file : LibC::Short
    _bf : X__Sbuf
    _lbfsize : LibC::Int
    _cookie : Void*
    _close : (Void* -> LibC::Int)
    _read : (Void*, LibC::Char*, LibC::Int -> LibC::Int)
    _seek : (Void*, FposT, LibC::Int -> FposT)
    _write : (Void*, LibC::Char*, LibC::Int -> LibC::Int)
    _ub : X__Sbuf
    _extra : X__SFilex*
    _ur : LibC::Int
    _ubuf : UInt8[3]
    _nbuf : UInt8[1]
    _lb : X__Sbuf
    _blksize : LibC::Int
    _offset : FposT
  end

  type File = X__SFile

  struct X__Sbuf
    _base : UInt8*
    _size : LibC::Int
  end

  alias X__Int64T = LibC::LongLong
  alias X__DarwinOffT = X__Int64T
  alias FposT = X__DarwinOffT
  alias X__SFilex = Void
  fun fprintm_check = bli_fprintm_check(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)
  fun randv_check = bli_randv_check(x : ObjT*)
  fun randnv_check = bli_randnv_check(x : ObjT*)
  fun randm_check = bli_randm_check(x : ObjT*)
  fun randnm_check = bli_randnm_check(x : ObjT*)
  fun sumsqv_check = bli_sumsqv_check(x : ObjT*, scale : ObjT*, sumsq : ObjT*)
  fun utilv_xi_check = bli_utilv_xi_check(x : ObjT*, index : ObjT*)
  fun utilv_xa_check = bli_utilv_xa_check(x : ObjT*, asum : ObjT*)
  fun utilm_mkhst_check = bli_utilm_mkhst_check(a : ObjT*)
  fun utilv_norm_check = bli_utilv_norm_check(x : ObjT*, norm : ObjT*)
  fun utilm_norm_check = bli_utilm_norm_check(x : ObjT*, norm : ObjT*)
  fun utilm_fprint_check = bli_utilm_fprint_check(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)
  fun utilm_rand_check = bli_utilm_rand_check(x : ObjT*)
  fun utilv_sumsqv_check = bli_utilv_sumsqv_check(x : ObjT*, scale : ObjT*, sumsq : ObjT*)
  fun asumv_ex = bli_asumv_ex(x : ObjT*, asum : ObjT*, cntx : CntxT*)
  fun mkherm_ex = bli_mkherm_ex(a : ObjT*, cntx : CntxT*)
  fun mksymm_ex = bli_mksymm_ex(a : ObjT*, cntx : CntxT*)
  fun mktrim_ex = bli_mktrim_ex(a : ObjT*, cntx : CntxT*)
  fun norm1v_ex = bli_norm1v_ex(x : ObjT*, norm : ObjT*, cntx : CntxT*)
  fun normfv_ex = bli_normfv_ex(x : ObjT*, norm : ObjT*, cntx : CntxT*)
  fun normiv_ex = bli_normiv_ex(x : ObjT*, norm : ObjT*, cntx : CntxT*)
  fun norm1m_ex = bli_norm1m_ex(x : ObjT*, norm : ObjT*, cntx : CntxT*)
  fun normfm_ex = bli_normfm_ex(x : ObjT*, norm : ObjT*, cntx : CntxT*)
  fun normim_ex = bli_normim_ex(x : ObjT*, norm : ObjT*, cntx : CntxT*)
  fun fprintv_ex = bli_fprintv_ex(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*, cntx : CntxT*)
  fun fprintm_ex = bli_fprintm_ex(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*, cntx : CntxT*)
  fun printv_ex = bli_printv_ex(s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*, cntx : CntxT*)
  fun printm_ex = bli_printm_ex(s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*, cntx : CntxT*)
  fun randv_ex = bli_randv_ex(x : ObjT*, cntx : CntxT*)
  fun randnv_ex = bli_randnv_ex(x : ObjT*, cntx : CntxT*)
  fun randm_ex = bli_randm_ex(x : ObjT*, cntx : CntxT*)
  fun randnm_ex = bli_randnm_ex(x : ObjT*, cntx : CntxT*)
  fun sumsqv_ex = bli_sumsqv_ex(x : ObjT*, scale : ObjT*, sumsq : ObjT*, cntx : CntxT*)
  fun asumv = bli_asumv(x : ObjT*, asum : ObjT*)
  fun mkherm = bli_mkherm(a : ObjT*)
  fun mksymm = bli_mksymm(a : ObjT*)
  fun mktrim = bli_mktrim(a : ObjT*)
  fun norm1v = bli_norm1v(x : ObjT*, norm : ObjT*)
  fun normfv = bli_normfv(x : ObjT*, norm : ObjT*)
  fun normiv = bli_normiv(x : ObjT*, norm : ObjT*)
  fun norm1m = bli_norm1m(x : ObjT*, norm : ObjT*)
  fun normfm = bli_normfm(x : ObjT*, norm : ObjT*)
  fun normim = bli_normim(x : ObjT*, norm : ObjT*)
  fun fprintv = bli_fprintv(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)
  fun fprintm = bli_fprintm(file : File*, s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)
  fun printv = bli_printv(s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)
  fun printm = bli_printm(s1 : LibC::Char*, x : ObjT*, format : LibC::Char*, s2 : LibC::Char*)
  fun randv = bli_randv(x : ObjT*)
  fun randnv = bli_randnv(x : ObjT*)
  fun randm = bli_randm(x : ObjT*)
  fun randnm = bli_randnm(x : ObjT*)
  fun sumsqv = bli_sumsqv(x : ObjT*, scale : ObjT*, sumsq : ObjT*)
  fun sasumv = bli_sasumv(n : DimT, x : LibC::Float*, incx : IncT, asum : LibC::Float*, cntx : CntxT*)
  fun dasumv = bli_dasumv(n : DimT, x : LibC::Double*, incx : IncT, asum : LibC::Double*, cntx : CntxT*)
  fun casumv = bli_casumv(n : DimT, x : Scomplex*, incx : IncT, asum : LibC::Float*, cntx : CntxT*)
  fun zasumv = bli_zasumv(n : DimT, x : Dcomplex*, incx : IncT, asum : LibC::Double*, cntx : CntxT*)
  fun smkherm = bli_smkherm(uploa : UploT, m : DimT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dmkherm = bli_dmkherm(uploa : UploT, m : DimT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cmkherm = bli_cmkherm(uploa : UploT, m : DimT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zmkherm = bli_zmkherm(uploa : UploT, m : DimT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun smksymm = bli_smksymm(uploa : UploT, m : DimT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dmksymm = bli_dmksymm(uploa : UploT, m : DimT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cmksymm = bli_cmksymm(uploa : UploT, m : DimT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zmksymm = bli_zmksymm(uploa : UploT, m : DimT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun smktrim = bli_smktrim(uploa : UploT, m : DimT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dmktrim = bli_dmktrim(uploa : UploT, m : DimT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cmktrim = bli_cmktrim(uploa : UploT, m : DimT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zmktrim = bli_zmktrim(uploa : UploT, m : DimT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun snorm1v = bli_snorm1v(n : DimT, x : LibC::Float*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnorm1v = bli_dnorm1v(n : DimT, x : LibC::Double*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnorm1v = bli_cnorm1v(n : DimT, x : Scomplex*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znorm1v = bli_znorm1v(n : DimT, x : Dcomplex*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormfv = bli_snormfv(n : DimT, x : LibC::Float*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormfv = bli_dnormfv(n : DimT, x : LibC::Double*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormfv = bli_cnormfv(n : DimT, x : Scomplex*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormfv = bli_znormfv(n : DimT, x : Dcomplex*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormiv = bli_snormiv(n : DimT, x : LibC::Float*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormiv = bli_dnormiv(n : DimT, x : LibC::Double*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormiv = bli_cnormiv(n : DimT, x : Scomplex*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormiv = bli_znormiv(n : DimT, x : Dcomplex*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snorm1m = bli_snorm1m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnorm1m = bli_dnorm1m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnorm1m = bli_cnorm1m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znorm1m = bli_znorm1m(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormfm = bli_snormfm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormfm = bli_dnormfm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormfm = bli_cnormfm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormfm = bli_znormfm(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormim = bli_snormim(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormim = bli_dnormim(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormim = bli_cnormim(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormim = bli_znormim(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun sprintv = bli_sprintv(s1 : LibC::Char*, n : DimT, x : Void*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun dprintv = bli_dprintv(s1 : LibC::Char*, n : DimT, x : Void*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun cprintv = bli_cprintv(s1 : LibC::Char*, n : DimT, x : Void*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun zprintv = bli_zprintv(s1 : LibC::Char*, n : DimT, x : Void*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun iprintv = bli_iprintv(s1 : LibC::Char*, n : DimT, x : Void*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun sprintm = bli_sprintm(s1 : LibC::Char*, m : DimT, n : DimT, x : Void*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun dprintm = bli_dprintm(s1 : LibC::Char*, m : DimT, n : DimT, x : Void*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun cprintm = bli_cprintm(s1 : LibC::Char*, m : DimT, n : DimT, x : Void*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun zprintm = bli_zprintm(s1 : LibC::Char*, m : DimT, n : DimT, x : Void*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun iprintm = bli_iprintm(s1 : LibC::Char*, m : DimT, n : DimT, x : Void*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun srandv = bli_srandv(n : DimT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun drandv = bli_drandv(n : DimT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun crandv = bli_crandv(n : DimT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zrandv = bli_zrandv(n : DimT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun srandnv = bli_srandnv(n : DimT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun drandnv = bli_drandnv(n : DimT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun crandnv = bli_crandnv(n : DimT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zrandnv = bli_zrandnv(n : DimT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun srandm = bli_srandm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun drandm = bli_drandm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun crandm = bli_crandm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zrandm = bli_zrandm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun srandnm = bli_srandnm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun drandnm = bli_drandnm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun crandnm = bli_crandnm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zrandnm = bli_zrandnm(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun ssumsqv = bli_ssumsqv(n : DimT, x : LibC::Float*, incx : IncT, scale : LibC::Float*, sumsq : LibC::Float*, cntx : CntxT*)
  fun dsumsqv = bli_dsumsqv(n : DimT, x : LibC::Double*, incx : IncT, scale : LibC::Double*, sumsq : LibC::Double*, cntx : CntxT*)
  fun csumsqv = bli_csumsqv(n : DimT, x : Scomplex*, incx : IncT, scale : LibC::Float*, sumsq : LibC::Float*, cntx : CntxT*)
  fun zsumsqv = bli_zsumsqv(n : DimT, x : Dcomplex*, incx : IncT, scale : LibC::Double*, sumsq : LibC::Double*, cntx : CntxT*)
  fun sasumv_unb_var1 = bli_sasumv_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, asum : LibC::Float*, cntx : CntxT*)
  fun dasumv_unb_var1 = bli_dasumv_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, asum : LibC::Double*, cntx : CntxT*)
  fun casumv_unb_var1 = bli_casumv_unb_var1(n : DimT, x : Scomplex*, incx : IncT, asum : LibC::Float*, cntx : CntxT*)
  fun zasumv_unb_var1 = bli_zasumv_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, asum : LibC::Double*, cntx : CntxT*)
  fun smkherm_unb_var1 = bli_smkherm_unb_var1(uploa : UploT, m : DimT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dmkherm_unb_var1 = bli_dmkherm_unb_var1(uploa : UploT, m : DimT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cmkherm_unb_var1 = bli_cmkherm_unb_var1(uploa : UploT, m : DimT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zmkherm_unb_var1 = bli_zmkherm_unb_var1(uploa : UploT, m : DimT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun smksymm_unb_var1 = bli_smksymm_unb_var1(uploa : UploT, m : DimT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dmksymm_unb_var1 = bli_dmksymm_unb_var1(uploa : UploT, m : DimT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cmksymm_unb_var1 = bli_cmksymm_unb_var1(uploa : UploT, m : DimT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zmksymm_unb_var1 = bli_zmksymm_unb_var1(uploa : UploT, m : DimT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun smktrim_unb_var1 = bli_smktrim_unb_var1(uploa : UploT, m : DimT, a : LibC::Float*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun dmktrim_unb_var1 = bli_dmktrim_unb_var1(uploa : UploT, m : DimT, a : LibC::Double*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun cmktrim_unb_var1 = bli_cmktrim_unb_var1(uploa : UploT, m : DimT, a : Scomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun zmktrim_unb_var1 = bli_zmktrim_unb_var1(uploa : UploT, m : DimT, a : Dcomplex*, rs_a : IncT, cs_a : IncT, cntx : CntxT*)
  fun snorm1v_unb_var1 = bli_snorm1v_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnorm1v_unb_var1 = bli_dnorm1v_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnorm1v_unb_var1 = bli_cnorm1v_unb_var1(n : DimT, x : Scomplex*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znorm1v_unb_var1 = bli_znorm1v_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormfv_unb_var1 = bli_snormfv_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormfv_unb_var1 = bli_dnormfv_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormfv_unb_var1 = bli_cnormfv_unb_var1(n : DimT, x : Scomplex*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormfv_unb_var1 = bli_znormfv_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormiv_unb_var1 = bli_snormiv_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormiv_unb_var1 = bli_dnormiv_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormiv_unb_var1 = bli_cnormiv_unb_var1(n : DimT, x : Scomplex*, incx : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormiv_unb_var1 = bli_znormiv_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snorm1m_unb_var1 = bli_snorm1m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnorm1m_unb_var1 = bli_dnorm1m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnorm1m_unb_var1 = bli_cnorm1m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znorm1m_unb_var1 = bli_znorm1m_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormfm_unb_var1 = bli_snormfm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormfm_unb_var1 = bli_dnormfm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormfm_unb_var1 = bli_cnormfm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormfm_unb_var1 = bli_znormfm_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun snormim_unb_var1 = bli_snormim_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun dnormim_unb_var1 = bli_dnormim_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun cnormim_unb_var1 = bli_cnormim_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Float*, cntx : CntxT*)
  fun znormim_unb_var1 = bli_znormim_unb_var1(diagoffx : DoffT, diagx : DiagT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, norm : LibC::Double*, cntx : CntxT*)
  fun sfprintv = bli_sfprintv(file : File*, s1 : LibC::Char*, n : DimT, x : LibC::Float*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun dfprintv = bli_dfprintv(file : File*, s1 : LibC::Char*, n : DimT, x : LibC::Double*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun cfprintv = bli_cfprintv(file : File*, s1 : LibC::Char*, n : DimT, x : Scomplex*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun zfprintv = bli_zfprintv(file : File*, s1 : LibC::Char*, n : DimT, x : Dcomplex*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun ifprintv = bli_ifprintv(file : File*, s1 : LibC::Char*, n : DimT, x : GintT*, incx : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun sfprintm = bli_sfprintm(file : File*, s1 : LibC::Char*, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun dfprintm = bli_dfprintm(file : File*, s1 : LibC::Char*, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun cfprintm = bli_cfprintm(file : File*, s1 : LibC::Char*, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun zfprintm = bli_zfprintm(file : File*, s1 : LibC::Char*, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun ifprintm = bli_ifprintm(file : File*, s1 : LibC::Char*, m : DimT, n : DimT, x : GintT*, rs_x : IncT, cs_x : IncT, format : LibC::Char*, s2 : LibC::Char*)
  fun srandv_unb_var1 = bli_srandv_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun drandv_unb_var1 = bli_drandv_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun crandv_unb_var1 = bli_crandv_unb_var1(n : DimT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zrandv_unb_var1 = bli_zrandv_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun srandnv_unb_var1 = bli_srandnv_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, cntx : CntxT*)
  fun drandnv_unb_var1 = bli_drandnv_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, cntx : CntxT*)
  fun crandnv_unb_var1 = bli_crandnv_unb_var1(n : DimT, x : Scomplex*, incx : IncT, cntx : CntxT*)
  fun zrandnv_unb_var1 = bli_zrandnv_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, cntx : CntxT*)
  fun srandm_unb_var1 = bli_srandm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun drandm_unb_var1 = bli_drandm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun crandm_unb_var1 = bli_crandm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zrandm_unb_var1 = bli_zrandm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun srandnm_unb_var1 = bli_srandnm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Float*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun drandnm_unb_var1 = bli_drandnm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : LibC::Double*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun crandnm_unb_var1 = bli_crandnm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Scomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun zrandnm_unb_var1 = bli_zrandnm_unb_var1(diagoffx : DoffT, uplox : UploT, m : DimT, n : DimT, x : Dcomplex*, rs_x : IncT, cs_x : IncT, cntx : CntxT*)
  fun ssumsqv_unb_var1 = bli_ssumsqv_unb_var1(n : DimT, x : LibC::Float*, incx : IncT, scale : LibC::Float*, sumsq : LibC::Float*, cntx : CntxT*)
  fun dsumsqv_unb_var1 = bli_dsumsqv_unb_var1(n : DimT, x : LibC::Double*, incx : IncT, scale : LibC::Double*, sumsq : LibC::Double*, cntx : CntxT*)
  fun csumsqv_unb_var1 = bli_csumsqv_unb_var1(n : DimT, x : Scomplex*, incx : IncT, scale : LibC::Float*, sumsq : LibC::Float*, cntx : CntxT*)
  fun zsumsqv_unb_var1 = bli_zsumsqv_unb_var1(n : DimT, x : Dcomplex*, incx : IncT, scale : LibC::Double*, sumsq : LibC::Double*, cntx : CntxT*)
end
